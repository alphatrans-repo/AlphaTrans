{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
    "imports": {
        "20-20:import EncoderException": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.codec.EncoderException;\n"
            ]
        },
        "21-21:import StringEncoder": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.codec.StringEncoder;\n"
            ]
        }
    },
    "classes": {
        "BeiderMorseEncoder": {
            "start": 81,
            "end": 81,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [
                "StringEncoder"
            ],
            "extends": [],
            "methods": {
                "100-102:encode": {
                    "start": 100,
                    "end": 102,
                    "body": [
                        "    public String encode(final String source) throws EncoderException {\n",
                        "        return encode1(source);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "encode(String)",
                    "parameters": [
                        "source"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.BeiderMorseEncoder",
                            "BeiderMorseEncoder",
                            "104-109:encode1"
                        ]
                    ],
                    "is_overload": true,
                    "partial_translation": [
                        "    def encode(self, source: str) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "87-89:encode": {
                    "start": 87,
                    "end": 89,
                    "body": [
                        "    public Object encode(final Object source) throws EncoderException {\n",
                        "        return encode0(source);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "encode(Object)",
                    "parameters": [
                        "source"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.BeiderMorseEncoder",
                            "BeiderMorseEncoder",
                            "91-97:encode0"
                        ]
                    ],
                    "is_overload": true,
                    "partial_translation": [
                        "    def encode(self, source: typing.Any) -> typing.Any:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "190-197:setMaxPhonemes": {
                    "start": 190,
                    "end": 197,
                    "body": [
                        "    public void setMaxPhonemes(final int maxPhonemes) {\n",
                        "        this.engine =\n",
                        "                new PhoneticEngine(\n",
                        "                        this.engine.getNameType(),\n",
                        "                        this.engine.getRuleType(),\n",
                        "                        this.engine.isConcat(),\n",
                        "                        maxPhonemes);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setMaxPhonemes(int)",
                    "parameters": [
                        "maxPhonemes"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "320-333:PhoneticEngine"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "495-497:getNameType"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "504-506:getRuleType"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "513-515:isConcat"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def setMaxPhonemes(self, maxPhonemes: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "175-182:setRuleType": {
                    "start": 175,
                    "end": 182,
                    "body": [
                        "    public void setRuleType(final RuleType ruleType) {\n",
                        "        this.engine =\n",
                        "                new PhoneticEngine(\n",
                        "                        this.engine.getNameType(),\n",
                        "                        ruleType,\n",
                        "                        this.engine.isConcat(),\n",
                        "                        this.engine.getMaxPhonemes());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setRuleType(RuleType)",
                    "parameters": [
                        "ruleType"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "320-333:PhoneticEngine"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "495-497:getNameType"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "513-515:isConcat"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "523-525:getMaxPhonemes"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def setRuleType(self, ruleType: RuleType) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "159-166:setNameType": {
                    "start": 159,
                    "end": 166,
                    "body": [
                        "    public void setNameType(final NameType nameType) {\n",
                        "        this.engine =\n",
                        "                new PhoneticEngine(\n",
                        "                        nameType,\n",
                        "                        this.engine.getRuleType(),\n",
                        "                        this.engine.isConcat(),\n",
                        "                        this.engine.getMaxPhonemes());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setNameType(NameType)",
                    "parameters": [
                        "nameType"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "320-333:PhoneticEngine"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "504-506:getRuleType"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "513-515:isConcat"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "523-525:getMaxPhonemes"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def setNameType(self, nameType: NameType) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "144-151:setConcat": {
                    "start": 144,
                    "end": 151,
                    "body": [
                        "    public void setConcat(final boolean concat) {\n",
                        "        this.engine =\n",
                        "                new PhoneticEngine(\n",
                        "                        this.engine.getNameType(),\n",
                        "                        this.engine.getRuleType(),\n",
                        "                        concat,\n",
                        "                        this.engine.getMaxPhonemes());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setConcat(boolean)",
                    "parameters": [
                        "concat"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "320-333:PhoneticEngine"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "495-497:getNameType"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "504-506:getRuleType"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "523-525:getMaxPhonemes"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def setConcat(self, concat: bool) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "134-136:isConcat": {
                    "start": 134,
                    "end": 136,
                    "body": [
                        "    public boolean isConcat() {\n",
                        "        return this.engine.isConcat();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isConcat()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "513-515:isConcat"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def isConcat(self) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "125-127:getRuleType": {
                    "start": 125,
                    "end": 127,
                    "body": [
                        "    public RuleType getRuleType() {\n",
                        "        return this.engine.getRuleType();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "RuleType",
                            "RuleType"
                        ]
                    ],
                    "signature": "getRuleType()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "504-506:getRuleType"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def getRuleType(self) -> RuleType:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "116-118:getNameType": {
                    "start": 116,
                    "end": 118,
                    "body": [
                        "    public NameType getNameType() {\n",
                        "        return this.engine.getNameType();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "NameType",
                            "NameType"
                        ]
                    ],
                    "signature": "getNameType()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "495-497:getNameType"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def getNameType(self) -> NameType:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "104-109:encode1": {
                    "start": 104,
                    "end": 109,
                    "body": [
                        "    public String encode1(final String source) throws EncoderException {\n",
                        "        if (source == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        return this.engine.encode0(source);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "encode1(String)",
                    "parameters": [
                        "source"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.PhoneticEngine",
                            "PhoneticEngine",
                            "391-394:encode0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encode1(self, source: str) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "91-97:encode0": {
                    "start": 91,
                    "end": 97,
                    "body": [
                        "    public Object encode0(final Object source) throws EncoderException {\n",
                        "        if (!(source instanceof String)) {\n",
                        "            throw new EncoderException(\n",
                        "                    \"BeiderMorseEncoder encode parameter is not of type String\", null);\n",
                        "        }\n",
                        "        return encode1((String) source);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "encode0(Object)",
                    "parameters": [
                        "source"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.EncoderException",
                            "EncoderException",
                            "62-64:EncoderException"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.BeiderMorseEncoder",
                            "BeiderMorseEncoder",
                            "104-109:encode1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encode0(self, source: typing.Any) -> typing.Any:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "83-84:engine": {
                    "start": 83,
                    "end": 84,
                    "body": [
                        "    private PhoneticEngine engine =\n",
                        "            PhoneticEngine.PhoneticEngine0(NameType.GENERIC, RuleType.APPROX, true);\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "PhoneticEngine",
                            "PhoneticEngine"
                        ]
                    ],
                    "partial_translation": [
                        "    __engine: PhoneticEngine = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class BeiderMorseEncoder(StringEncoder):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import io",
        "import typing\nfrom typing import *",
        "from src.main.org.apache.commons.codec.EncoderException import *",
        "from src.main.org.apache.commons.codec.StringEncoder import *",
        "from src.main.org.apache.commons.codec.language.bm.NameType import *",
        "from src.main.org.apache.commons.codec.language.bm.PhoneticEngine import *",
        "from src.main.org.apache.commons.codec.language.bm.RuleType import *"
    ]
}