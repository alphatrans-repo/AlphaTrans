{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/JavaFastPFOR/src/test/java/me/lemire/integercompression/XorBinaryPackingTest.java",
    "imports": {
        "10-10:import Arrays": {
            "start": 10,
            "end": 10,
            "body": [
                "import java.util.Arrays;\n"
            ]
        },
        "14-14:import Test": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "12-12:import XorBinaryPacking": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.integercompression.differential.XorBinaryPacking;\n"
            ]
        },
        "16-16:import static Assert.*": {
            "start": 16,
            "end": 16,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "XorBinaryPackingTest": {
            "start": 23,
            "end": 24,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "112-118:compressAndUncompress5_test0_decomposed": {
                    "start": 112,
                    "end": 118,
                    "body": [
                        "    public void compressAndUncompress5_test0_decomposed()  {\n",
                        "        int[] data = new int[256];\n",
                        "        for (int i = 0; i < data.length; ++i) {\n",
                        "            data[i] = i;\n",
                        "        }\n",
                        "        checkCompressAndUncompress(\"compressAndUncompress5\", data);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "compressAndUncompress5_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.XorBinaryPackingTest",
                            "XorBinaryPackingTest",
                            "31-36:checkCompressAndUncompress"
                        ]
                    ]
                },
                "104-109:compressAndUncompress4_test0_decomposed": {
                    "start": 104,
                    "end": 109,
                    "body": [
                        "    public void compressAndUncompress4_test0_decomposed()  {\n",
                        "        int[] data = new int[256];\n",
                        "        Arrays.fill(data,   0, 127, 3);\n",
                        "        Arrays.fill(data, 128, 255, 2);\n",
                        "        checkCompressAndUncompress(\"compressAndUncompress4\", data);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "compressAndUncompress4_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "fill(int[],int,int,int)"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.XorBinaryPackingTest",
                            "XorBinaryPackingTest",
                            "31-36:checkCompressAndUncompress"
                        ]
                    ]
                },
                "96-101:compressAndUncompress3_test0_decomposed": {
                    "start": 96,
                    "end": 101,
                    "body": [
                        "    public void compressAndUncompress3_test0_decomposed()  {\n",
                        "        int[] data = new int[256];\n",
                        "        Arrays.fill(data,   0, 127, 2);\n",
                        "        Arrays.fill(data, 128, 255, 3);\n",
                        "        checkCompressAndUncompress(\"compressAndUncompress3\", data);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "compressAndUncompress3_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "fill(int[],int,int,int)"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.XorBinaryPackingTest",
                            "XorBinaryPackingTest",
                            "31-36:checkCompressAndUncompress"
                        ]
                    ]
                },
                "87-93:compressAndUncompress2_test0_decomposed": {
                    "start": 87,
                    "end": 93,
                    "body": [
                        "    public void compressAndUncompress2_test0_decomposed()  {\n",
                        "        int[] data = new int[128];\n",
                        "        for (int i = 0; i < data.length; ++i) {\n",
                        "            data[i] = i * (i + 1) / 2;\n",
                        "        }\n",
                        "        checkCompressAndUncompress(\"compressAndUncompress2\", data);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "compressAndUncompress2_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.XorBinaryPackingTest",
                            "XorBinaryPackingTest",
                            "31-36:checkCompressAndUncompress"
                        ]
                    ]
                },
                "78-84:compressAndUncompress1_test0_decomposed": {
                    "start": 78,
                    "end": 84,
                    "body": [
                        "    public void compressAndUncompress1_test0_decomposed()  {\n",
                        "        int[] data = new int[128];\n",
                        "        for (int i = 0; i < data.length; ++i) {\n",
                        "            data[i] = i;\n",
                        "        }\n",
                        "        checkCompressAndUncompress(\"compressAndUncompress1\", data);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "compressAndUncompress1_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.XorBinaryPackingTest",
                            "XorBinaryPackingTest",
                            "31-36:checkCompressAndUncompress"
                        ]
                    ]
                },
                "68-75:compressAndUncompress0_test0_decomposed": {
                    "start": 68,
                    "end": 75,
                    "body": [
                        "    public void compressAndUncompress0_test0_decomposed()  {\n",
                        "        int[] data = new int[128];\n",
                        "        Arrays.fill(data,  0,  31, 1);\n",
                        "        Arrays.fill(data, 32,  63, 2);\n",
                        "        Arrays.fill(data, 64,  95, 4);\n",
                        "        Arrays.fill(data, 96, 127, 8);\n",
                        "        checkCompressAndUncompress(\"compressAndUncompress0\", data);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "compressAndUncompress0_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "fill(int[],int,int,int)"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.XorBinaryPackingTest",
                            "XorBinaryPackingTest",
                            "31-36:checkCompressAndUncompress"
                        ]
                    ]
                },
                "23-25:XorBinaryPackingTest": {
                    "start": 23,
                    "end": 25,
                    "body": [
                        "public final class XorBinaryPackingTest\n",
                        "{\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "XorBinaryPackingTest()",
                    "parameters": [],
                    "calls": []
                },
                "31-36:checkCompressAndUncompress": {
                    "start": 31,
                    "end": 36,
                    "body": [
                        "    private static void checkCompressAndUncompress(String label, int[] data) {\n",
                        "        XorBinaryPacking codec = new XorBinaryPacking();\n",
                        "        int[] compBuf = TestUtils.compress1(codec, data);\n",
                        "        int[] decompBuf = TestUtils.uncompress0(codec, compBuf, data.length);\n",
                        "        assertArrayEquals(data, decompBuf);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkCompressAndUncompress(String, int[])",
                    "parameters": [
                        "label",
                        "data"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.XorBinaryPacking",
                            "XorBinaryPacking",
                            "XorBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "87-93:compress1"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "95-101:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(int[],int[])"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}