{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
    "imports": {
        "20-20:import EncoderException": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.codec.EncoderException;\n"
            ]
        },
        "23-23:import Test": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "21-21:import StringEncoderAbstractTest": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.codec.StringEncoderAbstractTest;\n"
            ]
        },
        "22-22:import Assert": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.junit.Assert;\n"
            ]
        }
    },
    "classes": {
        "Caverphone1Test": {
            "start": 30,
            "end": 30,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "StringEncoderAbstractTest"
            ],
            "methods": {
                "108-111:testWikipediaExamples_test0_decomposed": {
                    "start": 108,
                    "end": 111,
                    "body": [
                        "    public void testWikipediaExamples_test0_decomposed() throws EncoderException {\n",
                        "        final String[][] data = {{\"Lee\", \"L11111\"}, {\"Thompson\", \"TMPSN1\"}};\n",
                        "        this.checkEncodings(data);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testWikipediaExamples_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/codec/StringEncoderAbstractTest",
                            "checkEncodings(java.lang.String[][])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testWikipediaExamples_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "102-105:testSpecificationV1Examples_test0_decomposed": {
                    "start": 102,
                    "end": 105,
                    "body": [
                        "    public void testSpecificationV1Examples_test0_decomposed() throws EncoderException {\n",
                        "        final String[][] data = {{\"David\", \"TFT111\"}, {\"Whittle\", \"WTL111\"}};\n",
                        "        this.checkEncodings(data);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSpecificationV1Examples_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/codec/StringEncoderAbstractTest",
                            "checkEncodings(java.lang.String[][])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSpecificationV1Examples_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "92-99:testIsCaverphoneEquals_test1_decomposed": {
                    "start": 92,
                    "end": 99,
                    "body": [
                        "    public void testIsCaverphoneEquals_test1_decomposed() throws EncoderException {\n",
                        "        final Caverphone1 caverphone = new Caverphone1();\n",
                        "        Assert.assertFalse(\n",
                        "                \"Caverphone encodings should not be equal\",\n",
                        "                caverphone.isEncodeEqual(\"Peter\", \"Stevenson\"));\n",
                        "        Assert.assertTrue(\n",
                        "                \"Caverphone encodings should be equal\", caverphone.isEncodeEqual(\"Peter\", \"Peady\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testIsCaverphoneEquals_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.Caverphone1",
                            "Caverphone1",
                            "Caverphone1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.AbstractCaverphone",
                            "AbstractCaverphone",
                            "70-72:isEncodeEqual"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testIsCaverphoneEquals_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "87-89:testIsCaverphoneEquals_test0_decomposed": {
                    "start": 87,
                    "end": 89,
                    "body": [
                        "    public void testIsCaverphoneEquals_test0_decomposed() throws EncoderException {\n",
                        "        final Caverphone1 caverphone = new Caverphone1();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testIsCaverphoneEquals_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.Caverphone1",
                            "Caverphone1",
                            "Caverphone1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testIsCaverphoneEquals_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "81-84:testEndMb_test0_decomposed": {
                    "start": 81,
                    "end": 84,
                    "body": [
                        "    public void testEndMb_test0_decomposed() throws EncoderException {\n",
                        "        final String[][] data = {{\"mb\", \"M11111\"}, {\"mbmb\", \"MPM111\"}};\n",
                        "        this.checkEncodings(data);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEndMb_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/codec/StringEncoderAbstractTest",
                            "checkEncodings(java.lang.String[][])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEndMb_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "71-78:testCaverphoneRevisitedCommonCodeAT1111_test0_decomposed": {
                    "start": 71,
                    "end": 78,
                    "body": [
                        "    public void testCaverphoneRevisitedCommonCodeAT1111_test0_decomposed() throws EncoderException {\n",
                        "        this.checkEncodingVariations(\n",
                        "                \"AT1111\",\n",
                        "                new String[] {\n",
                        "                    \"add\", \"aid\", \"at\", \"art\", \"eat\", \"earth\", \"head\", \"hit\", \"hot\", \"hold\", \"hard\",\n",
                        "                    \"heart\", \"it\", \"out\", \"old\"\n",
                        "                });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCaverphoneRevisitedCommonCodeAT1111_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/codec/StringEncoderAbstractTest",
                            "checkEncodingVariations(java.lang.String,java.lang.String[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCaverphoneRevisitedCommonCodeAT1111_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "33-35:createStringEncoder": {
                    "start": 33,
                    "end": 35,
                    "body": [
                        "    protected Caverphone1 createStringEncoder() {\n",
                        "        return new Caverphone1();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "Caverphone1",
                            "Caverphone1"
                        ]
                    ],
                    "signature": "createStringEncoder()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.Caverphone1",
                            "Caverphone1",
                            "Caverphone1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _createStringEncoder(self) -> Caverphone1:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class Caverphone1Test(StringEncoderAbstractTest, unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import os",
        "import unittest",
        "from src.main.org.apache.commons.codec.EncoderException import *",
        "from src.main.org.apache.commons.codec.StringEncoder import *",
        "from src.test.org.apache.commons.codec.StringEncoderAbstractTest import *",
        "from src.main.org.apache.commons.codec.language.Caverphone1 import *"
    ]
}