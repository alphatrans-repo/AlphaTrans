{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/test/java/org/apache/commons/graph/shortestpath/DijkstraTestCase.java",
    "imports": {
        "25-25:import Graph": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "32-32:import UndirectedMutableGraph": {
            "start": 32,
            "end": 32,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "30-30:import DirectedMutableGraph": {
            "start": 30,
            "end": 30,
            "body": [
                "import org.apache.commons.graph.model.DirectedMutableGraph;\n"
            ]
        },
        "26-26:import Path": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.graph.Path;\n"
            ]
        },
        "34-34:import Test": {
            "start": 34,
            "end": 34,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "28-28:import BaseLabeledWeightedEdge": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.apache.commons.graph.model.BaseLabeledWeightedEdge;\n"
            ]
        },
        "27-27:import BaseLabeledVertex": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.apache.commons.graph.model.BaseLabeledVertex;\n"
            ]
        },
        "29-29:import BaseWeightedEdge": {
            "start": 29,
            "end": 29,
            "body": [
                "import org.apache.commons.graph.model.BaseWeightedEdge;\n"
            ]
        },
        "31-31:import InMemoryWeightedPath": {
            "start": 31,
            "end": 31,
            "body": [
                "import org.apache.commons.graph.model.InMemoryWeightedPath;\n"
            ]
        },
        "33-33:import DoubleWeightBaseOperations": {
            "start": 33,
            "end": 33,
            "body": [
                "import org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations;\n"
            ]
        },
        "23-23:import static Assert.assertEquals": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        },
        "22-22:import static CommonsGraph.findShortestPath": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.CommonsGraph.findShortestPath;\n"
            ]
        }
    },
    "classes": {
        "DijkstraTestCase": {
            "start": 36,
            "end": 36,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "732-744:testNullVertices_test4_decomposed": {
                    "start": 732,
                    "end": 744,
                    "body": [
                        "    public void testNullVertices_test4_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null).to(null);\n",
                        "        findShortestPath(graph)\n",
                        "                .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                .from(null)\n",
                        "                .to(null)\n",
                        "                .applyingDijkstra(new DoubleWeightBaseOperations());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullVertices_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullVertices_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "722-729:testNullVertices_test3_decomposed": {
                    "start": 722,
                    "end": 729,
                    "body": [
                        "    public void testNullVertices_test3_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null).to(null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullVertices_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullVertices_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "713-719:testNullVertices_test2_decomposed": {
                    "start": 713,
                    "end": 719,
                    "body": [
                        "    public void testNullVertices_test2_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullVertices_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullVertices_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "705-710:testNullVertices_test1_decomposed": {
                    "start": 705,
                    "end": 710,
                    "body": [
                        "    public void testNullVertices_test1_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullVertices_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullVertices_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "698-702:testNullVertices_test0_decomposed": {
                    "start": 698,
                    "end": 702,
                    "body": [
                        "    public void testNullVertices_test0_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        findShortestPath(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullVertices_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullVertices_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "679-695:testNullMonoid_test7_decomposed": {
                    "start": 679,
                    "end": 695,
                    "body": [
                        "    public void testNullMonoid_test7_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(b);\n",
                        "        findShortestPath(graph)\n",
                        "                .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                .from(a)\n",
                        "                .to(b)\n",
                        "                .applyingDijkstra(null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullMonoid_test7_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "665-676:testNullMonoid_test6_decomposed": {
                    "start": 665,
                    "end": 676,
                    "body": [
                        "    public void testNullMonoid_test6_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(b);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullMonoid_test6_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "652-662:testNullMonoid_test5_decomposed": {
                    "start": 652,
                    "end": 662,
                    "body": [
                        "    public void testNullMonoid_test5_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullMonoid_test5_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "640-649:testNullMonoid_test4_decomposed": {
                    "start": 640,
                    "end": 649,
                    "body": [
                        "    public void testNullMonoid_test4_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullMonoid_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "629-637:testNullMonoid_test3_decomposed": {
                    "start": 629,
                    "end": 637,
                    "body": [
                        "    public void testNullMonoid_test3_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullMonoid_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "619-626:testNullMonoid_test2_decomposed": {
                    "start": 619,
                    "end": 626,
                    "body": [
                        "    public void testNullMonoid_test2_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullMonoid_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "611-616:testNullMonoid_test1_decomposed": {
                    "start": 611,
                    "end": 616,
                    "body": [
                        "    public void testNullMonoid_test1_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullMonoid_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "604-608:testNullMonoid_test0_decomposed": {
                    "start": 604,
                    "end": 608,
                    "body": [
                        "    public void testNullMonoid_test0_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullMonoid_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "591-601:testNullGraph_test4_decomposed": {
                    "start": 591,
                    "end": 601,
                    "body": [
                        "    public void testNullGraph_test4_decomposed()  {\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null).to(null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null)\n",
                        "                .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                .from(null)\n",
                        "                .to(null)\n",
                        "                .applyingDijkstra(new DoubleWeightBaseOperations());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullGraph_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullGraph_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "583-588:testNullGraph_test3_decomposed": {
                    "start": 583,
                    "end": 588,
                    "body": [
                        "    public void testNullGraph_test3_decomposed()  {\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null).to(null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullGraph_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullGraph_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "576-580:testNullGraph_test2_decomposed": {
                    "start": 576,
                    "end": 580,
                    "body": [
                        "    public void testNullGraph_test2_decomposed()  {\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullGraph_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullGraph_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "570-573:testNullGraph_test1_decomposed": {
                    "start": 570,
                    "end": 573,
                    "body": [
                        "    public void testNullGraph_test1_decomposed()  {\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullGraph_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullGraph_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "565-567:testNullGraph_test0_decomposed": {
                    "start": 565,
                    "end": 567,
                    "body": [
                        "    public void testNullGraph_test0_decomposed()  {\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullGraph_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullGraph_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "546-562:testNotConnectGraph_test7_decomposed": {
                    "start": 546,
                    "end": 562,
                    "body": [
                        "    public void testNotConnectGraph_test7_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(b);\n",
                        "        findShortestPath(graph)\n",
                        "                .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                .from(a)\n",
                        "                .to(b)\n",
                        "                .applyingDijkstra(new DoubleWeightBaseOperations());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = PathNotFoundException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotConnectGraph_test7_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "532-543:testNotConnectGraph_test6_decomposed": {
                    "start": 532,
                    "end": 543,
                    "body": [
                        "    public void testNotConnectGraph_test6_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(b);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotConnectGraph_test6_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "519-529:testNotConnectGraph_test5_decomposed": {
                    "start": 519,
                    "end": 529,
                    "body": [
                        "    public void testNotConnectGraph_test5_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotConnectGraph_test5_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "507-516:testNotConnectGraph_test4_decomposed": {
                    "start": 507,
                    "end": 516,
                    "body": [
                        "    public void testNotConnectGraph_test4_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotConnectGraph_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "496-504:testNotConnectGraph_test3_decomposed": {
                    "start": 496,
                    "end": 504,
                    "body": [
                        "    public void testNotConnectGraph_test3_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotConnectGraph_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "486-493:testNotConnectGraph_test2_decomposed": {
                    "start": 486,
                    "end": 493,
                    "body": [
                        "    public void testNotConnectGraph_test2_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotConnectGraph_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "478-483:testNotConnectGraph_test1_decomposed": {
                    "start": 478,
                    "end": 483,
                    "body": [
                        "    public void testNotConnectGraph_test1_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotConnectGraph_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "471-475:testNotConnectGraph_test0_decomposed": {
                    "start": 471,
                    "end": 475,
                    "body": [
                        "    public void testNotConnectGraph_test0_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotConnectGraph_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "423-468:testFindShortestPathAndVerify_test15_decomposed": {
                    "start": 423,
                    "end": 468,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test15_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one).to(five);\n",
                        "        Path<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                findShortestPath(graph)\n",
                        "                        .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                        .from(one)\n",
                        "                        .to(five)\n",
                        "                        .applyingDijkstra(new DoubleWeightBaseOperations());\n",
                        "        assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test15_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test15_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "376-420:testFindShortestPathAndVerify_test14_decomposed": {
                    "start": 376,
                    "end": 420,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test14_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one).to(five);\n",
                        "        Path<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                findShortestPath(graph)\n",
                        "                        .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                        .from(one)\n",
                        "                        .to(five)\n",
                        "                        .applyingDijkstra(new DoubleWeightBaseOperations());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test14_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test14_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "335-373:testFindShortestPathAndVerify_test13_decomposed": {
                    "start": 335,
                    "end": 373,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test13_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one).to(five);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test13_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test13_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "295-332:testFindShortestPathAndVerify_test12_decomposed": {
                    "start": 295,
                    "end": 332,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test12_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test12_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test12_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "256-292:testFindShortestPathAndVerify_test11_decomposed": {
                    "start": 256,
                    "end": 292,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test11_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test11_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "218-253:testFindShortestPathAndVerify_test10_decomposed": {
                    "start": 218,
                    "end": 253,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test10_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test10_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "181-215:testFindShortestPathAndVerify_test9_decomposed": {
                    "start": 181,
                    "end": 215,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test9_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test9_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "146-178:testFindShortestPathAndVerify_test8_decomposed": {
                    "start": 146,
                    "end": 178,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test8_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test8_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "119-143:testFindShortestPathAndVerify_test7_decomposed": {
                    "start": 119,
                    "end": 143,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test7_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test7_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "101-116:testFindShortestPathAndVerify_test6_decomposed": {
                    "start": 101,
                    "end": 116,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test6_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test6_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "89-98:testFindShortestPathAndVerify_test5_decomposed": {
                    "start": 89,
                    "end": 98,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test5_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test5_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "78-86:testFindShortestPathAndVerify_test4_decomposed": {
                    "start": 78,
                    "end": 86,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test4_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "68-75:testFindShortestPathAndVerify_test3_decomposed": {
                    "start": 68,
                    "end": 75,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test3_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "59-65:testFindShortestPathAndVerify_test2_decomposed": {
                    "start": 59,
                    "end": 65,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test2_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "51-56:testFindShortestPathAndVerify_test1_decomposed": {
                    "start": 51,
                    "end": 56,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test1_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "44-48:testFindShortestPathAndVerify_test0_decomposed": {
                    "start": 44,
                    "end": 48,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test0_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFindShortestPathAndVerify_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class DijkstraTestCase(unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import pathlib",
        "import io",
        "import os",
        "import unittest",
        "from src.main.org.apache.commons.graph.CommonsGraph import *",
        "from src.main.org.apache.commons.graph.Graph import *",
        "from src.main.org.apache.commons.graph.Mapper import *",
        "from src.main.org.apache.commons.graph.WeightedPath import *",
        "from src.test.org.apache.commons.graph.model.BaseLabeledVertex import *",
        "from src.test.org.apache.commons.graph.model.BaseLabeledWeightedEdge import *",
        "from src.test.org.apache.commons.graph.model.BaseWeightedEdge import *",
        "from src.main.org.apache.commons.graph.model.DirectedMutableGraph import *",
        "from src.main.org.apache.commons.graph.model.InMemoryWeightedPath import *",
        "from src.main.org.apache.commons.graph.model.UndirectedMutableGraph import *",
        "from src.main.org.apache.commons.graph.shortestpath.PathSourceSelector import *",
        "from src.main.org.apache.commons.graph.shortestpath.PathWeightedEdgesBuilder import *",
        "from src.main.org.apache.commons.graph.shortestpath.ShortestPathAlgorithmSelector import *",
        "from src.main.org.apache.commons.graph.shortestpath.TargetSourceSelector import *",
        "from src.main.org.apache.commons.graph.weight.Monoid import *",
        "from src.main.org.apache.commons.graph.weight.OrderedMonoid import *",
        "from src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations import *"
    ]
}