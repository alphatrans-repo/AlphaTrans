{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/visit/BaseGraphVisitHandler.java",
    "imports": {
        "24-24:import Graph": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "22-22:import static VisitState.CONTINUE": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.visit.VisitState.CONTINUE;\n"
            ]
        }
    },
    "classes": {
        "BaseGraphVisitHandler": {
            "start": 32,
            "end": 33,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [
                "GraphVisitHandler"
            ],
            "extends": [],
            "methods": {
                "62-64:onCompleted": {
                    "start": 62,
                    "end": 64,
                    "body": [
                        "    public O onCompleted() {\n",
                        "        return null;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "O",
                            "O"
                        ]
                    ],
                    "signature": "onCompleted()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def onCompleted(self) -> typing.Any:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "57-59:finishVertex": {
                    "start": 57,
                    "end": 59,
                    "body": [
                        "    public VisitState finishVertex(V vertex) {\n",
                        "        return CONTINUE;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "VisitState",
                            "VisitState"
                        ]
                    ],
                    "signature": "finishVertex(V)",
                    "parameters": [
                        "vertex"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def finishVertex(self, vertex: typing.Any) -> VisitState:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "54-54:finishGraph": {
                    "start": 54,
                    "end": 54,
                    "body": [
                        "    public void finishGraph(G graph) {}\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "finishGraph(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def finishGraph(self, graph: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "49-51:finishEdge": {
                    "start": 49,
                    "end": 51,
                    "body": [
                        "    public VisitState finishEdge(V head, E edge, V tail) {\n",
                        "        return CONTINUE;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "VisitState",
                            "VisitState"
                        ]
                    ],
                    "signature": "finishEdge(V, E, V)",
                    "parameters": [
                        "head",
                        "edge",
                        "tail"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def finishEdge(self, head: typing.Any, edge: typing.Any, tail: typing.Any) -> VisitState:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "44-46:discoverVertex": {
                    "start": 44,
                    "end": 46,
                    "body": [
                        "    public VisitState discoverVertex(V vertex) {\n",
                        "        return CONTINUE;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "VisitState",
                            "VisitState"
                        ]
                    ],
                    "signature": "discoverVertex(V)",
                    "parameters": [
                        "vertex"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def discoverVertex(self, vertex: typing.Any) -> VisitState:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "41-41:discoverGraph": {
                    "start": 41,
                    "end": 41,
                    "body": [
                        "    public void discoverGraph(G graph) {}\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "discoverGraph(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def discoverGraph(self, graph: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "36-38:discoverEdge": {
                    "start": 36,
                    "end": 38,
                    "body": [
                        "    public VisitState discoverEdge(V head, E edge, V tail) {\n",
                        "        return CONTINUE;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "VisitState",
                            "VisitState"
                        ]
                    ],
                    "signature": "discoverEdge(V, E, V)",
                    "parameters": [
                        "head",
                        "edge",
                        "tail"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def discoverEdge(self, head: typing.Any, edge: typing.Any, tail: typing.Any) -> VisitState:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class BaseGraphVisitHandler(GraphVisitHandler):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import io",
        "import typing\nfrom typing import *",
        "from src.main.org.apache.commons.graph.Graph import *",
        "from src.main.org.apache.commons.graph.visit.GraphVisitHandler import *",
        "from src.main.org.apache.commons.graph.visit.VisitState import *"
    ]
}