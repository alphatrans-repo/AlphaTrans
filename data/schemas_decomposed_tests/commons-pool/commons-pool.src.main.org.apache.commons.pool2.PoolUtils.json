{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-pool/src/main/java/org/apache/commons/pool2/PoolUtils.java",
    "imports": {
        "23-23:import Map": {
            "start": 23,
            "end": 23,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "19-19:import Collection": {
            "start": 19,
            "end": 19,
            "body": [
                "import java.util.Collection;\n"
            ]
        },
        "22-22:import Iterator": {
            "start": 22,
            "end": 22,
            "body": [
                "import java.util.Iterator;\n"
            ]
        },
        "20-20:import Collections": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.util.Collections;\n"
            ]
        },
        "21-21:import HashMap": {
            "start": 21,
            "end": 21,
            "body": [
                "import java.util.HashMap;\n"
            ]
        },
        "24-24:import NoSuchElementException": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.util.NoSuchElementException;\n"
            ]
        },
        "25-25:import Timer": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.util.Timer;\n"
            ]
        },
        "26-26:import TimerTask": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.util.TimerTask;\n"
            ]
        },
        "28-28:import ReadLock": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\n"
            ]
        },
        "27-27:import ReentrantReadWriteLock": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.util.concurrent.locks.ReentrantReadWriteLock;\n"
            ]
        },
        "29-29:import WriteLock": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n"
            ]
        }
    },
    "classes": {
        "ErodingFactor": {
            "start": 47,
            "end": 47,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "80-87:toString": {
                    "start": 80,
                    "end": 87,
                    "body": [
                        "        public String toString() {\n",
                        "            return \"ErodingFactor{\"\n",
                        "                    + \"factor=\"\n",
                        "                    + factor\n",
                        "                    + \", idleHighWaterMark=\"\n",
                        "                    + idleHighWaterMark\n",
                        "                    + '}';\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": []
                },
                "95-101:update": {
                    "start": 95,
                    "end": 101,
                    "body": [
                        "        public void update(final long nowMillis, final int numIdle) {\n",
                        "            final int idle = Math.max(0, numIdle);\n",
                        "            idleHighWaterMark = Math.max(idle, idleHighWaterMark);\n",
                        "            final float maxInterval = 15f;\n",
                        "            final float minutes = maxInterval + ((1f - maxInterval) / idleHighWaterMark) * idle;\n",
                        "            nextShrinkMillis = nowMillis + (long) (minutes * 60000f * factor);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "update(long, int)",
                    "parameters": [
                        "nowMillis",
                        "numIdle"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Math",
                            "max(int,int)"
                        ]
                    ]
                },
                "74-76:getNextShrink": {
                    "start": 74,
                    "end": 76,
                    "body": [
                        "        public long getNextShrink() {\n",
                        "            return nextShrinkMillis;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getNextShrink()",
                    "parameters": [],
                    "calls": []
                },
                "62-67:ErodingFactor": {
                    "start": 62,
                    "end": 67,
                    "body": [
                        "        public ErodingFactor(final float factor) {\n",
                        "            this.factor = factor;\n",
                        "            nextShrinkMillis =\n",
                        "                    System.currentTimeMillis() + (long) (900000 * factor); // now + 15 min * factor\n",
                        "            idleHighWaterMark = 1;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ErodingFactor(float)",
                    "parameters": [
                        "factor"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/System",
                            "currentTimeMillis()"
                        ]
                    ]
                }
            },
            "fields": {
                "55-55:idleHighWaterMark": {
                    "start": 55,
                    "end": 55,
                    "body": [
                        "        private transient volatile int idleHighWaterMark;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "transient",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "52-52:nextShrinkMillis": {
                    "start": 52,
                    "end": 52,
                    "body": [
                        "        private transient volatile long nextShrinkMillis;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "transient",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                },
                "49-49:factor": {
                    "start": 49,
                    "end": 49,
                    "body": [
                        "        private final float factor;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "float",
                            "float"
                        ]
                    ]
                }
            }
        },
        "PoolUtils": {
            "start": 37,
            "end": 37,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "ErodingFactor",
                "ErodingKeyedObjectPool",
                "ErodingObjectPool",
                "ErodingPerKeyKeyedObjectPool",
                "KeyedObjectPoolMinIdleTimerTask",
                "ObjectPoolMinIdleTimerTask",
                "SynchronizedKeyedObjectPool",
                "SynchronizedKeyedPooledObjectFactory",
                "SynchronizedObjectPool",
                "SynchronizedPooledObjectFactory",
                "TimerHolder"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "1439-1445:prefill2": {
                    "start": 1439,
                    "end": 1445,
                    "body": [
                        "    public static <T> void prefill2(final ObjectPool<T> pool, final int count)\n",
                        "            throws Exception, IllegalArgumentException {\n",
                        "        if (pool == null) {\n",
                        "            throw new IllegalArgumentException(MSG_NULL_POOL);\n",
                        "        }\n",
                        "        pool.addObjects(count);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "prefill2(ObjectPool<T>, int)",
                    "parameters": [
                        "pool",
                        "count"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "addObjects(int)"
                        ]
                    ]
                },
                "1419-1426:prefill1": {
                    "start": 1419,
                    "end": 1426,
                    "body": [
                        "    public static <K, V> void prefill1(\n",
                        "            final KeyedObjectPool<K, V> keyedPool, final K key, final int count)\n",
                        "            throws Exception, IllegalArgumentException {\n",
                        "        if (keyedPool == null) {\n",
                        "            throw new IllegalArgumentException(MSG_NULL_KEYED_POOL);\n",
                        "        }\n",
                        "        keyedPool.addObjects1(key, count);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "prefill1(KeyedObjectPool<K,V>, K, int)",
                    "parameters": [
                        "keyedPool",
                        "key",
                        "count"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "addObjects1(java.lang.Object,int)"
                        ]
                    ]
                },
                "1396-1403:prefill0": {
                    "start": 1396,
                    "end": 1403,
                    "body": [
                        "    public static <K, V> void prefill0(\n",
                        "            final KeyedObjectPool<K, V> keyedPool, final Collection<K> keys, final int count)\n",
                        "            throws Exception, IllegalArgumentException {\n",
                        "        if (keys == null) {\n",
                        "            throw new IllegalArgumentException(MSG_NULL_KEYS);\n",
                        "        }\n",
                        "        keyedPool.addObjects0(keys, count);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "prefill0(KeyedObjectPool<K,V>, Collection<K>, int)",
                    "parameters": [
                        "keyedPool",
                        "keys",
                        "count"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "addObjects0(java.util.Collection,int)"
                        ]
                    ]
                },
                "1539-1539:PoolUtils": {
                    "start": 1539,
                    "end": 1539,
                    "body": [
                        "    public PoolUtils() {}\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "PoolUtils()",
                    "parameters": [],
                    "calls": []
                },
                "1529-1532:synchronizedPooledFactory": {
                    "start": 1529,
                    "end": 1532,
                    "body": [
                        "    public static <T> PooledObjectFactory<T> synchronizedPooledFactory(\n",
                        "            final PooledObjectFactory<T> factory) {\n",
                        "        return new SynchronizedPooledObjectFactory<>(factory);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "PooledObjectFactory<T>",
                            "PooledObjectFactory<T>"
                        ]
                    ],
                    "signature": "synchronizedPooledFactory(PooledObjectFactory<T>)",
                    "parameters": [
                        "factory"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/PoolUtils$SynchronizedPooledObjectFactory",
                            "SynchronizedPooledObjectFactory<T>(org.apache.commons.pool2.PooledObjectFactory)"
                        ]
                    ]
                },
                "1502-1519:synchronizedPool1": {
                    "start": 1502,
                    "end": 1519,
                    "body": [
                        "    public static <T> ObjectPool<T> synchronizedPool1(final ObjectPool<T> pool) {\n",
                        "        if (pool == null) {\n",
                        "            throw new IllegalArgumentException(MSG_NULL_POOL);\n",
                        "        }\n",
                        "\n",
                        "        /*\n",
                        "         * assert !(pool instanceof GenericObjectPool) :\n",
                        "         * \"GenericObjectPool is already thread-safe\"; assert !(pool instanceof\n",
                        "         * SoftReferenceObjectPool) :\n",
                        "         * \"SoftReferenceObjectPool is already thread-safe\"; assert !(pool\n",
                        "         * instanceof StackObjectPool) :\n",
                        "         * \"StackObjectPool is already thread-safe\"; assert\n",
                        "         * !\"org.apache.commons.pool.composite.CompositeObjectPool\"\n",
                        "         * .equals(pool.getClass().getName()) :\n",
                        "         * \"CompositeObjectPools are already thread-safe\";\n",
                        "         */\n",
                        "        return new SynchronizedObjectPool<>(pool);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "ObjectPool<T>",
                            "ObjectPool<T>"
                        ]
                    ],
                    "signature": "synchronizedPool1(ObjectPool<T>)",
                    "parameters": [
                        "pool"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PoolUtils$SynchronizedObjectPool",
                            "SynchronizedObjectPool<T>(org.apache.commons.pool2.ObjectPool)"
                        ]
                    ]
                },
                "1475-1487:synchronizedPool0": {
                    "start": 1475,
                    "end": 1487,
                    "body": [
                        "    public static <K, V> KeyedObjectPool<K, V> synchronizedPool0(\n",
                        "            final KeyedObjectPool<K, V> keyedPool) {\n",
                        "        /*\n",
                        "         * assert !(keyedPool instanceof GenericKeyedObjectPool) :\n",
                        "         * \"GenericKeyedObjectPool is already thread-safe\"; assert !(keyedPool\n",
                        "         * instanceof StackKeyedObjectPool) :\n",
                        "         * \"StackKeyedObjectPool is already thread-safe\"; assert\n",
                        "         * !\"org.apache.commons.pool.composite.CompositeKeyedObjectPool\"\n",
                        "         * .equals(keyedPool.getClass().getName()) :\n",
                        "         * \"CompositeKeyedObjectPools are already thread-safe\";\n",
                        "         */\n",
                        "        return new SynchronizedKeyedObjectPool<>(keyedPool);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "KeyedObjectPool<K,V>",
                            "KeyedObjectPool<K,V>"
                        ]
                    ],
                    "signature": "synchronizedPool0(KeyedObjectPool<K,V>)",
                    "parameters": [
                        "keyedPool"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/PoolUtils$SynchronizedKeyedObjectPool",
                            "SynchronizedKeyedObjectPool<K,V>(org.apache.commons.pool2.KeyedObjectPool)"
                        ]
                    ]
                },
                "1457-1460:synchronizedKeyedPooledFactory": {
                    "start": 1457,
                    "end": 1460,
                    "body": [
                        "    public static <K, V> KeyedPooledObjectFactory<K, V> synchronizedKeyedPooledFactory(\n",
                        "            final KeyedPooledObjectFactory<K, V> keyedFactory) {\n",
                        "        return new SynchronizedKeyedPooledObjectFactory<>(keyedFactory);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "KeyedPooledObjectFactory<K,V>",
                            "KeyedPooledObjectFactory<K,V>"
                        ]
                    ],
                    "signature": "synchronizedKeyedPooledFactory(KeyedPooledObjectFactory<K,V>)",
                    "parameters": [
                        "keyedFactory"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/PoolUtils$SynchronizedKeyedPooledObjectFactory",
                            "SynchronizedKeyedPooledObjectFactory<K,V>(org.apache.commons.pool2.KeyedPooledObjectFactory)"
                        ]
                    ]
                },
                "1360-1368:erodingPool4": {
                    "start": 1360,
                    "end": 1368,
                    "body": [
                        "    public static <T> ObjectPool<T> erodingPool4(final ObjectPool<T> pool, final float factor) {\n",
                        "        if (pool == null) {\n",
                        "            throw new IllegalArgumentException(MSG_NULL_POOL);\n",
                        "        }\n",
                        "        if (factor <= 0f) {\n",
                        "            throw new IllegalArgumentException(MSG_FACTOR_NEGATIVE);\n",
                        "        }\n",
                        "        return new ErodingObjectPool<>(pool, factor);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "ObjectPool<T>",
                            "ObjectPool<T>"
                        ]
                    ],
                    "signature": "erodingPool4(ObjectPool<T>, float)",
                    "parameters": [
                        "pool",
                        "factor"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PoolUtils$ErodingObjectPool",
                            "ErodingObjectPool<T>(org.apache.commons.pool2.ObjectPool,float)"
                        ]
                    ]
                },
                "1336-1338:erodingPool3": {
                    "start": 1336,
                    "end": 1338,
                    "body": [
                        "    public static <T> ObjectPool<T> erodingPool3(final ObjectPool<T> pool) {\n",
                        "        return erodingPool4(pool, 1f);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "ObjectPool<T>",
                            "ObjectPool<T>"
                        ]
                    ],
                    "signature": "erodingPool3(ObjectPool<T>)",
                    "parameters": [
                        "pool"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1360-1368:erodingPool4"
                        ]
                    ]
                },
                "1310-1322:erodingPool2": {
                    "start": 1310,
                    "end": 1322,
                    "body": [
                        "    public static <K, V> KeyedObjectPool<K, V> erodingPool2(\n",
                        "            final KeyedObjectPool<K, V> keyedPool, final float factor, final boolean perKey) {\n",
                        "        if (keyedPool == null) {\n",
                        "            throw new IllegalArgumentException(MSG_NULL_KEYED_POOL);\n",
                        "        }\n",
                        "        if (factor <= 0f) {\n",
                        "            throw new IllegalArgumentException(MSG_FACTOR_NEGATIVE);\n",
                        "        }\n",
                        "        if (perKey) {\n",
                        "            return new ErodingPerKeyKeyedObjectPool<>(keyedPool, factor);\n",
                        "        }\n",
                        "        return ErodingKeyedObjectPool.ErodingKeyedObjectPool0(keyedPool, factor);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "KeyedObjectPool<K,V>",
                            "KeyedObjectPool<K,V>"
                        ]
                    ],
                    "signature": "erodingPool2(KeyedObjectPool<K,V>, float, boolean)",
                    "parameters": [
                        "keyedPool",
                        "factor",
                        "perKey"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PoolUtils$ErodingPerKeyKeyedObjectPool",
                            "ErodingPerKeyKeyedObjectPool<K,V>(org.apache.commons.pool2.KeyedObjectPool,float)"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingKeyedObjectPool",
                            "136-139:ErodingKeyedObjectPool0"
                        ]
                    ]
                },
                "1277-1280:erodingPool1": {
                    "start": 1277,
                    "end": 1280,
                    "body": [
                        "    public static <K, V> KeyedObjectPool<K, V> erodingPool1(\n",
                        "            final KeyedObjectPool<K, V> keyedPool, final float factor) {\n",
                        "        return erodingPool2(keyedPool, factor, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "KeyedObjectPool<K,V>",
                            "KeyedObjectPool<K,V>"
                        ]
                    ],
                    "signature": "erodingPool1(KeyedObjectPool<K,V>, float)",
                    "parameters": [
                        "keyedPool",
                        "factor"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1310-1322:erodingPool2"
                        ]
                    ]
                },
                "1251-1253:erodingPool0": {
                    "start": 1251,
                    "end": 1253,
                    "body": [
                        "    public static <K, V> KeyedObjectPool<K, V> erodingPool0(final KeyedObjectPool<K, V> keyedPool) {\n",
                        "        return erodingPool1(keyedPool, 1f);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "KeyedObjectPool<K,V>",
                            "KeyedObjectPool<K,V>"
                        ]
                    ],
                    "signature": "erodingPool0(KeyedObjectPool<K,V>)",
                    "parameters": [
                        "keyedPool"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1277-1280:erodingPool1"
                        ]
                    ]
                },
                "1227-1234:checkRethrow": {
                    "start": 1227,
                    "end": 1234,
                    "body": [
                        "    public static void checkRethrow(final Throwable t) {\n",
                        "        if (t instanceof ThreadDeath) {\n",
                        "            throw (ThreadDeath) t;\n",
                        "        }\n",
                        "        if (t instanceof VirtualMachineError) {\n",
                        "            throw (VirtualMachineError) t;\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkRethrow(Throwable)",
                    "parameters": [
                        "t"
                    ],
                    "calls": []
                },
                "1204-1216:checkMinIdle2": {
                    "start": 1204,
                    "end": 1216,
                    "body": [
                        "    public static <T> TimerTask checkMinIdle2(\n",
                        "            final ObjectPool<T> pool, final int minIdle, final long periodMillis)\n",
                        "            throws IllegalArgumentException {\n",
                        "        if (pool == null) {\n",
                        "            throw new IllegalArgumentException(MSG_NULL_KEYED_POOL);\n",
                        "        }\n",
                        "        if (minIdle < 0) {\n",
                        "            throw new IllegalArgumentException(MSG_MIN_IDLE);\n",
                        "        }\n",
                        "        final TimerTask task = new ObjectPoolMinIdleTimerTask<>(pool, minIdle);\n",
                        "        getMinIdleTimer().schedule(task, 0L, periodMillis);\n",
                        "        return task;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "TimerTask",
                            "java.util.TimerTask"
                        ]
                    ],
                    "signature": "checkMinIdle2(ObjectPool<T>, int, long)",
                    "parameters": [
                        "pool",
                        "minIdle",
                        "periodMillis"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/PoolUtils$ObjectPoolMinIdleTimerTask",
                            "ObjectPoolMinIdleTimerTask<T>(org.apache.commons.pool2.ObjectPool,int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Timer",
                            "schedule(java.util.TimerTask,long,long)"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1375-1377:getMinIdleTimer"
                        ]
                    ]
                },
                "1168-1186:checkMinIdle1": {
                    "start": 1168,
                    "end": 1186,
                    "body": [
                        "    public static <K, V> TimerTask checkMinIdle1(\n",
                        "            final KeyedObjectPool<K, V> keyedPool,\n",
                        "            final K key,\n",
                        "            final int minIdle,\n",
                        "            final long periodMillis)\n",
                        "            throws IllegalArgumentException {\n",
                        "        if (keyedPool == null) {\n",
                        "            throw new IllegalArgumentException(MSG_NULL_KEYED_POOL);\n",
                        "        }\n",
                        "        if (key == null) {\n",
                        "            throw new IllegalArgumentException(MSG_NULL_KEY);\n",
                        "        }\n",
                        "        if (minIdle < 0) {\n",
                        "            throw new IllegalArgumentException(MSG_MIN_IDLE);\n",
                        "        }\n",
                        "        final TimerTask task = new KeyedObjectPoolMinIdleTimerTask<>(keyedPool, key, minIdle);\n",
                        "        getMinIdleTimer().schedule(task, 0L, periodMillis);\n",
                        "        return task;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "TimerTask",
                            "java.util.TimerTask"
                        ]
                    ],
                    "signature": "checkMinIdle1(KeyedObjectPool<K,V>, K, int, long)",
                    "parameters": [
                        "keyedPool",
                        "key",
                        "minIdle",
                        "periodMillis"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/PoolUtils$KeyedObjectPoolMinIdleTimerTask",
                            "KeyedObjectPoolMinIdleTimerTask<K,V>(org.apache.commons.pool2.KeyedObjectPool,java.lang.Object,int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Timer",
                            "schedule(java.util.TimerTask,long,long)"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1375-1377:getMinIdleTimer"
                        ]
                    ]
                },
                "1131-1148:checkMinIdle0": {
                    "start": 1131,
                    "end": 1148,
                    "body": [
                        "    public static <K, V> Map<K, TimerTask> checkMinIdle0(\n",
                        "            final KeyedObjectPool<K, V> keyedPool,\n",
                        "            final Collection<K> keys,\n",
                        "            final int minIdle,\n",
                        "            final long periodMillis)\n",
                        "            throws IllegalArgumentException {\n",
                        "        if (keys == null) {\n",
                        "            throw new IllegalArgumentException(MSG_NULL_KEYS);\n",
                        "        }\n",
                        "        final Map<K, TimerTask> tasks = new HashMap<>(keys.size());\n",
                        "        final Iterator<K> iter = keys.iterator();\n",
                        "        while (iter.hasNext()) {\n",
                        "            final K key = iter.next();\n",
                        "            final TimerTask task = checkMinIdle1(keyedPool, key, minIdle, periodMillis);\n",
                        "            tasks.put(key, task);\n",
                        "        }\n",
                        "        return tasks;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "Map<K,TimerTask>",
                            "java.util.Map<K,TimerTask>"
                        ]
                    ],
                    "signature": "checkMinIdle0(KeyedObjectPool<K,V>, Collection<K>, int, long)",
                    "parameters": [
                        "keyedPool",
                        "keys",
                        "minIdle",
                        "periodMillis"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/HashMap",
                            "HashMap<K,TimerTask>(int)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "size()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "iterator()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1168-1186:checkMinIdle1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(java.lang.Object,java.util.TimerTask)"
                        ]
                    ]
                },
                "1375-1377:getMinIdleTimer": {
                    "start": 1375,
                    "end": 1377,
                    "body": [
                        "    private static Timer getMinIdleTimer() {\n",
                        "        return TimerHolder.MIN_IDLE_TIMER;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "Timer",
                            "java.util.Timer"
                        ]
                    ],
                    "signature": "getMinIdleTimer()",
                    "parameters": [],
                    "calls": []
                }
            },
            "fields": {
                "1108-1108:MSG_NULL_KEYS": {
                    "start": 1108,
                    "end": 1108,
                    "body": [
                        "    static final String MSG_NULL_KEYS = \"keys must not be null.\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "1104-1104:MSG_NULL_KEY": {
                    "start": 1104,
                    "end": 1104,
                    "body": [
                        "    static final String MSG_NULL_KEY = \"key must not be null.\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "1110-1110:MSG_NULL_POOL": {
                    "start": 1110,
                    "end": 1110,
                    "body": [
                        "    private static final String MSG_NULL_POOL = \"pool must not be null.\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "1106-1106:MSG_NULL_KEYED_POOL": {
                    "start": 1106,
                    "end": 1106,
                    "body": [
                        "    private static final String MSG_NULL_KEYED_POOL = \"keyedPool must not be null.\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "1102-1102:MSG_MIN_IDLE": {
                    "start": 1102,
                    "end": 1102,
                    "body": [
                        "    private static final String MSG_MIN_IDLE = \"minIdle must be non-negative.\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "1100-1100:MSG_FACTOR_NEGATIVE": {
                    "start": 1100,
                    "end": 1100,
                    "body": [
                        "    private static final String MSG_FACTOR_NEGATIVE = \"factor must be positive.\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                }
            }
        },
        "ErodingKeyedObjectPool": {
            "start": 112,
            "end": 112,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [
                "KeyedObjectPool<K,V>",
                "ErodingKeyedObjectPool<>"
            ],
            "extends": [],
            "methods": {
                "267-274:toString": {
                    "start": 267,
                    "end": 274,
                    "body": [
                        "        public String toString() {\n",
                        "            return \"ErodingKeyedObjectPool{\"\n",
                        "                    + \"factor=\"\n",
                        "                    + erodingFactor\n",
                        "                    + \", keyedPool=\"\n",
                        "                    + keyedPool\n",
                        "                    + '}';\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": []
                },
                "241-263:returnObject": {
                    "start": 241,
                    "end": 263,
                    "body": [
                        "        public void returnObject(final K key, final V obj) throws Exception {\n",
                        "            boolean discard = false;\n",
                        "            final long nowMillis = System.currentTimeMillis();\n",
                        "            final ErodingFactor factor = getErodingFactor(key);\n",
                        "            synchronized (keyedPool) {\n",
                        "                if (factor.getNextShrink() < nowMillis) {\n",
                        "                    final int numIdle = getNumIdle1(key);\n",
                        "                    if (numIdle > 0) {\n",
                        "                        discard = true;\n",
                        "                    }\n",
                        "\n",
                        "                    factor.update(nowMillis, numIdle);\n",
                        "                }\n",
                        "            }\n",
                        "            try {\n",
                        "                if (discard) {\n",
                        "                    keyedPool.invalidateObject0(key, obj);\n",
                        "                } else {\n",
                        "                    keyedPool.returnObject(key, obj);\n",
                        "                }\n",
                        "            } catch (final Exception e) {\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "returnObject(K, V)",
                    "parameters": [
                        "key",
                        "obj"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/System",
                            "currentTimeMillis()"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingKeyedObjectPool",
                            "188-190:getErodingFactor"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingFactor",
                            "74-76:getNextShrink"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingKeyedObjectPool",
                            "217-219:getNumIdle1"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingFactor",
                            "95-101:update"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "invalidateObject0(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "returnObject(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "223-228:invalidateObject0": {
                    "start": 223,
                    "end": 228,
                    "body": [
                        "        public void invalidateObject0(final K key, final V obj) {\n",
                        "            try {\n",
                        "                keyedPool.invalidateObject0(key, obj);\n",
                        "            } catch (final Exception e) {\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "invalidateObject0(K, V)",
                    "parameters": [
                        "key",
                        "obj"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "invalidateObject0(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "175-180:close": {
                    "start": 175,
                    "end": 180,
                    "body": [
                        "        public void close() {\n",
                        "            try {\n",
                        "                keyedPool.close();\n",
                        "            } catch (final Exception e) {\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "close()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "close()"
                        ]
                    ]
                },
                "158-161:borrowObject": {
                    "start": 158,
                    "end": 161,
                    "body": [
                        "        public V borrowObject(final K key)\n",
                        "                throws Exception, NoSuchElementException, IllegalStateException {\n",
                        "            return keyedPool.borrowObject(key);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "V",
                            "V"
                        ]
                    ],
                    "signature": "borrowObject(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "borrowObject(java.lang.Object)"
                        ]
                    ]
                },
                "151-154:addObject": {
                    "start": 151,
                    "end": 154,
                    "body": [
                        "        public void addObject(final K key)\n",
                        "                throws Exception, IllegalStateException, UnsupportedOperationException {\n",
                        "            keyedPool.addObject(key);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "addObject(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "addObject(java.lang.Object)"
                        ]
                    ]
                },
                "217-219:getNumIdle1": {
                    "start": 217,
                    "end": 219,
                    "body": [
                        "        public int getNumIdle1(final K key) {\n",
                        "            return keyedPool.getNumIdle1(key);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumIdle1(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumIdle1(java.lang.Object)"
                        ]
                    ]
                },
                "212-214:getNumIdle0": {
                    "start": 212,
                    "end": 214,
                    "body": [
                        "        public int getNumIdle0() {\n",
                        "            return keyedPool.getNumIdle0();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumIdle0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumIdle0()"
                        ]
                    ]
                },
                "207-209:getNumActive1": {
                    "start": 207,
                    "end": 209,
                    "body": [
                        "        public int getNumActive1(final K key) {\n",
                        "            return keyedPool.getNumActive1(key);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumActive1(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumActive1(java.lang.Object)"
                        ]
                    ]
                },
                "202-204:getNumActive0": {
                    "start": 202,
                    "end": 204,
                    "body": [
                        "        public int getNumActive0() {\n",
                        "            return keyedPool.getNumActive0();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumActive0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumActive0()"
                        ]
                    ]
                },
                "197-199:getKeyedPool": {
                    "start": 197,
                    "end": 199,
                    "body": [
                        "        protected KeyedObjectPool<K, V> getKeyedPool() {\n",
                        "            return keyedPool;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "KeyedObjectPool<K,V>",
                            "KeyedObjectPool<K,V>"
                        ]
                    ],
                    "signature": "getKeyedPool()",
                    "parameters": [],
                    "calls": []
                },
                "188-190:getErodingFactor": {
                    "start": 188,
                    "end": 190,
                    "body": [
                        "        protected ErodingFactor getErodingFactor(final K key) {\n",
                        "            return erodingFactor;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "ErodingFactor",
                            "ErodingFactor"
                        ]
                    ],
                    "signature": "getErodingFactor(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": []
                },
                "169-171:clear1": {
                    "start": 169,
                    "end": 171,
                    "body": [
                        "        public void clear1(final K key) throws Exception, UnsupportedOperationException {\n",
                        "            keyedPool.clear1(key);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "clear1(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "clear1(java.lang.Object)"
                        ]
                    ]
                },
                "164-166:clear0": {
                    "start": 164,
                    "end": 166,
                    "body": [
                        "        public void clear0() throws Exception, UnsupportedOperationException {\n",
                        "            keyedPool.clear0();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "clear0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "clear0()"
                        ]
                    ]
                },
                "136-139:ErodingKeyedObjectPool0": {
                    "start": 136,
                    "end": 139,
                    "body": [
                        "        public static ErodingKeyedObjectPool ErodingKeyedObjectPool0(\n",
                        "                final KeyedObjectPool keyedPool, final float factor) {\n",
                        "            return new ErodingKeyedObjectPool(keyedPool, new ErodingFactor(factor));\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "ErodingKeyedObjectPool<>",
                            "ErodingKeyedObjectPool<>"
                        ]
                    ],
                    "signature": "ErodingKeyedObjectPool0(KeyedObjectPool<>, float)",
                    "parameters": [
                        "keyedPool",
                        "factor"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/PoolUtils$ErodingKeyedObjectPool",
                            "ErodingKeyedObjectPool<>(org.apache.commons.pool2.KeyedObjectPool,org.apache.commons.pool2.PoolUtils.ErodingFactor)"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingFactor",
                            "62-67:ErodingFactor"
                        ]
                    ]
                },
                "127-134:ErodingKeyedObjectPool": {
                    "start": 127,
                    "end": 134,
                    "body": [
                        "        public ErodingKeyedObjectPool(\n",
                        "                final KeyedObjectPool<K, V> keyedPool, final ErodingFactor erodingFactor) {\n",
                        "            if (keyedPool == null) {\n",
                        "                throw new IllegalArgumentException(MSG_NULL_KEYED_POOL);\n",
                        "            }\n",
                        "            this.keyedPool = keyedPool;\n",
                        "            this.erodingFactor = erodingFactor;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ErodingKeyedObjectPool(KeyedObjectPool<K,V>, ErodingFactor)",
                    "parameters": [
                        "keyedPool",
                        "erodingFactor"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ]
                    ]
                }
            },
            "fields": {
                "118-118:erodingFactor": {
                    "start": 118,
                    "end": 118,
                    "body": [
                        "        private final ErodingFactor erodingFactor;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "ErodingFactor",
                            "ErodingFactor"
                        ]
                    ]
                },
                "115-115:keyedPool": {
                    "start": 115,
                    "end": 115,
                    "body": [
                        "        private final KeyedObjectPool<K, V> keyedPool;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "KeyedObjectPool<K,V>",
                            "KeyedObjectPool<K,V>"
                        ]
                    ]
                }
            }
        },
        "ErodingObjectPool": {
            "start": 284,
            "end": 284,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [
                "ObjectPool<T>"
            ],
            "extends": [],
            "methods": {
                "388-390:toString": {
                    "start": 388,
                    "end": 390,
                    "body": [
                        "        public String toString() {\n",
                        "            return \"ErodingObjectPool{\" + \"factor=\" + factor + \", pool=\" + pool + '}';\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": []
                },
                "363-384:returnObject": {
                    "start": 363,
                    "end": 384,
                    "body": [
                        "        public void returnObject(final T obj) {\n",
                        "            boolean discard = false;\n",
                        "            final long nowMillis = System.currentTimeMillis();\n",
                        "            synchronized (pool) {\n",
                        "                if (factor.getNextShrink() < nowMillis) { // XXX: Pool 3: move test\n",
                        "                    final int numIdle = pool.getNumIdle();\n",
                        "                    if (numIdle > 0) {\n",
                        "                        discard = true;\n",
                        "                    }\n",
                        "\n",
                        "                    factor.update(nowMillis, numIdle);\n",
                        "                }\n",
                        "            }\n",
                        "            try {\n",
                        "                if (discard) {\n",
                        "                    pool.invalidateObject0(obj);\n",
                        "                } else {\n",
                        "                    pool.returnObject(obj);\n",
                        "                }\n",
                        "            } catch (final Exception e) {\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "returnObject(T)",
                    "parameters": [
                        "obj"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/System",
                            "currentTimeMillis()"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingFactor",
                            "74-76:getNextShrink"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "getNumIdle()"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingFactor",
                            "95-101:update"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "invalidateObject0(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "returnObject(java.lang.Object)"
                        ]
                    ]
                },
                "346-351:invalidateObject0": {
                    "start": 346,
                    "end": 351,
                    "body": [
                        "        public void invalidateObject0(final T obj) {\n",
                        "            try {\n",
                        "                pool.invalidateObject0(obj);\n",
                        "            } catch (final Exception e) {\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "invalidateObject0(T)",
                    "parameters": [
                        "obj"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "invalidateObject0(java.lang.Object)"
                        ]
                    ]
                },
                "340-342:getNumIdle": {
                    "start": 340,
                    "end": 342,
                    "body": [
                        "        public int getNumIdle() {\n",
                        "            return pool.getNumIdle();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumIdle()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "getNumIdle()"
                        ]
                    ]
                },
                "334-336:getNumActive": {
                    "start": 334,
                    "end": 336,
                    "body": [
                        "        public int getNumActive() {\n",
                        "            return pool.getNumActive();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumActive()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "getNumActive()"
                        ]
                    ]
                },
                "325-330:close": {
                    "start": 325,
                    "end": 330,
                    "body": [
                        "        public void close() {\n",
                        "            try {\n",
                        "                pool.close();\n",
                        "            } catch (final Exception e) {\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "close()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "close()"
                        ]
                    ]
                },
                "319-321:clear": {
                    "start": 319,
                    "end": 321,
                    "body": [
                        "        public void clear() throws Exception, UnsupportedOperationException {\n",
                        "            pool.clear();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "clear()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "clear()"
                        ]
                    ]
                },
                "313-315:borrowObject": {
                    "start": 313,
                    "end": 315,
                    "body": [
                        "        public T borrowObject() throws Exception, NoSuchElementException, IllegalStateException {\n",
                        "            return pool.borrowObject();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "T",
                            "T"
                        ]
                    ],
                    "signature": "borrowObject()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "borrowObject()"
                        ]
                    ]
                },
                "306-309:addObject": {
                    "start": 306,
                    "end": 309,
                    "body": [
                        "        public void addObject()\n",
                        "                throws Exception, IllegalStateException, UnsupportedOperationException {\n",
                        "            pool.addObject();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "addObject()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "addObject()"
                        ]
                    ]
                },
                "299-302:ErodingObjectPool": {
                    "start": 299,
                    "end": 302,
                    "body": [
                        "        public ErodingObjectPool(final ObjectPool<T> pool, final float factor) {\n",
                        "            this.pool = pool;\n",
                        "            this.factor = new ErodingFactor(factor);\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ErodingObjectPool(ObjectPool<T>, float)",
                    "parameters": [
                        "pool",
                        "factor"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingFactor",
                            "62-67:ErodingFactor"
                        ]
                    ]
                }
            },
            "fields": {
                "290-290:factor": {
                    "start": 290,
                    "end": 290,
                    "body": [
                        "        private final ErodingFactor factor;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "ErodingFactor",
                            "ErodingFactor"
                        ]
                    ]
                },
                "287-287:pool": {
                    "start": 287,
                    "end": 287,
                    "body": [
                        "        private final ObjectPool<T> pool;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "ObjectPool<T>",
                            "ObjectPool<T>"
                        ]
                    ]
                }
            }
        },
        "ErodingPerKeyKeyedObjectPool": {
            "start": 400,
            "end": 401,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "436-443:toString": {
                    "start": 436,
                    "end": 443,
                    "body": [
                        "        public String toString() {\n",
                        "            return \"ErodingPerKeyKeyedObjectPool{\"\n",
                        "                    + \"factor=\"\n",
                        "                    + factor\n",
                        "                    + \", keyedPool=\"\n",
                        "                    + getKeyedPool()\n",
                        "                    + '}';\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override",
                        "SuppressWarnings(\"resource\")"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/PoolUtils$ErodingKeyedObjectPool",
                            "getKeyedPool()"
                        ]
                    ]
                },
                "424-431:getErodingFactor": {
                    "start": 424,
                    "end": 431,
                    "body": [
                        "        protected ErodingFactor getErodingFactor(final K key) {\n",
                        "            ErodingFactor eFactor = factors.get(key);\n",
                        "            if (eFactor == null) {\n",
                        "                eFactor = new ErodingFactor(this.factor);\n",
                        "                factors.put(key, eFactor);\n",
                        "            }\n",
                        "            return eFactor;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "ErodingFactor",
                            "ErodingFactor"
                        ]
                    ],
                    "signature": "getErodingFactor(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingFactor",
                            "62-67:ErodingFactor"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(java.lang.Object,org.apache.commons.pool2.PoolUtils.ErodingFactor)"
                        ]
                    ]
                },
                "416-420:ErodingPerKeyKeyedObjectPool": {
                    "start": 416,
                    "end": 420,
                    "body": [
                        "        public ErodingPerKeyKeyedObjectPool(\n",
                        "                final KeyedObjectPool<K, V> keyedPool, final float factor) {\n",
                        "            super(keyedPool, null);\n",
                        "            this.factor = factor;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ErodingPerKeyKeyedObjectPool(KeyedObjectPool<K,V>, float)",
                    "parameters": [
                        "keyedPool",
                        "factor"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "ErodingKeyedObjectPool",
                            "127-134:ErodingKeyedObjectPool"
                        ]
                    ]
                }
            },
            "fields": {
                "407-407:factors": {
                    "start": 407,
                    "end": 407,
                    "body": [
                        "        private final Map<K, ErodingFactor> factors = Collections.synchronizedMap(new HashMap<>());\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Map<K,ErodingFactor>",
                            "java.util.Map<K,ErodingFactor>"
                        ]
                    ]
                },
                "404-404:factor": {
                    "start": 404,
                    "end": 404,
                    "body": [
                        "        private final float factor;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "float",
                            "float"
                        ]
                    ]
                }
            }
        },
        "KeyedObjectPoolMinIdleTimerTask": {
            "start": 453,
            "end": 453,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [],
            "extends": [
                "TimerTask"
            ],
            "methods": {
                "505-513:toString": {
                    "start": 505,
                    "end": 513,
                    "body": [
                        "        public String toString() {\n",
                        "            final StringBuilder sb = new StringBuilder();\n",
                        "            sb.append(\"KeyedObjectPoolMinIdleTimerTask\");\n",
                        "            sb.append(\"{minIdle=\").append(minIdle);\n",
                        "            sb.append(\", key=\").append(key);\n",
                        "            sb.append(\", keyedPool=\").append(keyedPool);\n",
                        "            sb.append('}');\n",
                        "            return sb.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ]
                },
                "485-501:run": {
                    "start": 485,
                    "end": 501,
                    "body": [
                        "        public void run() {\n",
                        "            boolean success = false;\n",
                        "            try {\n",
                        "                if (keyedPool.getNumIdle1(key) < minIdle) {\n",
                        "                    keyedPool.addObject(key);\n",
                        "                }\n",
                        "                success = true;\n",
                        "\n",
                        "            } catch (final Exception e) {\n",
                        "                cancel();\n",
                        "\n",
                        "            } finally {\n",
                        "                if (!success) {\n",
                        "                    cancel();\n",
                        "                }\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "run()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumIdle1(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "addObject(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/TimerTask",
                            "cancel()"
                        ]
                    ]
                },
                "472-481:KeyedObjectPoolMinIdleTimerTask": {
                    "start": 472,
                    "end": 481,
                    "body": [
                        "        KeyedObjectPoolMinIdleTimerTask(\n",
                        "                final KeyedObjectPool<K, V> keyedPool, final K key, final int minIdle)\n",
                        "                throws IllegalArgumentException {\n",
                        "            if (keyedPool == null) {\n",
                        "                throw new IllegalArgumentException(MSG_NULL_KEYED_POOL);\n",
                        "            }\n",
                        "            this.keyedPool = keyedPool;\n",
                        "            this.key = key;\n",
                        "            this.minIdle = minIdle;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "KeyedObjectPoolMinIdleTimerTask(KeyedObjectPool<K,V>, K, int)",
                    "parameters": [
                        "keyedPool",
                        "key",
                        "minIdle"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ]
                    ]
                }
            },
            "fields": {
                "462-462:keyedPool": {
                    "start": 462,
                    "end": 462,
                    "body": [
                        "        private final KeyedObjectPool<K, V> keyedPool;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "KeyedObjectPool<K,V>",
                            "KeyedObjectPool<K,V>"
                        ]
                    ]
                },
                "459-459:key": {
                    "start": 459,
                    "end": 459,
                    "body": [
                        "        private final K key;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "K",
                            "K"
                        ]
                    ]
                },
                "456-456:minIdle": {
                    "start": 456,
                    "end": 456,
                    "body": [
                        "        private final int minIdle;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                }
            }
        },
        "ObjectPoolMinIdleTimerTask": {
            "start": 522,
            "end": 522,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [],
            "extends": [
                "TimerTask"
            ],
            "methods": {
                "568-575:toString": {
                    "start": 568,
                    "end": 575,
                    "body": [
                        "        public String toString() {\n",
                        "            final StringBuilder sb = new StringBuilder();\n",
                        "            sb.append(\"ObjectPoolMinIdleTimerTask\");\n",
                        "            sb.append(\"{minIdle=\").append(minIdle);\n",
                        "            sb.append(\", pool=\").append(pool);\n",
                        "            sb.append('}');\n",
                        "            return sb.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ]
                },
                "549-564:run": {
                    "start": 549,
                    "end": 564,
                    "body": [
                        "        public void run() {\n",
                        "            boolean success = false;\n",
                        "            try {\n",
                        "                if (pool.getNumIdle() < minIdle) {\n",
                        "                    pool.addObject();\n",
                        "                }\n",
                        "                success = true;\n",
                        "\n",
                        "            } catch (final Exception e) {\n",
                        "                cancel();\n",
                        "            } finally {\n",
                        "                if (!success) {\n",
                        "                    cancel();\n",
                        "                }\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "run()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "getNumIdle()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "addObject()"
                        ],
                        [
                            "library",
                            "java.base/java/util/TimerTask",
                            "cancel()"
                        ]
                    ]
                },
                "538-545:ObjectPoolMinIdleTimerTask": {
                    "start": 538,
                    "end": 545,
                    "body": [
                        "        ObjectPoolMinIdleTimerTask(final ObjectPool<T> pool, final int minIdle)\n",
                        "                throws IllegalArgumentException {\n",
                        "            if (pool == null) {\n",
                        "                throw new IllegalArgumentException(MSG_NULL_POOL);\n",
                        "            }\n",
                        "            this.pool = pool;\n",
                        "            this.minIdle = minIdle;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ObjectPoolMinIdleTimerTask(ObjectPool<T>, int)",
                    "parameters": [
                        "pool",
                        "minIdle"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ]
                    ]
                }
            },
            "fields": {
                "528-528:pool": {
                    "start": 528,
                    "end": 528,
                    "body": [
                        "        private final ObjectPool<T> pool;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "ObjectPool<T>",
                            "ObjectPool<T>"
                        ]
                    ]
                },
                "525-525:minIdle": {
                    "start": 525,
                    "end": 525,
                    "body": [
                        "        private final int minIdle;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                }
            }
        },
        "SynchronizedKeyedObjectPool": {
            "start": 589,
            "end": 589,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [
                "KeyedObjectPool<K,V>"
            ],
            "extends": [],
            "methods": {
                "744-750:toString": {
                    "start": 744,
                    "end": 750,
                    "body": [
                        "        public String toString() {\n",
                        "            final StringBuilder sb = new StringBuilder();\n",
                        "            sb.append(\"SynchronizedKeyedObjectPool\");\n",
                        "            sb.append(\"{keyedPool=\").append(keyedPool);\n",
                        "            sb.append('}');\n",
                        "            return sb.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ]
                },
                "731-740:returnObject": {
                    "start": 731,
                    "end": 740,
                    "body": [
                        "        public void returnObject(final K key, final V obj) {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                keyedPool.returnObject(key, obj);\n",
                        "            } catch (final Exception e) {\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "returnObject(K, V)",
                    "parameters": [
                        "key",
                        "obj"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "returnObject(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "718-727:invalidateObject0": {
                    "start": 718,
                    "end": 727,
                    "body": [
                        "        public void invalidateObject0(final K key, final V obj) {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                keyedPool.invalidateObject0(key, obj);\n",
                        "            } catch (final Exception e) {\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "invalidateObject0(K, V)",
                    "parameters": [
                        "key",
                        "obj"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "invalidateObject0(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "661-670:close": {
                    "start": 661,
                    "end": 670,
                    "body": [
                        "        public void close() {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                keyedPool.close();\n",
                        "            } catch (final Exception e) {\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "close()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "close()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "626-635:borrowObject": {
                    "start": 626,
                    "end": 635,
                    "body": [
                        "        public V borrowObject(final K key)\n",
                        "                throws Exception, NoSuchElementException, IllegalStateException {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                return keyedPool.borrowObject(key);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "V",
                            "V"
                        ]
                    ],
                    "signature": "borrowObject(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "borrowObject(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "613-622:addObject": {
                    "start": 613,
                    "end": 622,
                    "body": [
                        "        public void addObject(final K key)\n",
                        "                throws Exception, IllegalStateException, UnsupportedOperationException {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                keyedPool.addObject(key);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "addObject(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "addObject(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "706-714:getNumIdle1": {
                    "start": 706,
                    "end": 714,
                    "body": [
                        "        public int getNumIdle1(final K key) {\n",
                        "            final ReadLock readLock = readWriteLock.readLock();\n",
                        "            readLock.lock();\n",
                        "            try {\n",
                        "                return keyedPool.getNumIdle1(key);\n",
                        "            } finally {\n",
                        "                readLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumIdle1(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "readLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumIdle1(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "unlock()"
                        ]
                    ]
                },
                "695-703:getNumIdle0": {
                    "start": 695,
                    "end": 703,
                    "body": [
                        "        public int getNumIdle0() {\n",
                        "            final ReadLock readLock = readWriteLock.readLock();\n",
                        "            readLock.lock();\n",
                        "            try {\n",
                        "                return keyedPool.getNumIdle0();\n",
                        "            } finally {\n",
                        "                readLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumIdle0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "readLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumIdle0()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "unlock()"
                        ]
                    ]
                },
                "684-692:getNumActive1": {
                    "start": 684,
                    "end": 692,
                    "body": [
                        "        public int getNumActive1(final K key) {\n",
                        "            final ReadLock readLock = readWriteLock.readLock();\n",
                        "            readLock.lock();\n",
                        "            try {\n",
                        "                return keyedPool.getNumActive1(key);\n",
                        "            } finally {\n",
                        "                readLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumActive1(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "readLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumActive1(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "unlock()"
                        ]
                    ]
                },
                "673-681:getNumActive0": {
                    "start": 673,
                    "end": 681,
                    "body": [
                        "        public int getNumActive0() {\n",
                        "            final ReadLock readLock = readWriteLock.readLock();\n",
                        "            readLock.lock();\n",
                        "            try {\n",
                        "                return keyedPool.getNumActive0();\n",
                        "            } finally {\n",
                        "                readLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumActive0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "readLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumActive0()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "unlock()"
                        ]
                    ]
                },
                "649-657:clear1": {
                    "start": 649,
                    "end": 657,
                    "body": [
                        "        public void clear1(final K key) throws Exception, UnsupportedOperationException {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                keyedPool.clear1(key);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "clear1(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "clear1(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "638-646:clear0": {
                    "start": 638,
                    "end": 646,
                    "body": [
                        "        public void clear0() throws Exception, UnsupportedOperationException {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                keyedPool.clear0();\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "clear0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "clear0()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "603-609:SynchronizedKeyedObjectPool": {
                    "start": 603,
                    "end": 609,
                    "body": [
                        "        SynchronizedKeyedObjectPool(final KeyedObjectPool<K, V> keyedPool)\n",
                        "                throws IllegalArgumentException {\n",
                        "            if (keyedPool == null) {\n",
                        "                throw new IllegalArgumentException(MSG_NULL_KEYED_POOL);\n",
                        "            }\n",
                        "            this.keyedPool = keyedPool;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "SynchronizedKeyedObjectPool(KeyedObjectPool<K,V>)",
                    "parameters": [
                        "keyedPool"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ]
                    ]
                }
            },
            "fields": {
                "595-595:keyedPool": {
                    "start": 595,
                    "end": 595,
                    "body": [
                        "        private final KeyedObjectPool<K, V> keyedPool;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "KeyedObjectPool<K,V>",
                            "KeyedObjectPool<K,V>"
                        ]
                    ]
                },
                "592-592:readWriteLock": {
                    "start": 592,
                    "end": 592,
                    "body": [
                        "        private final ReentrantReadWriteLock readWriteLock = new ReentrantReadWriteLock();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "ReentrantReadWriteLock",
                            "java.util.concurrent.locks.ReentrantReadWriteLock"
                        ]
                    ]
                }
            }
        },
        "SynchronizedKeyedPooledObjectFactory": {
            "start": 763,
            "end": 764,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "842-849:validateObject": {
                    "start": 842,
                    "end": 849,
                    "body": [
                        "        public boolean validateObject(final K key, final PooledObject<V> p) {\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                return keyedFactory.validateObject(key, p);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "validateObject(K, PooledObject<V>)",
                    "parameters": [
                        "key",
                        "p"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedPooledObjectFactory",
                            "validateObject(java.lang.Object,org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "832-838:toString": {
                    "start": 832,
                    "end": 838,
                    "body": [
                        "        public String toString() {\n",
                        "            final StringBuilder sb = new StringBuilder();\n",
                        "            sb.append(\"SynchronizedKeyedPoolableObjectFactory\");\n",
                        "            sb.append(\"{keyedFactory=\").append(keyedFactory);\n",
                        "            sb.append('}');\n",
                        "            return sb.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ]
                },
                "821-828:passivateObject": {
                    "start": 821,
                    "end": 828,
                    "body": [
                        "        public void passivateObject(final K key, final PooledObject<V> p) throws Exception {\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                keyedFactory.passivateObject(key, p);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "passivateObject(K, PooledObject<V>)",
                    "parameters": [
                        "key",
                        "p"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedPooledObjectFactory",
                            "passivateObject(java.lang.Object,org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "810-817:makeObject": {
                    "start": 810,
                    "end": 817,
                    "body": [
                        "        public PooledObject<V> makeObject(final K key) throws Exception {\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                return keyedFactory.makeObject(key);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "PooledObject<V>",
                            "PooledObject<V>"
                        ]
                    ],
                    "signature": "makeObject(K)",
                    "parameters": [
                        "key"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedPooledObjectFactory",
                            "makeObject(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "799-806:destroyObject0": {
                    "start": 799,
                    "end": 806,
                    "body": [
                        "        public void destroyObject0(final K key, final PooledObject<V> p) throws Exception {\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                keyedFactory.destroyObject0(key, p);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "destroyObject0(K, PooledObject<V>)",
                    "parameters": [
                        "key",
                        "p"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedPooledObjectFactory",
                            "destroyObject0(java.lang.Object,org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "788-795:activateObject": {
                    "start": 788,
                    "end": 795,
                    "body": [
                        "        public void activateObject(final K key, final PooledObject<V> p) throws Exception {\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                keyedFactory.activateObject(key, p);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "activateObject(K, PooledObject<V>)",
                    "parameters": [
                        "key",
                        "p"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedPooledObjectFactory",
                            "activateObject(java.lang.Object,org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "778-784:SynchronizedKeyedPooledObjectFactory": {
                    "start": 778,
                    "end": 784,
                    "body": [
                        "        SynchronizedKeyedPooledObjectFactory(final KeyedPooledObjectFactory<K, V> keyedFactory)\n",
                        "                throws IllegalArgumentException {\n",
                        "            if (keyedFactory == null) {\n",
                        "                throw new IllegalArgumentException(\"keyedFactory must not be null.\");\n",
                        "            }\n",
                        "            this.keyedFactory = keyedFactory;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "SynchronizedKeyedPooledObjectFactory(KeyedPooledObjectFactory<K,V>)",
                    "parameters": [
                        "keyedFactory"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ]
                    ]
                }
            },
            "fields": {
                "770-770:keyedFactory": {
                    "start": 770,
                    "end": 770,
                    "body": [
                        "        private final KeyedPooledObjectFactory<K, V> keyedFactory;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "KeyedPooledObjectFactory<K,V>",
                            "KeyedPooledObjectFactory<K,V>"
                        ]
                    ]
                },
                "767-767:writeLock": {
                    "start": 767,
                    "end": 767,
                    "body": [
                        "        private final WriteLock writeLock = new ReentrantReadWriteLock().writeLock();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "WriteLock",
                            "java.util.concurrent.locks.WriteLock"
                        ]
                    ]
                }
            }
        },
        "SynchronizedObjectPool": {
            "start": 862,
            "end": 862,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [
                "ObjectPool<T>"
            ],
            "extends": [],
            "methods": {
                "985-991:toString": {
                    "start": 985,
                    "end": 991,
                    "body": [
                        "        public String toString() {\n",
                        "            final StringBuilder sb = new StringBuilder();\n",
                        "            sb.append(\"SynchronizedObjectPool\");\n",
                        "            sb.append(\"{pool=\").append(pool);\n",
                        "            sb.append('}');\n",
                        "            return sb.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ]
                },
                "972-981:returnObject": {
                    "start": 972,
                    "end": 981,
                    "body": [
                        "        public void returnObject(final T obj) {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                pool.returnObject(obj);\n",
                        "            } catch (final Exception e) {\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "returnObject(T)",
                    "parameters": [
                        "obj"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "returnObject(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "959-968:invalidateObject0": {
                    "start": 959,
                    "end": 968,
                    "body": [
                        "        public void invalidateObject0(final T obj) {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                pool.invalidateObject0(obj);\n",
                        "            } catch (final Exception e) {\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "invalidateObject0(T)",
                    "parameters": [
                        "obj"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "invalidateObject0(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "947-955:getNumIdle": {
                    "start": 947,
                    "end": 955,
                    "body": [
                        "        public int getNumIdle() {\n",
                        "            final ReadLock readLock = readWriteLock.readLock();\n",
                        "            readLock.lock();\n",
                        "            try {\n",
                        "                return pool.getNumIdle();\n",
                        "            } finally {\n",
                        "                readLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumIdle()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "readLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "getNumIdle()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "unlock()"
                        ]
                    ]
                },
                "935-943:getNumActive": {
                    "start": 935,
                    "end": 943,
                    "body": [
                        "        public int getNumActive() {\n",
                        "            final ReadLock readLock = readWriteLock.readLock();\n",
                        "            readLock.lock();\n",
                        "            try {\n",
                        "                return pool.getNumActive();\n",
                        "            } finally {\n",
                        "                readLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumActive()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "readLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "getNumActive()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock",
                            "unlock()"
                        ]
                    ]
                },
                "922-931:close": {
                    "start": 922,
                    "end": 931,
                    "body": [
                        "        public void close() {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                pool.close();\n",
                        "            } catch (final Exception e) {\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "close()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "close()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "910-918:clear": {
                    "start": 910,
                    "end": 918,
                    "body": [
                        "        public void clear() throws Exception, UnsupportedOperationException {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                pool.clear();\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "clear()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "clear()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "898-906:borrowObject": {
                    "start": 898,
                    "end": 906,
                    "body": [
                        "        public T borrowObject() throws Exception, NoSuchElementException, IllegalStateException {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                return pool.borrowObject();\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "T",
                            "T"
                        ]
                    ],
                    "signature": "borrowObject()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "borrowObject()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "885-894:addObject": {
                    "start": 885,
                    "end": 894,
                    "body": [
                        "        public void addObject()\n",
                        "                throws Exception, IllegalStateException, UnsupportedOperationException {\n",
                        "            final WriteLock writeLock = readWriteLock.writeLock();\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                pool.addObject();\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "addObject()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock",
                            "writeLock()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "addObject()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "876-881:SynchronizedObjectPool": {
                    "start": 876,
                    "end": 881,
                    "body": [
                        "        SynchronizedObjectPool(final ObjectPool<T> pool) throws IllegalArgumentException {\n",
                        "            if (pool == null) {\n",
                        "                throw new IllegalArgumentException(MSG_NULL_POOL);\n",
                        "            }\n",
                        "            this.pool = pool;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "SynchronizedObjectPool(ObjectPool<T>)",
                    "parameters": [
                        "pool"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ]
                    ]
                }
            },
            "fields": {
                "868-868:pool": {
                    "start": 868,
                    "end": 868,
                    "body": [
                        "        private final ObjectPool<T> pool;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "ObjectPool<T>",
                            "ObjectPool<T>"
                        ]
                    ]
                },
                "865-865:readWriteLock": {
                    "start": 865,
                    "end": 865,
                    "body": [
                        "        private final ReentrantReadWriteLock readWriteLock = new ReentrantReadWriteLock();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "ReentrantReadWriteLock",
                            "java.util.concurrent.locks.ReentrantReadWriteLock"
                        ]
                    ]
                }
            }
        },
        "SynchronizedPooledObjectFactory": {
            "start": 1003,
            "end": 1004,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "1082-1089:validateObject": {
                    "start": 1082,
                    "end": 1089,
                    "body": [
                        "        public boolean validateObject(final PooledObject<T> p) {\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                return factory.validateObject(p);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "validateObject(PooledObject<T>)",
                    "parameters": [
                        "p"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObjectFactory",
                            "validateObject(org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "1072-1078:toString": {
                    "start": 1072,
                    "end": 1078,
                    "body": [
                        "        public String toString() {\n",
                        "            final StringBuilder sb = new StringBuilder();\n",
                        "            sb.append(\"SynchronizedPoolableObjectFactory\");\n",
                        "            sb.append(\"{factory=\").append(factory);\n",
                        "            sb.append('}');\n",
                        "            return sb.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ]
                },
                "1061-1068:passivateObject": {
                    "start": 1061,
                    "end": 1068,
                    "body": [
                        "        public void passivateObject(final PooledObject<T> p) throws Exception {\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                factory.passivateObject(p);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "passivateObject(PooledObject<T>)",
                    "parameters": [
                        "p"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObjectFactory",
                            "passivateObject(org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "1050-1057:makeObject": {
                    "start": 1050,
                    "end": 1057,
                    "body": [
                        "        public PooledObject<T> makeObject() throws Exception {\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                return factory.makeObject();\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "PooledObject<T>",
                            "PooledObject<T>"
                        ]
                    ],
                    "signature": "makeObject()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObjectFactory",
                            "makeObject()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "1039-1046:destroyObject0": {
                    "start": 1039,
                    "end": 1046,
                    "body": [
                        "        public void destroyObject0(final PooledObject<T> p) throws Exception {\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                factory.destroyObject0(p);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "destroyObject0(PooledObject<T>)",
                    "parameters": [
                        "p"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObjectFactory",
                            "destroyObject0(org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "1028-1035:activateObject": {
                    "start": 1028,
                    "end": 1035,
                    "body": [
                        "        public void activateObject(final PooledObject<T> p) throws Exception {\n",
                        "            writeLock.lock();\n",
                        "            try {\n",
                        "                factory.activateObject(p);\n",
                        "            } finally {\n",
                        "                writeLock.unlock();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "activateObject(PooledObject<T>)",
                    "parameters": [
                        "p"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "lock()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObjectFactory",
                            "activateObject(org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock",
                            "unlock()"
                        ]
                    ]
                },
                "1018-1024:SynchronizedPooledObjectFactory": {
                    "start": 1018,
                    "end": 1024,
                    "body": [
                        "        SynchronizedPooledObjectFactory(final PooledObjectFactory<T> factory)\n",
                        "                throws IllegalArgumentException {\n",
                        "            if (factory == null) {\n",
                        "                throw new IllegalArgumentException(\"factory must not be null.\");\n",
                        "            }\n",
                        "            this.factory = factory;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "SynchronizedPooledObjectFactory(PooledObjectFactory<T>)",
                    "parameters": [
                        "factory"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ]
                    ]
                }
            },
            "fields": {
                "1010-1010:factory": {
                    "start": 1010,
                    "end": 1010,
                    "body": [
                        "        private final PooledObjectFactory<T> factory;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "PooledObjectFactory<T>",
                            "PooledObjectFactory<T>"
                        ]
                    ]
                },
                "1007-1007:writeLock": {
                    "start": 1007,
                    "end": 1007,
                    "body": [
                        "        private final WriteLock writeLock = new ReentrantReadWriteLock().writeLock();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "WriteLock",
                            "java.util.concurrent.locks.WriteLock"
                        ]
                    ]
                }
            }
        },
        "TimerHolder": {
            "start": 1096,
            "end": 1096,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PoolUtils",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {},
            "fields": {
                "1097-1097:MIN_IDLE_TIMER": {
                    "start": 1097,
                    "end": 1097,
                    "body": [
                        "        static final Timer MIN_IDLE_TIMER = new Timer(true);\n"
                    ],
                    "modifiers": [
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "Timer",
                            "java.util.Timer"
                        ]
                    ]
                }
            }
        }
    }
}