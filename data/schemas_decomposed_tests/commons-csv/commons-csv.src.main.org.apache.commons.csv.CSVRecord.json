{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-csv/src/main/java/org/apache/commons/csv/CSVRecord.java",
    "imports": {
        "20-20:import Serializable": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.io.Serializable;\n"
            ]
        },
        "27-27:import Stream": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.util.stream.Stream;\n"
            ]
        },
        "25-25:import Map": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "24-24:import List": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "22-22:import Iterator": {
            "start": 22,
            "end": 22,
            "body": [
                "import java.util.Iterator;\n"
            ]
        },
        "21-21:import Arrays": {
            "start": 21,
            "end": 21,
            "body": [
                "import java.util.Arrays;\n"
            ]
        },
        "23-23:import LinkedHashMap": {
            "start": 23,
            "end": 23,
            "body": [
                "import java.util.LinkedHashMap;\n"
            ]
        },
        "26-26:import Collectors": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.util.stream.Collectors;\n"
            ]
        }
    },
    "classes": {
        "CSVRecord": {
            "start": 39,
            "end": 39,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "new BiConsumer<String,Integer>(...) { ... }"
            ],
            "implements": [
                "Serializable",
                "Iterable<String>"
            ],
            "extends": [],
            "methods": {
                "321-329:toString": {
                    "start": 321,
                    "end": 329,
                    "body": [
                        "    public String toString() {\n",
                        "        return \"CSVRecord [comment='\"\n",
                        "                + comment\n",
                        "                + \"', recordNumber=\"\n",
                        "                + recordNumber\n",
                        "                + \", values=\"\n",
                        "                + Arrays.toString(values)\n",
                        "                + \"]\";\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "toString(java.lang.Object[])"
                        ]
                    ]
                },
                "245-247:iterator": {
                    "start": 245,
                    "end": 247,
                    "body": [
                        "    public Iterator<String> iterator() {\n",
                        "        return toList().iterator();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Iterator<String>",
                            "java.util.Iterator<String>"
                        ]
                    ],
                    "signature": "iterator()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/List",
                            "iterator()"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "298-300:toList"
                        ]
                    ]
                },
                "337-339:values": {
                    "start": 337,
                    "end": 339,
                    "body": [
                        "    public String[] values() {\n",
                        "        return values;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String[]",
                            "java.lang.String[]"
                        ]
                    ],
                    "signature": "values()",
                    "parameters": [],
                    "calls": []
                },
                "309-311:toMap": {
                    "start": 309,
                    "end": 311,
                    "body": [
                        "    public Map<String, String> toMap() {\n",
                        "        return putIn(new LinkedHashMap<>(values.length));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Map<String,String>",
                            "java.util.Map<String,String>"
                        ]
                    ],
                    "signature": "toMap()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "257-269:putIn"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashMap",
                            "LinkedHashMap<K,V>(int)"
                        ]
                    ]
                },
                "298-300:toList": {
                    "start": 298,
                    "end": 300,
                    "body": [
                        "    public List<String> toList() {\n",
                        "        return stream().collect(Collectors.toList());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "List<String>",
                            "java.util.List<String>"
                        ]
                    ],
                    "signature": "toList()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/stream/Stream",
                            "collect(java.util.stream.Collector)"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "286-288:stream"
                        ],
                        [
                            "library",
                            "java.base/java/util/stream/Collectors",
                            "toList()"
                        ]
                    ]
                },
                "286-288:stream": {
                    "start": 286,
                    "end": 288,
                    "body": [
                        "    public Stream<String> stream() {\n",
                        "        return Stream.of(values);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Stream<String>",
                            "java.util.stream.Stream<String>"
                        ]
                    ],
                    "signature": "stream()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/stream/Stream",
                            "of(java.lang.Object[])"
                        ]
                    ]
                },
                "276-278:size": {
                    "start": 276,
                    "end": 278,
                    "body": [
                        "    public int size() {\n",
                        "        return values.length;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "size()",
                    "parameters": [],
                    "calls": []
                },
                "257-269:putIn": {
                    "start": 257,
                    "end": 269,
                    "body": [
                        "    public <M extends Map<String, String>> M putIn(final M map) {\n",
                        "        if (getHeaderMapRaw() == null) {\n",
                        "            return map;\n",
                        "        }\n",
                        "        getHeaderMapRaw()\n",
                        "                .forEach(\n",
                        "                        (key, value) -> {\n",
                        "                            if (value < values.length) {\n",
                        "                                map.put(key, values[value]);\n",
                        "                            }\n",
                        "                        });\n",
                        "        return map;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "M",
                            "M"
                        ]
                    ],
                    "signature": "putIn(M)",
                    "parameters": [
                        "map"
                    ],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "153-155:getHeaderMapRaw"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "forEach(java.util.function.BiConsumer)"
                        ]
                    ]
                },
                "235-237:isSet1": {
                    "start": 235,
                    "end": 237,
                    "body": [
                        "    public boolean isSet1(final String name) {\n",
                        "        return isMapped(name) && getHeaderMapRaw().get(name).intValue() < values.length;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isSet1(String)",
                    "parameters": [
                        "name"
                    ],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "214-217:isMapped"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "intValue()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "153-155:getHeaderMapRaw"
                        ]
                    ]
                },
                "225-227:isSet0": {
                    "start": 225,
                    "end": 227,
                    "body": [
                        "    public boolean isSet0(final int index) {\n",
                        "        return 0 <= index && index < values.length;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isSet0(int)",
                    "parameters": [
                        "index"
                    ],
                    "calls": []
                },
                "214-217:isMapped": {
                    "start": 214,
                    "end": 217,
                    "body": [
                        "    public boolean isMapped(final String name) {\n",
                        "        final Map<String, Integer> headerMap = getHeaderMapRaw();\n",
                        "        return headerMap != null && headerMap.containsKey(name);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isMapped(String)",
                    "parameters": [
                        "name"
                    ],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "153-155:getHeaderMapRaw"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "containsKey(java.lang.Object)"
                        ]
                    ]
                },
                "203-206:isConsistent": {
                    "start": 203,
                    "end": 206,
                    "body": [
                        "    public boolean isConsistent() {\n",
                        "        final Map<String, Integer> headerMap = getHeaderMapRaw();\n",
                        "        return headerMap == null || headerMap.size() == values.length;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isConsistent()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "153-155:getHeaderMapRaw"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "size()"
                        ]
                    ]
                },
                "191-193:hasComment": {
                    "start": 191,
                    "end": 193,
                    "body": [
                        "    public boolean hasComment() {\n",
                        "        return comment != null;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "hasComment()",
                    "parameters": [],
                    "calls": []
                },
                "179-181:getRecordNumber": {
                    "start": 179,
                    "end": 181,
                    "body": [
                        "    public long getRecordNumber() {\n",
                        "        return recordNumber;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getRecordNumber()",
                    "parameters": [],
                    "calls": []
                },
                "166-168:getParser": {
                    "start": 166,
                    "end": 168,
                    "body": [
                        "    public CSVParser getParser() {\n",
                        "        return parser;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "CSVParser",
                            "CSVParser"
                        ]
                    ],
                    "signature": "getParser()",
                    "parameters": [],
                    "calls": []
                },
                "149-151:getComment": {
                    "start": 149,
                    "end": 151,
                    "body": [
                        "    public String getComment() {\n",
                        "        return comment;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getComment()",
                    "parameters": [],
                    "calls": []
                },
                "138-140:getCharacterPosition": {
                    "start": 138,
                    "end": 140,
                    "body": [
                        "    public long getCharacterPosition() {\n",
                        "        return characterPosition;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getCharacterPosition()",
                    "parameters": [],
                    "calls": []
                },
                "109-130:get2": {
                    "start": 109,
                    "end": 130,
                    "body": [
                        "    public String get2(final String name) {\n",
                        "        final Map<String, Integer> headerMap = getHeaderMapRaw();\n",
                        "        if (headerMap == null) {\n",
                        "            throw new IllegalStateException(\n",
                        "                    \"No header mapping was specified, the record values can't be accessed by name\");\n",
                        "        }\n",
                        "        final Integer index = headerMap.get(name);\n",
                        "        if (index == null) {\n",
                        "            throw new IllegalArgumentException(\n",
                        "                    String.format(\n",
                        "                            \"Mapping for %s not found, expected one of %s\",\n",
                        "                            name, headerMap.keySet()));\n",
                        "        }\n",
                        "        try {\n",
                        "            return values[index.intValue()];\n",
                        "        } catch (final ArrayIndexOutOfBoundsException e) {\n",
                        "            throw new IllegalArgumentException(\n",
                        "                    String.format(\n",
                        "                            \"Index for header '%s' is %d but CSVRecord only has %d values!\",\n",
                        "                            name, index, Integer.valueOf(values.length)));\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "get2(String)",
                    "parameters": [
                        "name"
                    ],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "153-155:getHeaderMapRaw"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalStateException",
                            "IllegalStateException(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "format(java.lang.String,java.lang.Object[])"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "keySet()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "intValue()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "valueOf(int)"
                        ]
                    ]
                },
                "86-88:get1": {
                    "start": 86,
                    "end": 88,
                    "body": [
                        "    public String get1(final int i) {\n",
                        "        return values[i];\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "get1(int)",
                    "parameters": [
                        "i"
                    ],
                    "calls": []
                },
                "76-78:get0": {
                    "start": 76,
                    "end": 78,
                    "body": [
                        "    public String get0(final Enum<?> e) {\n",
                        "        return get2(e == null ? null : e.name());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "get0(Enum<?>)",
                    "parameters": [
                        "e"
                    ],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "109-130:get2"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Enum",
                            "name()"
                        ]
                    ]
                },
                "153-155:getHeaderMapRaw": {
                    "start": 153,
                    "end": 155,
                    "body": [
                        "    private Map<String, Integer> getHeaderMapRaw() {\n",
                        "        return parser == null ? null : parser.getHeaderMapRaw();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "Map<String,Integer>",
                            "java.util.Map<String,Integer>"
                        ]
                    ],
                    "signature": "getHeaderMapRaw()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "556-558:getHeaderMapRaw"
                        ]
                    ]
                },
                "57-68:CSVRecord": {
                    "start": 57,
                    "end": 68,
                    "body": [
                        "    CSVRecord(\n",
                        "            final CSVParser parser,\n",
                        "            final String[] values,\n",
                        "            final String comment,\n",
                        "            final long recordNumber,\n",
                        "            final long characterPosition) {\n",
                        "        this.recordNumber = recordNumber;\n",
                        "        this.values = values != null ? values : Constants.EMPTY_STRING_ARRAY;\n",
                        "        this.parser = parser;\n",
                        "        this.comment = comment;\n",
                        "        this.characterPosition = characterPosition;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "CSVRecord(CSVParser, String[], String, long, long)",
                    "parameters": [
                        "parser",
                        "values",
                        "comment",
                        "recordNumber",
                        "characterPosition"
                    ],
                    "calls": []
                }
            },
            "fields": {
                "55-55:parser": {
                    "start": 55,
                    "end": 55,
                    "body": [
                        "    private final transient CSVParser parser;\n"
                    ],
                    "modifiers": [
                        "final",
                        "transient",
                        "private"
                    ],
                    "types": [
                        [
                            "CSVParser",
                            "CSVParser"
                        ]
                    ]
                },
                "52-52:values": {
                    "start": 52,
                    "end": 52,
                    "body": [
                        "    private final String[] values;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "String[]",
                            "java.lang.String[]"
                        ]
                    ]
                },
                "49-49:recordNumber": {
                    "start": 49,
                    "end": 49,
                    "body": [
                        "    private final long recordNumber;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                },
                "46-46:comment": {
                    "start": 46,
                    "end": 46,
                    "body": [
                        "    private final String comment;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "43-43:characterPosition": {
                    "start": 43,
                    "end": 43,
                    "body": [
                        "    private final long characterPosition;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                },
                "41-41:serialVersionUID": {
                    "start": 41,
                    "end": 41,
                    "body": [
                        "    private static final long serialVersionUID = 1L;\n"
                    ],
                    "modifiers": [
                        "static",
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                }
            }
        },
        "new BiConsumer<String,Integer>(...) { ... }": {
            "start": 263,
            "end": 267,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "CSVRecord",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "261-267:accept": {
                    "start": 261,
                    "end": 267,
                    "body": [
                        "        getHeaderMapRaw()\n",
                        "                .forEach(\n",
                        "                        (key, value) -> {\n",
                        "                            if (value < values.length) {\n",
                        "                                map.put(key, values[value]);\n",
                        "                            }\n",
                        "                        });\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "accept(String, Integer)",
                    "parameters": [
                        "key",
                        "value"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}