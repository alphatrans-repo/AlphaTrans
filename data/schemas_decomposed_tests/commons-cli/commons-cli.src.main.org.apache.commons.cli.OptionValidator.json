{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-cli/src/main/java/org/apache/commons/cli/OptionValidator.java",
    "imports": {},
    "classes": {
        "OptionValidator": {
            "start": 25,
            "end": 25,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "60-85:validate": {
                    "start": 60,
                    "end": 85,
                    "body": [
                        "    static String validate(final String option) throws IllegalArgumentException {\n",
                        "        if (option == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "\n",
                        "        if (option.length() == 1) {\n",
                        "            final char ch = option.charAt(0);\n",
                        "\n",
                        "            if (!isValidOpt(ch)) {\n",
                        "                throw new IllegalArgumentException(\"Illegal option name '\" + ch + \"'\");\n",
                        "            }\n",
                        "        } else {\n",
                        "            for (final char ch : option.toCharArray()) {\n",
                        "                if (!isValidChar(ch)) {\n",
                        "                    throw new IllegalArgumentException(\n",
                        "                            \"The option '\"\n",
                        "                                    + option\n",
                        "                                    + \"' contains an illegal \"\n",
                        "                                    + \"character : '\"\n",
                        "                                    + ch\n",
                        "                                    + \"'\");\n",
                        "                }\n",
                        "            }\n",
                        "        }\n",
                        "        return option;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "validate(String)",
                    "parameters": [
                        "option"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "charAt(int)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.OptionValidator",
                            "OptionValidator",
                            "42-44:isValidOpt"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "toCharArray()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.OptionValidator",
                            "OptionValidator",
                            "32-34:isValidChar"
                        ]
                    ]
                },
                "42-44:isValidOpt": {
                    "start": 42,
                    "end": 44,
                    "body": [
                        "    private static boolean isValidOpt(final char c) {\n",
                        "        return isValidChar(c) || c == '?' || c == '@';\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isValidOpt(char)",
                    "parameters": [
                        "c"
                    ],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.OptionValidator",
                            "OptionValidator",
                            "32-34:isValidChar"
                        ]
                    ]
                },
                "32-34:isValidChar": {
                    "start": 32,
                    "end": 34,
                    "body": [
                        "    private static boolean isValidChar(final char c) {\n",
                        "        return Character.isJavaIdentifierPart(c);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isValidChar(char)",
                    "parameters": [
                        "c"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "isJavaIdentifierPart(char)"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}