{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/JavaFastPFOR/src/test/java/me/lemire/integercompression/BasicTest.java",
    "imports": {
        "11-11:import Random": {
            "start": 11,
            "end": 11,
            "body": [
                "import java.util.Random;\n"
            ]
        },
        "10-10:import Arrays": {
            "start": 10,
            "end": 10,
            "body": [
                "import java.util.Arrays;\n"
            ]
        },
        "21-21:import Test": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "16-16:import IntegratedIntegerCODEC": {
            "start": 16,
            "end": 16,
            "body": [
                "import me.lemire.integercompression.differential.IntegratedIntegerCODEC;\n"
            ]
        },
        "13-13:import Delta": {
            "start": 13,
            "end": 13,
            "body": [
                "import me.lemire.integercompression.differential.Delta;\n"
            ]
        },
        "14-14:import IntegratedBinaryPacking": {
            "start": 14,
            "end": 14,
            "body": [
                "import me.lemire.integercompression.differential.IntegratedBinaryPacking;\n"
            ]
        },
        "15-15:import IntegratedComposition": {
            "start": 15,
            "end": 15,
            "body": [
                "import me.lemire.integercompression.differential.IntegratedComposition;\n"
            ]
        },
        "17-17:import IntegratedVariableByte": {
            "start": 17,
            "end": 17,
            "body": [
                "import me.lemire.integercompression.differential.IntegratedVariableByte;\n"
            ]
        },
        "18-18:import XorBinaryPacking": {
            "start": 18,
            "end": 18,
            "body": [
                "import me.lemire.integercompression.differential.XorBinaryPacking;\n"
            ]
        },
        "19-19:import ClusteredDataGenerator": {
            "start": 19,
            "end": 19,
            "body": [
                "import me.lemire.integercompression.synth.ClusteredDataGenerator;\n"
            ]
        },
        "23-23:import static Assert.*": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "BasicTest": {
            "start": 31,
            "end": 31,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "2724-2738:fastPfor128Test_test3_decomposed": {
                    "start": 2724,
                    "end": 2738,
                    "body": [
                        "    public void fastPfor128Test_test3_decomposed()  {\n",
                        "        FastPFOR128 codec1 = FastPFOR128.FastPFOR1281();\n",
                        "        FastPFOR128 codec2 = FastPFOR128.FastPFOR1281();\n",
                        "        int N = FastPFOR128.BLOCK_SIZE;\n",
                        "        int[] data = new int[N];\n",
                        "        for (int i = 0; i < N; i++)\n",
                        "            data[i] = 0;\n",
                        "        data[126] = -1;\n",
                        "        int[] comp = TestUtils.compress1(codec1, Arrays.copyOf(data, N));\n",
                        "        int[] answer = TestUtils.uncompress0(codec2, comp, N);\n",
                        "        for (int k = 0; k < N; ++k)\n",
                        "            if (answer[k] != data[k])\n",
                        "                throw new RuntimeException(\"bug \" + k + \" \" + answer[k]\n",
                        "                        + \" != \" + data[k]);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fastPfor128Test_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "87-93:compress1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "95-101:uncompress0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/RuntimeException",
                            "RuntimeException(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def fastPfor128Test_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2711-2721:fastPfor128Test_test2_decomposed": {
                    "start": 2711,
                    "end": 2721,
                    "body": [
                        "    public void fastPfor128Test_test2_decomposed()  {\n",
                        "        FastPFOR128 codec1 = FastPFOR128.FastPFOR1281();\n",
                        "        FastPFOR128 codec2 = FastPFOR128.FastPFOR1281();\n",
                        "        int N = FastPFOR128.BLOCK_SIZE;\n",
                        "        int[] data = new int[N];\n",
                        "        for (int i = 0; i < N; i++)\n",
                        "            data[i] = 0;\n",
                        "        data[126] = -1;\n",
                        "        int[] comp = TestUtils.compress1(codec1, Arrays.copyOf(data, N));\n",
                        "        int[] answer = TestUtils.uncompress0(codec2, comp, N);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fastPfor128Test_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "87-93:compress1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "95-101:uncompress0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def fastPfor128Test_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2699-2708:fastPfor128Test_test1_decomposed": {
                    "start": 2699,
                    "end": 2708,
                    "body": [
                        "    public void fastPfor128Test_test1_decomposed()  {\n",
                        "        FastPFOR128 codec1 = FastPFOR128.FastPFOR1281();\n",
                        "        FastPFOR128 codec2 = FastPFOR128.FastPFOR1281();\n",
                        "        int N = FastPFOR128.BLOCK_SIZE;\n",
                        "        int[] data = new int[N];\n",
                        "        for (int i = 0; i < N; i++)\n",
                        "            data[i] = 0;\n",
                        "        data[126] = -1;\n",
                        "        int[] comp = TestUtils.compress1(codec1, Arrays.copyOf(data, N));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fastPfor128Test_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "87-93:compress1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def fastPfor128Test_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2693-2696:fastPfor128Test_test0_decomposed": {
                    "start": 2693,
                    "end": 2696,
                    "body": [
                        "    public void fastPfor128Test_test0_decomposed()  {\n",
                        "        FastPFOR128 codec1 = FastPFOR128.FastPFOR1281();\n",
                        "        FastPFOR128 codec2 = FastPFOR128.FastPFOR1281();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fastPfor128Test_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def fastPfor128Test_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2676-2690:fastPforTest_test3_decomposed": {
                    "start": 2676,
                    "end": 2690,
                    "body": [
                        "    public void fastPforTest_test3_decomposed()  {\n",
                        "        FastPFOR codec1 = FastPFOR.FastPFOR1();\n",
                        "        FastPFOR codec2 = FastPFOR.FastPFOR1();\n",
                        "        int N = FastPFOR.BLOCK_SIZE;\n",
                        "        int[] data = new int[N];\n",
                        "        for (int i = 0; i < N; i++)\n",
                        "            data[i] = 0;\n",
                        "        data[126] = -1;\n",
                        "        int[] comp = TestUtils.compress1(codec1, Arrays.copyOf(data, N));\n",
                        "        int[] answer = TestUtils.uncompress0(codec2, comp, N);\n",
                        "        for (int k = 0; k < N; ++k)\n",
                        "            if (answer[k] != data[k])\n",
                        "                throw new RuntimeException(\"bug \" + k + \" \" + answer[k]\n",
                        "                        + \" != \" + data[k]);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fastPforTest_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "87-93:compress1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "95-101:uncompress0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/RuntimeException",
                            "RuntimeException(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def fastPforTest_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2663-2673:fastPforTest_test2_decomposed": {
                    "start": 2663,
                    "end": 2673,
                    "body": [
                        "    public void fastPforTest_test2_decomposed()  {\n",
                        "        FastPFOR codec1 = FastPFOR.FastPFOR1();\n",
                        "        FastPFOR codec2 = FastPFOR.FastPFOR1();\n",
                        "        int N = FastPFOR.BLOCK_SIZE;\n",
                        "        int[] data = new int[N];\n",
                        "        for (int i = 0; i < N; i++)\n",
                        "            data[i] = 0;\n",
                        "        data[126] = -1;\n",
                        "        int[] comp = TestUtils.compress1(codec1, Arrays.copyOf(data, N));\n",
                        "        int[] answer = TestUtils.uncompress0(codec2, comp, N);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fastPforTest_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "87-93:compress1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "95-101:uncompress0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def fastPforTest_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2651-2660:fastPforTest_test1_decomposed": {
                    "start": 2651,
                    "end": 2660,
                    "body": [
                        "    public void fastPforTest_test1_decomposed()  {\n",
                        "        FastPFOR codec1 = FastPFOR.FastPFOR1();\n",
                        "        FastPFOR codec2 = FastPFOR.FastPFOR1();\n",
                        "        int N = FastPFOR.BLOCK_SIZE;\n",
                        "        int[] data = new int[N];\n",
                        "        for (int i = 0; i < N; i++)\n",
                        "            data[i] = 0;\n",
                        "        data[126] = -1;\n",
                        "        int[] comp = TestUtils.compress1(codec1, Arrays.copyOf(data, N));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fastPforTest_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "87-93:compress1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def fastPforTest_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2645-2648:fastPforTest_test0_decomposed": {
                    "start": 2645,
                    "end": 2648,
                    "body": [
                        "    public void fastPforTest_test0_decomposed()  {\n",
                        "        FastPFOR codec1 = FastPFOR.FastPFOR1();\n",
                        "        FastPFOR codec2 = FastPFOR.FastPFOR1();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fastPforTest_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def fastPforTest_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2590-2642:testUnsortedExample_test44_decomposed": {
                    "start": 2590,
                    "end": 2642,
                    "body": [
                        "    public void testUnsortedExample_test44_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted3(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted3(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted2(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted2(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test44_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test44_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2537-2587:testUnsortedExample_test43_decomposed": {
                    "start": 2537,
                    "end": 2587,
                    "body": [
                        "    public void testUnsortedExample_test43_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted3(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted3(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted2(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test43_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test43_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2486-2534:testUnsortedExample_test42_decomposed": {
                    "start": 2486,
                    "end": 2534,
                    "body": [
                        "    public void testUnsortedExample_test42_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted3(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted3(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test42_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test42_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2436-2483:testUnsortedExample_test41_decomposed": {
                    "start": 2436,
                    "end": 2483,
                    "body": [
                        "    public void testUnsortedExample_test41_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted3(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test41_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test41_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2387-2433:testUnsortedExample_test40_decomposed": {
                    "start": 2387,
                    "end": 2433,
                    "body": [
                        "    public void testUnsortedExample_test40_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted3(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test40_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test40_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2339-2384:testUnsortedExample_test39_decomposed": {
                    "start": 2339,
                    "end": 2384,
                    "body": [
                        "    public void testUnsortedExample_test39_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test39_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test39_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2292-2336:testUnsortedExample_test38_decomposed": {
                    "start": 2292,
                    "end": 2336,
                    "body": [
                        "    public void testUnsortedExample_test38_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test38_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test38_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2246-2289:testUnsortedExample_test37_decomposed": {
                    "start": 2246,
                    "end": 2289,
                    "body": [
                        "    public void testUnsortedExample_test37_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test37_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test37_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2201-2243:testUnsortedExample_test36_decomposed": {
                    "start": 2201,
                    "end": 2243,
                    "body": [
                        "    public void testUnsortedExample_test36_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new OptPFD(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test36_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test36_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2157-2198:testUnsortedExample_test35_decomposed": {
                    "start": 2157,
                    "end": 2198,
                    "body": [
                        "    public void testUnsortedExample_test35_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test35_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test35_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2114-2154:testUnsortedExample_test34_decomposed": {
                    "start": 2114,
                    "end": 2154,
                    "body": [
                        "    public void testUnsortedExample_test34_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test34_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test34_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2072-2111:testUnsortedExample_test33_decomposed": {
                    "start": 2072,
                    "end": 2111,
                    "body": [
                        "    public void testUnsortedExample_test33_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted3(new Composition(new NewPFD(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test33_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test33_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "2031-2069:testUnsortedExample_test32_decomposed": {
                    "start": 2031,
                    "end": 2069,
                    "body": [
                        "    public void testUnsortedExample_test32_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "        testUnsorted3(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test32_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test32_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1991-2028:testUnsortedExample_test31_decomposed": {
                    "start": 1991,
                    "end": 2028,
                    "body": [
                        "    public void testUnsortedExample_test31_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "        testUnsorted3(new IntegratedVariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test31_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test31_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1952-1988:testUnsortedExample_test30_decomposed": {
                    "start": 1952,
                    "end": 1988,
                    "body": [
                        "    public void testUnsortedExample_test30_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted3(new VariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test30_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test30_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1914-1949:testUnsortedExample_test29_decomposed": {
                    "start": 1914,
                    "end": 1949,
                    "body": [
                        "    public void testUnsortedExample_test29_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted3(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test29_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test29_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1878-1911:testUnsortedExample_test28_decomposed": {
                    "start": 1878,
                    "end": 1911,
                    "body": [
                        "    public void testUnsortedExample_test28_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted3(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test28_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "321-336:testUnsorted3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test28_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1844-1875:testUnsortedExample_test27_decomposed": {
                    "start": 1844,
                    "end": 1875,
                    "body": [
                        "    public void testUnsortedExample_test27_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted2(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test27_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test27_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1811-1841:testUnsortedExample_test26_decomposed": {
                    "start": 1811,
                    "end": 1841,
                    "body": [
                        "    public void testUnsortedExample_test26_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test26_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test26_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1779-1808:testUnsortedExample_test25_decomposed": {
                    "start": 1779,
                    "end": 1808,
                    "body": [
                        "    public void testUnsortedExample_test25_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted2(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test25_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test25_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1748-1776:testUnsortedExample_test24_decomposed": {
                    "start": 1748,
                    "end": 1776,
                    "body": [
                        "    public void testUnsortedExample_test24_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test24_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test24_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1718-1745:testUnsortedExample_test23_decomposed": {
                    "start": 1718,
                    "end": 1745,
                    "body": [
                        "    public void testUnsortedExample_test23_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test23_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test23_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1689-1715:testUnsortedExample_test22_decomposed": {
                    "start": 1689,
                    "end": 1715,
                    "body": [
                        "    public void testUnsortedExample_test22_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test22_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test22_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1661-1686:testUnsortedExample_test21_decomposed": {
                    "start": 1661,
                    "end": 1686,
                    "body": [
                        "    public void testUnsortedExample_test21_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new OptPFD(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test21_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test21_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1634-1658:testUnsortedExample_test20_decomposed": {
                    "start": 1634,
                    "end": 1658,
                    "body": [
                        "    public void testUnsortedExample_test20_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test20_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test20_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1608-1631:testUnsortedExample_test19_decomposed": {
                    "start": 1608,
                    "end": 1631,
                    "body": [
                        "    public void testUnsortedExample_test19_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test19_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test19_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1583-1605:testUnsortedExample_test18_decomposed": {
                    "start": 1583,
                    "end": 1605,
                    "body": [
                        "    public void testUnsortedExample_test18_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted2(new Composition(new NewPFD(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test18_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test18_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1559-1580:testUnsortedExample_test17_decomposed": {
                    "start": 1559,
                    "end": 1580,
                    "body": [
                        "    public void testUnsortedExample_test17_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "        testUnsorted2(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test17_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test17_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1536-1556:testUnsortedExample_test16_decomposed": {
                    "start": 1536,
                    "end": 1556,
                    "body": [
                        "    public void testUnsortedExample_test16_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "        testUnsorted2(new IntegratedVariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test16_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test16_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1514-1533:testUnsortedExample_test15_decomposed": {
                    "start": 1514,
                    "end": 1533,
                    "body": [
                        "    public void testUnsortedExample_test15_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testUnsorted2(new VariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test15_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "304-319:testUnsorted2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test15_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1493-1511:testUnsortedExample_test14_decomposed": {
                    "start": 1493,
                    "end": 1511,
                    "body": [
                        "    public void testUnsortedExample_test14_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "        testUnsorted(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test14_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test14_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1474-1490:testUnsortedExample_test13_decomposed": {
                    "start": 1474,
                    "end": 1490,
                    "body": [
                        "    public void testUnsortedExample_test13_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testUnsorted(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                new IntegratedVariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test13_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test13_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1457-1471:testUnsortedExample_test12_decomposed": {
                    "start": 1457,
                    "end": 1471,
                    "body": [
                        "    public void testUnsortedExample_test12_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testUnsorted(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test12_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test12_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1441-1454:testUnsortedExample_test11_decomposed": {
                    "start": 1441,
                    "end": 1454,
                    "body": [
                        "    public void testUnsortedExample_test11_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test11_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1426-1438:testUnsortedExample_test10_decomposed": {
                    "start": 1426,
                    "end": 1438,
                    "body": [
                        "    public void testUnsortedExample_test10_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testUnsorted(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test10_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1412-1423:testUnsortedExample_test9_decomposed": {
                    "start": 1412,
                    "end": 1423,
                    "body": [
                        "    public void testUnsortedExample_test9_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test9_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1399-1409:testUnsortedExample_test8_decomposed": {
                    "start": 1399,
                    "end": 1409,
                    "body": [
                        "    public void testUnsortedExample_test8_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test8_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1387-1396:testUnsortedExample_test7_decomposed": {
                    "start": 1387,
                    "end": 1396,
                    "body": [
                        "    public void testUnsortedExample_test7_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test7_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1376-1384:testUnsortedExample_test6_decomposed": {
                    "start": 1376,
                    "end": 1384,
                    "body": [
                        "    public void testUnsortedExample_test6_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new OptPFD(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test6_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1366-1373:testUnsortedExample_test5_decomposed": {
                    "start": 1366,
                    "end": 1373,
                    "body": [
                        "    public void testUnsortedExample_test5_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test5_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1357-1363:testUnsortedExample_test4_decomposed": {
                    "start": 1357,
                    "end": 1363,
                    "body": [
                        "    public void testUnsortedExample_test4_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1349-1354:testUnsortedExample_test3_decomposed": {
                    "start": 1349,
                    "end": 1354,
                    "body": [
                        "    public void testUnsortedExample_test3_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "        testUnsorted(new Composition(new NewPFD(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1342-1346:testUnsortedExample_test2_decomposed": {
                    "start": 1342,
                    "end": 1346,
                    "body": [
                        "    public void testUnsortedExample_test2_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "        testUnsorted(new Composition(new BinaryPacking(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1336-1339:testUnsortedExample_test1_decomposed": {
                    "start": 1336,
                    "end": 1339,
                    "body": [
                        "    public void testUnsortedExample_test1_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "        testUnsorted(new IntegratedVariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1331-1333:testUnsortedExample_test0_decomposed": {
                    "start": 1331,
                    "end": 1333,
                    "body": [
                        "    public void testUnsortedExample_test0_decomposed()  {\n",
                        "        testUnsorted(new VariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsortedExample_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsortedExample_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1297-1328:zeroinzerouttest_test26_decomposed": {
                    "start": 1297,
                    "end": 1328,
                    "body": [
                        "    public void zeroinzerouttest_test26_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new IntegratedComposition(\n",
                        "                new IntegratedBinaryPacking(), new IntegratedVariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test26_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test26_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1265-1294:zeroinzerouttest_test25_decomposed": {
                    "start": 1265,
                    "end": 1294,
                    "body": [
                        "    public void zeroinzerouttest_test25_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(new Composition(FastPFOR.FastPFOR1(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test25_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test25_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1234-1262:zeroinzerouttest_test24_decomposed": {
                    "start": 1234,
                    "end": 1262,
                    "body": [
                        "    public void zeroinzerouttest_test24_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test24_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test24_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1204-1231:zeroinzerouttest_test23_decomposed": {
                    "start": 1204,
                    "end": 1231,
                    "body": [
                        "    public void zeroinzerouttest_test23_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test23_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test23_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1175-1201:zeroinzerouttest_test22_decomposed": {
                    "start": 1175,
                    "end": 1201,
                    "body": [
                        "    public void zeroinzerouttest_test22_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test22_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test22_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1147-1172:zeroinzerouttest_test21_decomposed": {
                    "start": 1147,
                    "end": 1172,
                    "body": [
                        "    public void zeroinzerouttest_test21_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS16(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test21_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test21_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1120-1144:zeroinzerouttest_test20_decomposed": {
                    "start": 1120,
                    "end": 1144,
                    "body": [
                        "    public void zeroinzerouttest_test20_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFDS9(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test20_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test20_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1094-1117:zeroinzerouttest_test19_decomposed": {
                    "start": 1094,
                    "end": 1117,
                    "body": [
                        "    public void zeroinzerouttest_test19_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new OptPFD(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test19_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test19_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1069-1091:zeroinzerouttest_test18_decomposed": {
                    "start": 1069,
                    "end": 1091,
                    "body": [
                        "    public void zeroinzerouttest_test18_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS16(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test18_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test18_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1045-1066:zeroinzerouttest_test17_decomposed": {
                    "start": 1045,
                    "end": 1066,
                    "body": [
                        "    public void zeroinzerouttest_test17_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFDS9(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test17_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test17_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1022-1042:zeroinzerouttest_test16_decomposed": {
                    "start": 1022,
                    "end": 1042,
                    "body": [
                        "    public void zeroinzerouttest_test16_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new NewPFD(), new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test16_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test16_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "1000-1019:zeroinzerouttest_test15_decomposed": {
                    "start": 1000,
                    "end": 1019,
                    "body": [
                        "    public void zeroinzerouttest_test15_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "        testZeroInZeroOut(new Composition(new BinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test15_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test15_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "980-997:zeroinzerouttest_test14_decomposed": {
                    "start": 980,
                    "end": 997,
                    "body": [
                        "    public void zeroinzerouttest_test14_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "        testZeroInZeroOut(new Composition(new IntegratedBinaryPacking(),\n",
                        "                new VariableByte()));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test14_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test14_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "962-977:zeroinzerouttest_test13_decomposed": {
                    "start": 962,
                    "end": 977,
                    "body": [
                        "    public void zeroinzerouttest_test13_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "        testZeroInZeroOut(new VariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test13_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test13_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "945-959:zeroinzerouttest_test12_decomposed": {
                    "start": 945,
                    "end": 959,
                    "body": [
                        "    public void zeroinzerouttest_test12_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testZeroInZeroOut(FastPFOR.FastPFOR1());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test12_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test12_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "929-942:zeroinzerouttest_test11_decomposed": {
                    "start": 929,
                    "end": 942,
                    "body": [
                        "    public void zeroinzerouttest_test11_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test11_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "914-926:zeroinzerouttest_test10_decomposed": {
                    "start": 914,
                    "end": 926,
                    "body": [
                        "    public void zeroinzerouttest_test10_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testZeroInZeroOut(FastPFOR128.FastPFOR1281());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test10_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "900-911:zeroinzerouttest_test9_decomposed": {
                    "start": 900,
                    "end": 911,
                    "body": [
                        "    public void zeroinzerouttest_test9_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test9_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "887-897:zeroinzerouttest_test8_decomposed": {
                    "start": 887,
                    "end": 897,
                    "body": [
                        "    public void zeroinzerouttest_test8_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "        testZeroInZeroOut(new OptPFDS16());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test8_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "875-884:zeroinzerouttest_test7_decomposed": {
                    "start": 875,
                    "end": 884,
                    "body": [
                        "    public void zeroinzerouttest_test7_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "        testZeroInZeroOut(new OptPFDS9());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test7_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "864-872:zeroinzerouttest_test6_decomposed": {
                    "start": 864,
                    "end": 872,
                    "body": [
                        "    public void zeroinzerouttest_test6_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "        testZeroInZeroOut(new OptPFD());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test6_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "854-861:zeroinzerouttest_test5_decomposed": {
                    "start": 854,
                    "end": 861,
                    "body": [
                        "    public void zeroinzerouttest_test5_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "        testZeroInZeroOut(new NewPFDS16());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test5_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "845-851:zeroinzerouttest_test4_decomposed": {
                    "start": 845,
                    "end": 851,
                    "body": [
                        "    public void zeroinzerouttest_test4_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "        testZeroInZeroOut(new NewPFDS9());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "837-842:zeroinzerouttest_test3_decomposed": {
                    "start": 837,
                    "end": 842,
                    "body": [
                        "    public void zeroinzerouttest_test3_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "        testZeroInZeroOut(new NewPFD());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "830-834:zeroinzerouttest_test2_decomposed": {
                    "start": 830,
                    "end": 834,
                    "body": [
                        "    public void zeroinzerouttest_test2_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(new BinaryPacking());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "824-827:zeroinzerouttest_test1_decomposed": {
                    "start": 824,
                    "end": 827,
                    "body": [
                        "    public void zeroinzerouttest_test1_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "        testZeroInZeroOut(new IntegratedVariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "819-821:zeroinzerouttest_test0_decomposed": {
                    "start": 819,
                    "end": 821,
                    "body": [
                        "    public void zeroinzerouttest_test0_decomposed()  {\n",
                        "        testZeroInZeroOut(new IntegratedBinaryPacking());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "zeroinzerouttest_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def zeroinzerouttest_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "803-816:spuriousouttest_test11_decomposed": {
                    "start": 803,
                    "end": 816,
                    "body": [
                        "    public void spuriousouttest_test11_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "        testSpurious(new NewPFD());\n",
                        "        testSpurious(new NewPFDS9());\n",
                        "        testSpurious(new NewPFDS16());\n",
                        "        testSpurious(new OptPFD());\n",
                        "        testSpurious(new OptPFDS9());\n",
                        "        testSpurious(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testSpurious(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "        testSpurious(FastPFOR.FastPFOR1());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test11_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "788-800:spuriousouttest_test10_decomposed": {
                    "start": 788,
                    "end": 800,
                    "body": [
                        "    public void spuriousouttest_test10_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "        testSpurious(new NewPFD());\n",
                        "        testSpurious(new NewPFDS9());\n",
                        "        testSpurious(new NewPFDS16());\n",
                        "        testSpurious(new OptPFD());\n",
                        "        testSpurious(new OptPFDS9());\n",
                        "        testSpurious(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testSpurious(FastPFOR128.FastPFOR1281());\n",
                        "        FastPFOR.FastPFOR1();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test10_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "774-785:spuriousouttest_test9_decomposed": {
                    "start": 774,
                    "end": 785,
                    "body": [
                        "    public void spuriousouttest_test9_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "        testSpurious(new NewPFD());\n",
                        "        testSpurious(new NewPFDS9());\n",
                        "        testSpurious(new NewPFDS16());\n",
                        "        testSpurious(new OptPFD());\n",
                        "        testSpurious(new OptPFDS9());\n",
                        "        testSpurious(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "        testSpurious(FastPFOR128.FastPFOR1281());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test9_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "761-771:spuriousouttest_test8_decomposed": {
                    "start": 761,
                    "end": 771,
                    "body": [
                        "    public void spuriousouttest_test8_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "        testSpurious(new NewPFD());\n",
                        "        testSpurious(new NewPFDS9());\n",
                        "        testSpurious(new NewPFDS16());\n",
                        "        testSpurious(new OptPFD());\n",
                        "        testSpurious(new OptPFDS9());\n",
                        "        testSpurious(new OptPFDS16());\n",
                        "        FastPFOR128.FastPFOR1281();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test8_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "749-758:spuriousouttest_test7_decomposed": {
                    "start": 749,
                    "end": 758,
                    "body": [
                        "    public void spuriousouttest_test7_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "        testSpurious(new NewPFD());\n",
                        "        testSpurious(new NewPFDS9());\n",
                        "        testSpurious(new NewPFDS16());\n",
                        "        testSpurious(new OptPFD());\n",
                        "        testSpurious(new OptPFDS9());\n",
                        "        testSpurious(new OptPFDS16());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test7_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "738-746:spuriousouttest_test6_decomposed": {
                    "start": 738,
                    "end": 746,
                    "body": [
                        "    public void spuriousouttest_test6_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "        testSpurious(new NewPFD());\n",
                        "        testSpurious(new NewPFDS9());\n",
                        "        testSpurious(new NewPFDS16());\n",
                        "        testSpurious(new OptPFD());\n",
                        "        testSpurious(new OptPFDS9());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test6_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "728-735:spuriousouttest_test5_decomposed": {
                    "start": 728,
                    "end": 735,
                    "body": [
                        "    public void spuriousouttest_test5_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "        testSpurious(new NewPFD());\n",
                        "        testSpurious(new NewPFDS9());\n",
                        "        testSpurious(new NewPFDS16());\n",
                        "        testSpurious(new OptPFD());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test5_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "719-725:spuriousouttest_test4_decomposed": {
                    "start": 719,
                    "end": 725,
                    "body": [
                        "    public void spuriousouttest_test4_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "        testSpurious(new NewPFD());\n",
                        "        testSpurious(new NewPFDS9());\n",
                        "        testSpurious(new NewPFDS16());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "711-716:spuriousouttest_test3_decomposed": {
                    "start": 711,
                    "end": 716,
                    "body": [
                        "    public void spuriousouttest_test3_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "        testSpurious(new NewPFD());\n",
                        "        testSpurious(new NewPFDS9());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "704-708:spuriousouttest_test2_decomposed": {
                    "start": 704,
                    "end": 708,
                    "body": [
                        "    public void spuriousouttest_test2_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "        testSpurious(new NewPFD());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "698-701:spuriousouttest_test1_decomposed": {
                    "start": 698,
                    "end": 701,
                    "body": [
                        "    public void spuriousouttest_test1_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "        testSpurious(new BinaryPacking());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "693-695:spuriousouttest_test0_decomposed": {
                    "start": 693,
                    "end": 695,
                    "body": [
                        "    public void spuriousouttest_test0_decomposed()  {\n",
                        "        testSpurious(new IntegratedBinaryPacking());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "spuriousouttest_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def spuriousouttest_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "686-690:basictest_test0_decomposed": {
                    "start": 686,
                    "end": 690,
                    "body": [
                        "    public void basictest_test0_decomposed()  {\n",
                        "        test1(5, 10);\n",
                        "        test1(5, 14);\n",
                        "        test1(2, 18);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "basictest_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "176-223:test1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def basictest_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "663-683:verifyWithExceptions_test0_decomposed": {
                    "start": 663,
                    "end": 683,
                    "body": [
                        "    public void verifyWithExceptions_test0_decomposed()  {\n",
                        "        final int N = 32;\n",
                        "        final int TIMES = 1000;\n",
                        "        Random r = new Random();\n",
                        "        int[] data = new int[N];\n",
                        "        int[] compressed = new int[N];\n",
                        "        int[] uncompressed = new int[N];\n",
                        "        for (int bit = 0; bit < 31; ++bit) {\n",
                        "            for (int t = 0; t < TIMES; ++t) {\n",
                        "                for (int k = 0; k < N; ++k) {\n",
                        "                    data[k] = r.nextInt();\n",
                        "                }\n",
                        "                BitPacking.fastpack(data, 0, compressed, 0, bit);\n",
                        "                BitPacking.fastunpack(compressed, 0, uncompressed, 0, bit);\n",
                        "\n",
                        "                // Check assertions.\n",
                        "                maskArray(data, ((1 << bit) - 1));\n",
                        "                assertArrayEquals(data, uncompressed);\n",
                        "            }\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "verifyWithExceptions_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Random",
                            "Random()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Random",
                            "nextInt()"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BitPacking",
                            "BitPacking",
                            "42-148:fastpack"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BitPacking",
                            "BitPacking",
                            "3021-3127:fastunpack"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "113-117:maskArray"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(int[],int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def verifyWithExceptions_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "643-660:verifyWithoutMask_test0_decomposed": {
                    "start": 643,
                    "end": 660,
                    "body": [
                        "    public void verifyWithoutMask_test0_decomposed()  {\n",
                        "        final int N = 32;\n",
                        "        final int TIMES = 1000;\n",
                        "        Random r = new Random();\n",
                        "        int[] data = new int[N];\n",
                        "        int[] compressed = new int[N];\n",
                        "        int[] uncompressed = new int[N];\n",
                        "        for (int bit = 0; bit < 31; ++bit) {\n",
                        "            for (int t = 0; t < TIMES; ++t) {\n",
                        "                for (int k = 0; k < N; ++k) {\n",
                        "                    data[k] = r.nextInt(1 << bit);\n",
                        "                }\n",
                        "                BitPacking.fastpackwithoutmask(data, 0, compressed, 0, bit);\n",
                        "                BitPacking.fastunpack(compressed, 0, uncompressed, 0, bit);\n",
                        "                assertArrayEquals(uncompressed, data);\n",
                        "            }\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "verifyWithoutMask_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Random",
                            "Random()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Random",
                            "nextInt(int)"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BitPacking",
                            "BitPacking",
                            "1706-1812:fastpackwithoutmask"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BitPacking",
                            "BitPacking",
                            "3021-3127:fastunpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(int[],int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def verifyWithoutMask_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "623-640:verifyBitPacking_test0_decomposed": {
                    "start": 623,
                    "end": 640,
                    "body": [
                        "    public void verifyBitPacking_test0_decomposed()  {\n",
                        "        final int N = 32;\n",
                        "        final int TIMES = 1000;\n",
                        "        Random r = new Random();\n",
                        "        int[] data = new int[N];\n",
                        "        int[] compressed = new int[N];\n",
                        "        int[] uncompressed = new int[N];\n",
                        "        for (int bit = 0; bit < 31; ++bit) {\n",
                        "            for (int t = 0; t < TIMES; ++t) {\n",
                        "                for (int k = 0; k < N; ++k) {\n",
                        "                    data[k] = r.nextInt(1 << bit);\n",
                        "                }\n",
                        "                BitPacking.fastpack(data, 0, compressed, 0, bit);\n",
                        "                BitPacking.fastunpack(compressed, 0, uncompressed, 0, bit);\n",
                        "                assertArrayEquals(uncompressed, data);\n",
                        "            }\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "verifyBitPacking_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Random",
                            "Random()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Random",
                            "nextInt(int)"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BitPacking",
                            "BitPacking",
                            "42-148:fastpack"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BitPacking",
                            "BitPacking",
                            "3021-3127:fastunpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(int[],int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def verifyBitPacking_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "612-620:checkXorBinaryPacking3_test2_decomposed": {
                    "start": 612,
                    "end": 620,
                    "body": [
                        "    public void checkXorBinaryPacking3_test2_decomposed()  {\n",
                        "        IntegerCODEC c = new IntegratedComposition(new XorBinaryPacking(),\n",
                        "                new IntegratedVariableByte());\n",
                        "        IntegerCODEC co = new IntegratedComposition(new XorBinaryPacking(),\n",
                        "                new IntegratedVariableByte());\n",
                        "        test0(c, co, 5, 10);\n",
                        "        test0(c, co, 5, 14);\n",
                        "        test0(c, co, 2, 18);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkXorBinaryPacking3_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.XorBinaryPacking",
                            "XorBinaryPacking",
                            "XorBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "164-174:test0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkXorBinaryPacking3_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "604-609:checkXorBinaryPacking3_test1_decomposed": {
                    "start": 604,
                    "end": 609,
                    "body": [
                        "    public void checkXorBinaryPacking3_test1_decomposed()  {\n",
                        "        IntegerCODEC c = new IntegratedComposition(new XorBinaryPacking(),\n",
                        "                new IntegratedVariableByte());\n",
                        "        IntegerCODEC co = new IntegratedComposition(new XorBinaryPacking(),\n",
                        "                new IntegratedVariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkXorBinaryPacking3_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.XorBinaryPacking",
                            "XorBinaryPacking",
                            "XorBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkXorBinaryPacking3_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "598-601:checkXorBinaryPacking3_test0_decomposed": {
                    "start": 598,
                    "end": 601,
                    "body": [
                        "    public void checkXorBinaryPacking3_test0_decomposed()  {\n",
                        "        IntegerCODEC c = new IntegratedComposition(new XorBinaryPacking(),\n",
                        "                new IntegratedVariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkXorBinaryPacking3_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.XorBinaryPacking",
                            "XorBinaryPacking",
                            "XorBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkXorBinaryPacking3_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "591-595:checkXorBinaryPacking2_test1_decomposed": {
                    "start": 591,
                    "end": 595,
                    "body": [
                        "    public void checkXorBinaryPacking2_test1_decomposed()  {\n",
                        "        IntegerCODEC c = new IntegratedComposition(new XorBinaryPacking(),\n",
                        "                new IntegratedVariableByte());\n",
                        "        testUnsorted(c);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkXorBinaryPacking2_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.XorBinaryPacking",
                            "XorBinaryPacking",
                            "XorBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkXorBinaryPacking2_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "585-588:checkXorBinaryPacking2_test0_decomposed": {
                    "start": 585,
                    "end": 588,
                    "body": [
                        "    public void checkXorBinaryPacking2_test0_decomposed()  {\n",
                        "        IntegerCODEC c = new IntegratedComposition(new XorBinaryPacking(),\n",
                        "                new IntegratedVariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkXorBinaryPacking2_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.XorBinaryPacking",
                            "XorBinaryPacking",
                            "XorBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkXorBinaryPacking2_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "578-582:checkXorBinaryPacking1_test1_decomposed": {
                    "start": 578,
                    "end": 582,
                    "body": [
                        "    public void checkXorBinaryPacking1_test1_decomposed()  {\n",
                        "        IntegerCODEC c = new IntegratedComposition(new XorBinaryPacking(),\n",
                        "                new IntegratedVariableByte());\n",
                        "        testZeroInZeroOut(c);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkXorBinaryPacking1_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.XorBinaryPacking",
                            "XorBinaryPacking",
                            "XorBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkXorBinaryPacking1_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "572-575:checkXorBinaryPacking1_test0_decomposed": {
                    "start": 572,
                    "end": 575,
                    "body": [
                        "    public void checkXorBinaryPacking1_test0_decomposed()  {\n",
                        "        IntegerCODEC c = new IntegratedComposition(new XorBinaryPacking(),\n",
                        "                new IntegratedVariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkXorBinaryPacking1_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.XorBinaryPacking",
                            "XorBinaryPacking",
                            "XorBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkXorBinaryPacking1_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "566-569:checkXorBinaryPacking_test1_decomposed": {
                    "start": 566,
                    "end": 569,
                    "body": [
                        "    public void checkXorBinaryPacking_test1_decomposed()  {\n",
                        "        testZeroInZeroOut(new XorBinaryPacking());\n",
                        "        testSpurious(new XorBinaryPacking());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkXorBinaryPacking_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.XorBinaryPacking",
                            "XorBinaryPacking",
                            "XorBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkXorBinaryPacking_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "561-563:checkXorBinaryPacking_test0_decomposed": {
                    "start": 561,
                    "end": 563,
                    "body": [
                        "    public void checkXorBinaryPacking_test0_decomposed()  {\n",
                        "        testZeroInZeroOut(new XorBinaryPacking());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkXorBinaryPacking_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.XorBinaryPacking",
                            "XorBinaryPacking",
                            "XorBinaryPacking"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkXorBinaryPacking_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "545-558:checkDeltaZigzagPacking_test7_decomposed": {
                    "start": 545,
                    "end": 558,
                    "body": [
                        "    public void checkDeltaZigzagPacking_test7_decomposed()  {\n",
                        "        DeltaZigzagBinaryPacking codec = new DeltaZigzagBinaryPacking();\n",
                        "        testZeroInZeroOut(codec);\n",
                        "        testSpurious(codec);\n",
                        "        IntegerCODEC compo = new Composition(new DeltaZigzagBinaryPacking(),\n",
                        "                new VariableByte());\n",
                        "        IntegerCODEC compo2 = new Composition(new DeltaZigzagBinaryPacking(),\n",
                        "                new VariableByte());\n",
                        "        testZeroInZeroOut(compo);\n",
                        "        testUnsorted(compo);\n",
                        "        test0(compo, compo2, 5, 10);\n",
                        "        test0(compo, compo2, 5, 14);\n",
                        "        test0(compo, compo2, 2, 18);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagPacking_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "164-174:test0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagPacking_test7_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "532-542:checkDeltaZigzagPacking_test6_decomposed": {
                    "start": 532,
                    "end": 542,
                    "body": [
                        "    public void checkDeltaZigzagPacking_test6_decomposed()  {\n",
                        "        DeltaZigzagBinaryPacking codec = new DeltaZigzagBinaryPacking();\n",
                        "        testZeroInZeroOut(codec);\n",
                        "        testSpurious(codec);\n",
                        "        IntegerCODEC compo = new Composition(new DeltaZigzagBinaryPacking(),\n",
                        "                new VariableByte());\n",
                        "        IntegerCODEC compo2 = new Composition(new DeltaZigzagBinaryPacking(),\n",
                        "                new VariableByte());\n",
                        "        testZeroInZeroOut(compo);\n",
                        "        testUnsorted(compo);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagPacking_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "274-302:testUnsorted"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagPacking_test6_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "520-529:checkDeltaZigzagPacking_test5_decomposed": {
                    "start": 520,
                    "end": 529,
                    "body": [
                        "    public void checkDeltaZigzagPacking_test5_decomposed()  {\n",
                        "        DeltaZigzagBinaryPacking codec = new DeltaZigzagBinaryPacking();\n",
                        "        testZeroInZeroOut(codec);\n",
                        "        testSpurious(codec);\n",
                        "        IntegerCODEC compo = new Composition(new DeltaZigzagBinaryPacking(),\n",
                        "                new VariableByte());\n",
                        "        IntegerCODEC compo2 = new Composition(new DeltaZigzagBinaryPacking(),\n",
                        "                new VariableByte());\n",
                        "        testZeroInZeroOut(compo);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagPacking_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagPacking_test5_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "509-517:checkDeltaZigzagPacking_test4_decomposed": {
                    "start": 509,
                    "end": 517,
                    "body": [
                        "    public void checkDeltaZigzagPacking_test4_decomposed()  {\n",
                        "        DeltaZigzagBinaryPacking codec = new DeltaZigzagBinaryPacking();\n",
                        "        testZeroInZeroOut(codec);\n",
                        "        testSpurious(codec);\n",
                        "        IntegerCODEC compo = new Composition(new DeltaZigzagBinaryPacking(),\n",
                        "                new VariableByte());\n",
                        "        IntegerCODEC compo2 = new Composition(new DeltaZigzagBinaryPacking(),\n",
                        "                new VariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagPacking_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagPacking_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "500-506:checkDeltaZigzagPacking_test3_decomposed": {
                    "start": 500,
                    "end": 506,
                    "body": [
                        "    public void checkDeltaZigzagPacking_test3_decomposed()  {\n",
                        "        DeltaZigzagBinaryPacking codec = new DeltaZigzagBinaryPacking();\n",
                        "        testZeroInZeroOut(codec);\n",
                        "        testSpurious(codec);\n",
                        "        IntegerCODEC compo = new Composition(new DeltaZigzagBinaryPacking(),\n",
                        "                new VariableByte());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagPacking_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagPacking_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "493-497:checkDeltaZigzagPacking_test2_decomposed": {
                    "start": 493,
                    "end": 497,
                    "body": [
                        "    public void checkDeltaZigzagPacking_test2_decomposed()  {\n",
                        "        DeltaZigzagBinaryPacking codec = new DeltaZigzagBinaryPacking();\n",
                        "        testZeroInZeroOut(codec);\n",
                        "        testSpurious(codec);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagPacking_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "139-148:testSpurious"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagPacking_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "487-490:checkDeltaZigzagPacking_test1_decomposed": {
                    "start": 487,
                    "end": 490,
                    "body": [
                        "    public void checkDeltaZigzagPacking_test1_decomposed()  {\n",
                        "        DeltaZigzagBinaryPacking codec = new DeltaZigzagBinaryPacking();\n",
                        "        testZeroInZeroOut(codec);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagPacking_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagPacking_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "482-484:checkDeltaZigzagPacking_test0_decomposed": {
                    "start": 482,
                    "end": 484,
                    "body": [
                        "    public void checkDeltaZigzagPacking_test0_decomposed()  {\n",
                        "        DeltaZigzagBinaryPacking codec = new DeltaZigzagBinaryPacking();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagPacking_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking",
                            "DeltaZigzagBinaryPacking"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagPacking_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "472-479:checkDeltaZigzagVB_test3_decomposed": {
                    "start": 472,
                    "end": 479,
                    "body": [
                        "    public void checkDeltaZigzagVB_test3_decomposed()  {\n",
                        "        DeltaZigzagVariableByte codec = new DeltaZigzagVariableByte();\n",
                        "        DeltaZigzagVariableByte codeco = new DeltaZigzagVariableByte();\n",
                        "        testZeroInZeroOut(codec);\n",
                        "        test0(codec, codeco, 5, 10);\n",
                        "        test0(codec, codeco, 5, 14);\n",
                        "        test0(codec, codeco, 2, 18);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagVB_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagVariableByte",
                            "DeltaZigzagVariableByte",
                            "DeltaZigzagVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "164-174:test0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagVB_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "465-469:checkDeltaZigzagVB_test2_decomposed": {
                    "start": 465,
                    "end": 469,
                    "body": [
                        "    public void checkDeltaZigzagVB_test2_decomposed()  {\n",
                        "        DeltaZigzagVariableByte codec = new DeltaZigzagVariableByte();\n",
                        "        DeltaZigzagVariableByte codeco = new DeltaZigzagVariableByte();\n",
                        "        testZeroInZeroOut(codec);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagVB_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagVariableByte",
                            "DeltaZigzagVariableByte",
                            "DeltaZigzagVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "150-162:testZeroInZeroOut"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagVB_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "459-462:checkDeltaZigzagVB_test1_decomposed": {
                    "start": 459,
                    "end": 462,
                    "body": [
                        "    public void checkDeltaZigzagVB_test1_decomposed()  {\n",
                        "        DeltaZigzagVariableByte codec = new DeltaZigzagVariableByte();\n",
                        "        DeltaZigzagVariableByte codeco = new DeltaZigzagVariableByte();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagVB_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagVariableByte",
                            "DeltaZigzagVariableByte",
                            "DeltaZigzagVariableByte"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagVB_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "454-456:checkDeltaZigzagVB_test0_decomposed": {
                    "start": 454,
                    "end": 456,
                    "body": [
                        "    public void checkDeltaZigzagVB_test0_decomposed()  {\n",
                        "        DeltaZigzagVariableByte codec = new DeltaZigzagVariableByte();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkDeltaZigzagVB_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagVariableByte",
                            "DeltaZigzagVariableByte",
                            "DeltaZigzagVariableByte"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def checkDeltaZigzagVB_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "404-451:varyingLengthTest2_test0_decomposed": {
                    "start": 404,
                    "end": 451,
                    "body": [
                        "    public void varyingLengthTest2_test0_decomposed()  {\n",
                        "        int N = 128;\n",
                        "        int[] data = new int[N];\n",
                        "        data[127] = -1;\n",
                        "        for (IntegerCODEC c : codecs) {\n",
                        "            System.out.println(\"[BasicTest.varyingLengthTest2] codec = \" + c);\n",
                        "            try {\n",
                        "                // CODEC Simple9 is limited to \"small\" integers.\n",
                        "                if (c.getClass().equals(\n",
                        "                        Class.forName(\"me.lemire.integercompression.Simple9\")))\n",
                        "                    continue;\n",
                        "            } catch (ClassNotFoundException e) {\n",
                        "                e.printStackTrace();\n",
                        "            }\n",
                        "            try {\n",
                        "                // CODEC Simple16 is limited to \"small\" integers.\n",
                        "                if (c.getClass().equals(\n",
                        "                        Class.forName(\"me.lemire.integercompression.Simple16\")))\n",
                        "                    continue;\n",
                        "            } catch (ClassNotFoundException e) {\n",
                        "                e.printStackTrace();\n",
                        "            }\n",
                        "            try {\n",
                        "                // CODEC GroupSimple9 is limited to \"small\" integers.\n",
                        "                if (c.getClass().equals(\n",
                        "                        Class.forName(\"me.lemire.integercompression.GroupSimple9\")))\n",
                        "                    continue;\n",
                        "            } catch (ClassNotFoundException e) {\n",
                        "                e.printStackTrace();\n",
                        "            }\n",
                        "\n",
                        "            for (int L = 1; L <= 128; L++) {\n",
                        "                int[] comp = TestUtils.compress1(c, Arrays.copyOf(data, L));\n",
                        "                int[] answer = TestUtils.uncompress0(c, comp, L);\n",
                        "                for (int k = 0; k < L; ++k)\n",
                        "                    if (answer[k] != data[k])\n",
                        "                        throw new RuntimeException(\"bug\");\n",
                        "            }\n",
                        "            for (int L = 128; L <= N; L *= 2) {\n",
                        "                int[] comp = TestUtils.compress1(c, Arrays.copyOf(data, L));\n",
                        "                int[] answer = TestUtils.uncompress0(c, comp, L);\n",
                        "                for (int k = 0; k < L; ++k)\n",
                        "                    if (answer[k] != data[k])\n",
                        "                        throw new RuntimeException(\"bug\");\n",
                        "            }\n",
                        "\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "varyingLengthTest2_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "equals(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "getClass()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "forName(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Throwable",
                            "printStackTrace()"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "87-93:compress1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "95-101:uncompress0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/RuntimeException",
                            "RuntimeException(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def varyingLengthTest2_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "373-401:varyingLengthTest_test0_decomposed": {
                    "start": 373,
                    "end": 401,
                    "body": [
                        "    public void varyingLengthTest_test0_decomposed()  {\n",
                        "        int N = 4096;\n",
                        "        int[] data = new int[N];\n",
                        "        for (int k = 0; k < N; ++k)\n",
                        "            data[k] = k;\n",
                        "        for (IntegerCODEC c : codecs) {\n",
                        "            System.out.println(\"[BasicTest.varyingLengthTest] codec = \" + c);\n",
                        "            for (int L = 1; L <= 128; L++) {\n",
                        "                int[] comp = TestUtils.compress1(c, Arrays.copyOf(data, L));\n",
                        "                int[] answer = TestUtils.uncompress0(c, comp, L);\n",
                        "                for (int k = 0; k < L; ++k)\n",
                        "                    if (answer[k] != data[k])\n",
                        "                        throw new RuntimeException(\"bug\");\n",
                        "            }\n",
                        "            for (int L = 128; L <= N; L *= 2) {\n",
                        "                int[] comp = TestUtils.compress1(c, Arrays.copyOf(data, L));\n",
                        "                int[] answer = TestUtils.uncompress0(c, comp, L);\n",
                        "                for (int k = 0; k < L; ++k)\n",
                        "                    if (answer[k] != data[k]) {\n",
                        "                        System.out.println(Arrays.toString(Arrays.copyOf(\n",
                        "                                answer, L)));\n",
                        "                        System.out.println(Arrays.toString(Arrays.copyOf(data,\n",
                        "                                L)));\n",
                        "                        throw new RuntimeException(\"bug\");\n",
                        "                    }\n",
                        "            }\n",
                        "\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "varyingLengthTest_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "87-93:compress1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.TestUtils",
                            "TestUtils",
                            "95-101:uncompress0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/RuntimeException",
                            "RuntimeException(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "toString(int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def varyingLengthTest_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "348-370:saulTest_test0_decomposed": {
                    "start": 348,
                    "end": 370,
                    "body": [
                        "    public void saulTest_test0_decomposed()  {\n",
                        "        for (IntegerCODEC C : codecs) {\n",
                        "\t\t\tfor (int x = 0; x < 50; ++x) {\n",
                        "\t\t\t\tint[] a = { 2, 3, 4, 5 };\n",
                        "\t\t\t\tint[] b = new int[90];\n",
                        "\t\t\t\tint[] c = new int[a.length];\n",
                        "\n",
                        "\t\t\t\tIntWrapper aOffset = new IntWrapper(0);\n",
                        "\t\t\t\tIntWrapper bOffset = new IntWrapper(x);\n",
                        "\t\t\t\tC.compress0(a, aOffset, a.length, b, bOffset);\n",
                        "\t\t\t\tint len = bOffset.get() - x;\n",
                        "\n",
                        "\t\t\t\tbOffset.set(x);\n",
                        "\t\t\t\tIntWrapper cOffset = new IntWrapper(0);\n",
                        "\t\t\t\tC.uncompress0(b, bOffset, len, c, cOffset);\n",
                        "\t\t\t\tif(!Arrays.equals(a, c)) {\n",
                        "\t\t\t\t\tSystem.out.println(\"Problem with \"+C);\n",
                        "\t\t\t\t}\n",
                        "\t\t\t\tassertArrayEquals(a, c);\n",
                        "\n",
                        "\t\t\t}\n",
                        "\t\t}\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "saulTest_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "36-38:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "89-91:set"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "57-59:uncompress0"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "equals(int[],int[])"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(int[],int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def saulTest_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "274-302:testUnsorted": {
                    "start": 274,
                    "end": 302,
                    "body": [
                        "    public void testUnsorted(IntegerCODEC codec) {\n",
                        "        int[] lengths = { 133, 1026, 1333333 };\n",
                        "        for (int N : lengths) {\n",
                        "            int[] data = new int[N];\n",
                        "            // initialize the data (most will be small)\n",
                        "            for (int k = 0; k < N; k += 1)\n",
                        "                data[k] = 3;\n",
                        "            // throw some larger values\n",
                        "            for (int k = 0; k < N; k += 5)\n",
                        "                data[k] = 100;\n",
                        "            for (int k = 0; k < N; k += 533)\n",
                        "                data[k] = 10000;\n",
                        "            data[5] = -311;\n",
                        "            // could need more compressing\n",
                        "            int[] compressed = new int[(int) Math.ceil(N * 1.01) + 1024];\n",
                        "            IntWrapper inputoffset = new IntWrapper(0);\n",
                        "            IntWrapper outputoffset = new IntWrapper(0);\n",
                        "            codec.compress0(data, inputoffset, data.length, compressed,\n",
                        "                    outputoffset);\n",
                        "            // we can repack the data: (optional)\n",
                        "            compressed = Arrays.copyOf(compressed, outputoffset.intValue());\n",
                        "\n",
                        "            int[] recovered = new int[N];\n",
                        "            IntWrapper recoffset = new IntWrapper(0);\n",
                        "            codec.uncompress0(compressed, new IntWrapper(0), compressed.length,\n",
                        "                    recovered, recoffset);\n",
                        "            assertArrayEquals(data, recovered);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsorted(IntegerCODEC)",
                    "parameters": [
                        "codec"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Math",
                            "ceil(double)"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "36-38:compress0"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "57-59:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(int[],int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testUnsorted(self, codec: IntegerCODEC) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "113-117:maskArray": {
                    "start": 113,
                    "end": 117,
                    "body": [
                        "    public static void maskArray(int[] array, int mask) {\n",
                        "        for (int i = 0, end = array.length; i < end; ++i) {\n",
                        "            array[i] &= mask;\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "maskArray(int[], int)",
                    "parameters": [
                        "array",
                        "mask"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def maskArray(array: typing.List[int], mask: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "321-336:testUnsorted3": {
                    "start": 321,
                    "end": 336,
                    "body": [
                        "    private void testUnsorted3(IntegerCODEC codec) {\n",
                        "        int[] data = new int[128];\n",
                        "        data[127] = -1;\n",
                        "        int[] compressed = new int[1024];\n",
                        "        IntWrapper inputoffset = new IntWrapper(0);\n",
                        "        IntWrapper outputoffset = new IntWrapper(0);\n",
                        "        codec.compress0(data, inputoffset, data.length, compressed, outputoffset);\n",
                        "        // we can repack the data: (optional)\n",
                        "        compressed = Arrays.copyOf(compressed, outputoffset.intValue());\n",
                        "\n",
                        "        int[] recovered = new int[128];\n",
                        "        IntWrapper recoffset = new IntWrapper(0);\n",
                        "        codec.uncompress0(compressed, new IntWrapper(0), compressed.length,\n",
                        "                recovered, recoffset);\n",
                        "        assertArrayEquals(data, recovered);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsorted3(IntegerCODEC)",
                    "parameters": [
                        "codec"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "36-38:compress0"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "57-59:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(int[],int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __testUnsorted3(self, codec: IntegerCODEC) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "304-319:testUnsorted2": {
                    "start": 304,
                    "end": 319,
                    "body": [
                        "    private void testUnsorted2(IntegerCODEC codec) {\n",
                        "        int[] data = new int[128];\n",
                        "        data[5] = -1;\n",
                        "        int[] compressed = new int[1024];\n",
                        "        IntWrapper inputoffset = new IntWrapper(0);\n",
                        "        IntWrapper outputoffset = new IntWrapper(0);\n",
                        "        codec.compress0(data, inputoffset, data.length, compressed, outputoffset);\n",
                        "        // we can repack the data: (optional)\n",
                        "        compressed = Arrays.copyOf(compressed, outputoffset.intValue());\n",
                        "\n",
                        "        int[] recovered = new int[128];\n",
                        "        IntWrapper recoffset = new IntWrapper(0);\n",
                        "        codec.uncompress0(compressed, new IntWrapper(0), compressed.length,\n",
                        "                recovered, recoffset);\n",
                        "        assertArrayEquals(data, recovered);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsorted2(IntegerCODEC)",
                    "parameters": [
                        "codec"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "36-38:compress0"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "57-59:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(int[],int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __testUnsorted2(self, codec: IntegerCODEC) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "225-263:testCodec": {
                    "start": 225,
                    "end": 263,
                    "body": [
                        "    private static void testCodec(IntegerCODEC c, IntegerCODEC co,\n",
                        "            int[][] data, int max) {\n",
                        "        int N = data.length;\n",
                        "        int maxlength = 0;\n",
                        "        for (int k = 0; k < N; ++k) {\n",
                        "            if (data[k].length > maxlength)\n",
                        "                maxlength = data[k].length;\n",
                        "        }\n",
                        "        int[] buffer = new int[maxlength + 1024];\n",
                        "        int[] dataout = new int[4 * maxlength + 1024];\n",
                        "        // 4x + 1024 to account for the possibility of some negative\n",
                        "        // compression.\n",
                        "        IntWrapper inpos = IntWrapper.IntWrapper1();\n",
                        "        IntWrapper outpos = IntWrapper.IntWrapper1();\n",
                        "        for (int k = 0; k < N; ++k) {\n",
                        "            int[] backupdata = Arrays.copyOf(data[k], data[k].length);\n",
                        "\n",
                        "            inpos.set(1);\n",
                        "            outpos.set(0);\n",
                        "            if (!(c instanceof IntegratedIntegerCODEC)) {\n",
                        "                Delta.delta0(backupdata);\n",
                        "            }\n",
                        "            c.compress0(backupdata, inpos, backupdata.length - inpos.get(),\n",
                        "                    dataout, outpos);\n",
                        "            final int thiscompsize = outpos.get() + 1;\n",
                        "            inpos.set(0);\n",
                        "            outpos.set(1);\n",
                        "            buffer[0] = backupdata[0];\n",
                        "            co.uncompress0(dataout, inpos, thiscompsize - 1, buffer, outpos);\n",
                        "            if (!(c instanceof IntegratedIntegerCODEC))\n",
                        "                Delta.fastinverseDelta0(buffer);\n",
                        "\n",
                        "            // Check assertions.\n",
                        "            assertEquals(\"length is not match\", outpos.get(), data[k].length);\n",
                        "            int[] bufferCutout = Arrays.copyOf(buffer, outpos.get());\n",
                        "            assertArrayEquals(\"failed to reconstruct original data\", data[k],\n",
                        "                    bufferCutout);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCodec(IntegerCODEC, IntegerCODEC, int[][], int)",
                    "parameters": [
                        "c",
                        "co",
                        "data",
                        "max"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "copyOf(int[],int)"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "89-91:set"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "24-28:delta0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "36-38:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "57-59:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "97-113:fastinverseDelta0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,long,long)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(java.lang.String,int[],int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __testCodec(c: IntegerCODEC, co: IntegerCODEC, data: typing.List[typing.List[int]], max_: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "176-223:test1": {
                    "start": 176,
                    "end": 223,
                    "body": [
                        "    private static void test1(int N, int nbr) {\n",
                        "        ClusteredDataGenerator cdg = new ClusteredDataGenerator();\n",
                        "        System.out.println(\"[BasicTest.test] N = \" + N + \" \" + nbr);\n",
                        "        for (int sparsity = 1; sparsity < 31 - nbr; sparsity += 4) {\n",
                        "            int[][] data = new int[N][];\n",
                        "            int max = (1 << (nbr + sparsity));\n",
                        "            for (int k = 0; k < N; ++k) {\n",
                        "                data[k] = cdg.generateClustered((1 << nbr), max);\n",
                        "            }\n",
                        "\n",
                        "            testCodec(new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                    new IntegratedVariableByte()),\n",
                        "                    new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                            new IntegratedVariableByte()), data, max);\n",
                        "            testCodec(new JustCopy(), new JustCopy(), data, max);\n",
                        "            testCodec(new VariableByte(), new VariableByte(), data, max);\n",
                        "            testCodec(new IntegratedVariableByte(),\n",
                        "                    new IntegratedVariableByte(), data, max);\n",
                        "            testCodec(new Composition(new BinaryPacking(), new VariableByte()),\n",
                        "                    new Composition(new BinaryPacking(), new VariableByte()),\n",
                        "                    data, max);\n",
                        "            testCodec(new Composition(new NewPFD(), new VariableByte()),\n",
                        "                    new Composition(new NewPFD(), new VariableByte()), data,\n",
                        "                    max);\n",
                        "            testCodec(new Composition(new NewPFDS9(), new VariableByte()),\n",
                        "                    new Composition(new NewPFDS9(), new VariableByte()), data,\n",
                        "                    max);\n",
                        "            testCodec(new Composition(new NewPFDS16(), new VariableByte()),\n",
                        "                    new Composition(new NewPFDS16(), new VariableByte()), data,\n",
                        "                    max);\n",
                        "            testCodec(new Composition(new OptPFD(), new VariableByte()),\n",
                        "                    new Composition(new OptPFD(), new VariableByte()), data,\n",
                        "                    max);\n",
                        "            testCodec(new Composition(new OptPFDS9(), new VariableByte()),\n",
                        "                    new Composition(new OptPFDS9(), new VariableByte()), data,\n",
                        "                    max);\n",
                        "            testCodec(new Composition(new OptPFDS16(), new VariableByte()),\n",
                        "                    new Composition(new OptPFDS16(), new VariableByte()), data,\n",
                        "                    max);\n",
                        "            testCodec(new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()),\n",
                        "                    new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()),\n",
                        "                    data, max);\n",
                        "            testCodec(new Composition(FastPFOR.FastPFOR1(), new VariableByte()),\n",
                        "                    new Composition(FastPFOR.FastPFOR1(), new VariableByte()),\n",
                        "                    data, max);\n",
                        "            testCodec(new Simple9(), new Simple9(), data, max);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1(int, int)",
                    "parameters": [
                        "N",
                        "nbr"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "69-73:generateClustered"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "225-263:testCodec"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedComposition",
                            "IntegratedComposition",
                            "33-37:IntegratedComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking",
                            "IntegratedBinaryPacking",
                            "IntegratedBinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.JustCopy",
                            "JustCopy",
                            "JustCopy"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.BinaryPacking",
                            "BinaryPacking",
                            "BinaryPacking"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS16",
                            "NewPFDS16",
                            "44-45:NewPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR128",
                            "FastPFOR128",
                            "71-73:FastPFOR1281"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __test1(N: int, nbr: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "164-174:test0": {
                    "start": 164,
                    "end": 174,
                    "body": [
                        "    private static void test0(IntegerCODEC c, IntegerCODEC co, int N, int nbr) {\n",
                        "        ClusteredDataGenerator cdg = new ClusteredDataGenerator();\n",
                        "        for (int sparsity = 1; sparsity < 31 - nbr; sparsity += 4) {\n",
                        "            int[][] data = new int[N][];\n",
                        "            int max = (1 << (nbr + sparsity));\n",
                        "            for (int k = 0; k < N; ++k) {\n",
                        "                data[k] = cdg.generateClustered((1 << nbr), max);\n",
                        "            }\n",
                        "            testCodec(c, co, data, max);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0(IntegerCODEC, IntegerCODEC, int, int)",
                    "parameters": [
                        "c",
                        "co",
                        "N",
                        "nbr"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "69-73:generateClustered"
                        ],
                        [
                            "JavaFastPFOR.src.test.me.lemire.integercompression.BasicTest",
                            "BasicTest",
                            "225-263:testCodec"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __test0(c: IntegerCODEC, co: IntegerCODEC, N: int, nbr: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "150-162:testZeroInZeroOut": {
                    "start": 150,
                    "end": 162,
                    "body": [
                        "    private static void testZeroInZeroOut(IntegerCODEC c) {\n",
                        "        int[] x = new int[0];\n",
                        "        int[] y = new int[0];\n",
                        "        IntWrapper i0 = new IntWrapper(0);\n",
                        "        IntWrapper i1 = new IntWrapper(0);\n",
                        "        c.compress0(x, i0, 0, y, i1);\n",
                        "        assertEquals(0, i1.intValue());\n",
                        "\n",
                        "        int[] out = new int[0];\n",
                        "        IntWrapper outpos = new IntWrapper(0);\n",
                        "        c.uncompress0(y, i1, 0, out, outpos);\n",
                        "        assertEquals(0, outpos.intValue());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testZeroInZeroOut(IntegerCODEC)",
                    "parameters": [
                        "c"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "36-38:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "57-59:uncompress0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __testZeroInZeroOut(c: IntegerCODEC) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "139-148:testSpurious": {
                    "start": 139,
                    "end": 148,
                    "body": [
                        "    private static void testSpurious(IntegerCODEC c) {\n",
                        "        int[] x = new int[1024];\n",
                        "        int[] y = new int[0];\n",
                        "        IntWrapper i0 = new IntWrapper(0);\n",
                        "        IntWrapper i1 = new IntWrapper(0);\n",
                        "        for (int inlength = 0; inlength < 32; ++inlength) {\n",
                        "            c.compress0(x, i0, inlength, y, i1);\n",
                        "            assertEquals(0, i1.intValue());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSpurious(IntegerCODEC)",
                    "parameters": [
                        "c"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntegerCODEC",
                            "IntegerCODEC",
                            "36-38:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __testSpurious(c: IntegerCODEC) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "32-51:codecs": {
                    "start": 32,
                    "end": 51,
                    "body": [
                        "    final IntegerCODEC[] codecs = {\n",
                        "            new IntegratedComposition(new IntegratedBinaryPacking(),\n",
                        "                    new IntegratedVariableByte()),\n",
                        "            new JustCopy(),\n",
                        "            new VariableByte(),\n",
                        "            new GroupSimple9(),\n",
                        "            new IntegratedVariableByte(),\n",
                        "            new Composition(new BinaryPacking(), new VariableByte()),\n",
                        "            new Composition(new NewPFD(), new VariableByte()),\n",
                        "            new Composition(new NewPFDS16(), new VariableByte()),\n",
                        "            new Composition(new OptPFDS9(), new VariableByte()),\n",
                        "            new Composition(new OptPFDS16(), new VariableByte()),\n",
                        "            new Composition(FastPFOR128.FastPFOR1281(), new VariableByte()),\n",
                        "            new Composition(FastPFOR.FastPFOR1(), new VariableByte()),\n",
                        "            new Simple9(),\n",
                        "            new Simple16(),\n",
                        "            new GroupSimple9(),\n",
                        "            new Composition(new XorBinaryPacking(), new VariableByte()),\n",
                        "            new Composition(new DeltaZigzagBinaryPacking(),\n",
                        "\t\t\t\t\tnew DeltaZigzagVariableByte()) };\n"
                    ],
                    "modifiers": [
                        "final"
                    ],
                    "types": [
                        [
                            "IntegerCODEC[]",
                            "IntegerCODEC[]"
                        ]
                    ],
                    "partial_translation": [
                        "    codecs: typing.List[IntegerCODEC] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class BasicTest(unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import typing\nfrom typing import *",
        "import os",
        "import unittest",
        "from src.main.me.lemire.integercompression.BinaryPacking import *",
        "from src.main.me.lemire.integercompression.BitPacking import *",
        "from src.main.me.lemire.integercompression.Composition import *",
        "from src.main.me.lemire.integercompression.DeltaZigzagBinaryPacking import *",
        "from src.main.me.lemire.integercompression.DeltaZigzagVariableByte import *",
        "from src.main.me.lemire.integercompression.FastPFOR import *",
        "from src.main.me.lemire.integercompression.FastPFOR128 import *",
        "from src.main.me.lemire.integercompression.GroupSimple9 import *",
        "from src.main.me.lemire.integercompression.IntWrapper import *",
        "from src.main.me.lemire.integercompression.IntegerCODEC import *",
        "from src.main.me.lemire.integercompression.JustCopy import *",
        "from src.main.me.lemire.integercompression.NewPFD import *",
        "from src.main.me.lemire.integercompression.NewPFDS16 import *",
        "from src.main.me.lemire.integercompression.NewPFDS9 import *",
        "from src.main.me.lemire.integercompression.OptPFD import *",
        "from src.main.me.lemire.integercompression.OptPFDS16 import *",
        "from src.main.me.lemire.integercompression.OptPFDS9 import *",
        "from src.main.me.lemire.integercompression.Simple16 import *",
        "from src.main.me.lemire.integercompression.Simple9 import *",
        "from src.test.me.lemire.integercompression.TestUtils import *",
        "from src.main.me.lemire.integercompression.VariableByte import *",
        "from src.main.me.lemire.integercompression.differential.Delta import *",
        "from src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking import *",
        "from src.main.me.lemire.integercompression.differential.IntegratedComposition import *",
        "from src.main.me.lemire.integercompression.differential.IntegratedIntegerCODEC import *",
        "from src.main.me.lemire.integercompression.differential.IntegratedVariableByte import *",
        "from src.main.me.lemire.integercompression.differential.XorBinaryPacking import *",
        "from src.main.me.lemire.integercompression.synth.ClusteredDataGenerator import *"
    ]
}