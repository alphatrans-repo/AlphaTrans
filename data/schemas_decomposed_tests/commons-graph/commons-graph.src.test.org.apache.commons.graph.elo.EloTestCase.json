{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/test/java/org/apache/commons/graph/elo/EloTestCase.java",
    "imports": {
        "26-26:import DirectedGraph": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.graph.DirectedGraph;\n"
            ]
        },
        "27-27:import AbstractGraphConnection": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.apache.commons.graph.builder.AbstractGraphConnection;\n"
            ]
        },
        "28-28:import Test": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "23-23:import static CommonsGraph.newDirectedMutableGraph": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.apache.commons.graph.CommonsGraph.newDirectedMutableGraph;\n"
            ]
        },
        "22-22:import static CommonsGraph.eloRate": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.CommonsGraph.eloRate;\n"
            ]
        },
        "24-24:import static GameResult.WIN": {
            "start": 24,
            "end": 24,
            "body": [
                "import static org.apache.commons.graph.elo.GameResult.WIN;\n"
            ]
        }
    },
    "classes": {
        "EloTestCase": {
            "start": 34,
            "end": 34,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "new AbstractGraphConnection<String,GameResult>(...) { ... }",
                "new AbstractGraphConnection<String,GameResult>(...) { ... }",
                "new AbstractGraphConnection<String,GameResult>(...) { ... }",
                "new AbstractGraphConnection<String,GameResult>(...) { ... }",
                "new AbstractGraphConnection<String,GameResult>(...) { ... }",
                "new AbstractGraphConnection<String,GameResult>(...) { ... }"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "267-313:testPerformElo_test5_decomposed": {
                    "start": 267,
                    "end": 313,
                    "body": [
                        "    public void testPerformElo_test5_decomposed()  {\n",
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n",
                        "\n",
                        "                            @Override\n",
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n",
                        "                        });\n",
                        "        PlayersRank<String> playersRank = new SimplePlayersRank();\n",
                        "        eloRate(tournament);\n",
                        "        eloRate(tournament).wherePlayersAreRankedIn(playersRank);\n",
                        "        eloRate(tournament).wherePlayersAreRankedIn(playersRank).withKFactor(80);\n",
                        "        System.out.println(playersRank);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPerformElo_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "187-190:newDirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.elo.SimplePlayersRank",
                            "SimplePlayersRank",
                            "SimplePlayersRank"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "79-84:eloRate"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/elo/RankingSelector",
                            "wherePlayersAreRankedIn(org.apache.commons.graph.elo.PlayersRank)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/elo/KFactorBuilder",
                            "withKFactor(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.Object)"
                        ]
                    ]
                },
                "219-264:testPerformElo_test4_decomposed": {
                    "start": 219,
                    "end": 264,
                    "body": [
                        "    public void testPerformElo_test4_decomposed()  {\n",
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n",
                        "\n",
                        "                            @Override\n",
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n",
                        "                        });\n",
                        "        PlayersRank<String> playersRank = new SimplePlayersRank();\n",
                        "        eloRate(tournament);\n",
                        "        eloRate(tournament).wherePlayersAreRankedIn(playersRank);\n",
                        "        eloRate(tournament).wherePlayersAreRankedIn(playersRank).withKFactor(80);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPerformElo_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "187-190:newDirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.elo.SimplePlayersRank",
                            "SimplePlayersRank",
                            "SimplePlayersRank"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "79-84:eloRate"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/elo/RankingSelector",
                            "wherePlayersAreRankedIn(org.apache.commons.graph.elo.PlayersRank)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/elo/KFactorBuilder",
                            "withKFactor(int)"
                        ]
                    ]
                },
                "172-216:testPerformElo_test3_decomposed": {
                    "start": 172,
                    "end": 216,
                    "body": [
                        "    public void testPerformElo_test3_decomposed()  {\n",
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n",
                        "\n",
                        "                            @Override\n",
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n",
                        "                        });\n",
                        "        PlayersRank<String> playersRank = new SimplePlayersRank();\n",
                        "        eloRate(tournament);\n",
                        "        eloRate(tournament).wherePlayersAreRankedIn(playersRank);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPerformElo_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "187-190:newDirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.elo.SimplePlayersRank",
                            "SimplePlayersRank",
                            "SimplePlayersRank"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "79-84:eloRate"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/elo/RankingSelector",
                            "wherePlayersAreRankedIn(org.apache.commons.graph.elo.PlayersRank)"
                        ]
                    ]
                },
                "126-169:testPerformElo_test2_decomposed": {
                    "start": 126,
                    "end": 169,
                    "body": [
                        "    public void testPerformElo_test2_decomposed()  {\n",
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n",
                        "\n",
                        "                            @Override\n",
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n",
                        "                        });\n",
                        "        PlayersRank<String> playersRank = new SimplePlayersRank();\n",
                        "        eloRate(tournament);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPerformElo_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "187-190:newDirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.elo.SimplePlayersRank",
                            "SimplePlayersRank",
                            "SimplePlayersRank"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "79-84:eloRate"
                        ]
                    ]
                },
                "81-123:testPerformElo_test1_decomposed": {
                    "start": 81,
                    "end": 123,
                    "body": [
                        "    public void testPerformElo_test1_decomposed()  {\n",
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n",
                        "\n",
                        "                            @Override\n",
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n",
                        "                        });\n",
                        "        PlayersRank<String> playersRank = new SimplePlayersRank();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPerformElo_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "187-190:newDirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.elo.SimplePlayersRank",
                            "SimplePlayersRank",
                            "SimplePlayersRank"
                        ]
                    ]
                },
                "37-78:testPerformElo_test0_decomposed": {
                    "start": 37,
                    "end": 78,
                    "body": [
                        "    public void testPerformElo_test0_decomposed()  {\n",
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n",
                        "\n",
                        "                            @Override\n",
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n",
                        "                        });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPerformElo_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "187-190:newDirectedMutableGraph"
                        ]
                    ]
                }
            },
            "fields": {}
        },
        "new AbstractGraphConnection<String,GameResult>(...) { ... }": {
            "start": 40,
            "end": 40,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "EloTestCase",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "43-76:connect0": {
                    "start": 43,
                    "end": 76,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ]
                    ]
                },
                "87-120:connect0": {
                    "start": 87,
                    "end": 120,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ]
                    ]
                },
                "132-165:connect0": {
                    "start": 132,
                    "end": 165,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ]
                    ]
                },
                "178-211:connect0": {
                    "start": 178,
                    "end": 211,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ]
                    ]
                },
                "225-258:connect0": {
                    "start": 225,
                    "end": 258,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ]
                    ]
                },
                "273-306:connect0": {
                    "start": 273,
                    "end": 306,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                String zenio = addVertex(\"Zenio\");\n",
                        "                                String marineking = addVertex(\"Marineking\");\n",
                        "                                String hongun = addVertex(\"Hongun\");\n",
                        "                                String nestea = addVertex(\"Nestea\");\n",
                        "                                String tester = addVertex(\"Tester\");\n",
                        "                                String nada = addVertex(\"Nada\");\n",
                        "                                String rainbow = addVertex(\"Rainbow\");\n",
                        "                                String thewind = addVertex(\"Thewind\");\n",
                        "                                String inka = addVertex(\"Inka\");\n",
                        "                                String maka = addVertex(\"Maka\");\n",
                        "                                String ensnare = addVertex(\"Ensnare\");\n",
                        "                                String kyrix = addVertex(\"Kyrix\");\n",
                        "                                String killer = addVertex(\"Killer\");\n",
                        "                                String slayersboxer = addVertex(\"Slayersboxer\");\n",
                        "                                String fruitdealer = addVertex(\"Fruitdealer\");\n",
                        "                                String genius = addVertex(\"Genius\");\n",
                        "\n",
                        "                                addEdge(WIN).from(zenio).to(marineking);\n",
                        "                                addEdge(WIN).from(fruitdealer).to(hongun);\n",
                        "                                addEdge(WIN).from(genius).to(nestea);\n",
                        "                                addEdge(WIN).from(tester).to(nada);\n",
                        "                                addEdge(WIN).from(thewind).to(rainbow);\n",
                        "                                addEdge(WIN).from(maka).to(inka);\n",
                        "                                addEdge(WIN).from(kyrix).to(ensnare);\n",
                        "                                addEdge(WIN).from(slayersboxer).to(killer);\n",
                        "                                addEdge(WIN).from(marineking).to(fruitdealer);\n",
                        "                                addEdge(WIN).from(tester).to(genius);\n",
                        "                                addEdge(WIN).from(thewind).to(maka);\n",
                        "                                addEdge(WIN).from(kyrix).to(slayersboxer);\n",
                        "                                addEdge(WIN).from(marineking).to(tester);\n",
                        "                                addEdge(WIN).from(kyrix).to(thewind);\n",
                        "                                addEdge(WIN).from(kyrix).to(marineking);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ]
                    ]
                },
                "38-40:": {
                    "start": 38,
                    "end": 40,
                    "body": [
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "82-84:": {
                    "start": 82,
                    "end": 84,
                    "body": [
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "127-129:": {
                    "start": 127,
                    "end": 129,
                    "body": [
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "173-175:": {
                    "start": 173,
                    "end": 175,
                    "body": [
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "220-222:": {
                    "start": 220,
                    "end": 222,
                    "body": [
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "268-270:": {
                    "start": 268,
                    "end": 270,
                    "body": [
                        "        DirectedGraph<String, GameResult> tournament =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<String, GameResult>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                }
            },
            "fields": {}
        }
    }
}