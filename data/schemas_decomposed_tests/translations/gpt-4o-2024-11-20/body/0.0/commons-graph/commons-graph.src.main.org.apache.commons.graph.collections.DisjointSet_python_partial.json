{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/collections/DisjointSet.java",
    "imports": {
        "23-23:import Map": {
            "start": 23,
            "end": 23,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "22-22:import HashMap": {
            "start": 22,
            "end": 22,
            "body": [
                "import java.util.HashMap;\n"
            ]
        }
    },
    "classes": {
        "DisjointSet": {
            "start": 31,
            "end": 31,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "92-109:union": {
                    "start": 92,
                    "end": 109,
                    "body": [
                        "    public void union(E e1, E e2) {\n",
                        "        DisjointSetNode<E> e1Root = find0(getNode(e1));\n",
                        "        DisjointSetNode<E> e2Root = find0(getNode(e2));\n",
                        "\n",
                        "        if (e1Root == e2Root) {\n",
                        "            return;\n",
                        "        }\n",
                        "\n",
                        "        int comparison = e1Root.compareTo(e2Root);\n",
                        "        if (comparison < 0) {\n",
                        "            e1Root.setParent(e2Root);\n",
                        "        } else if (comparison > 0) {\n",
                        "            e2Root.setParent(e1Root);\n",
                        "        } else {\n",
                        "            e2Root.setParent(e1Root);\n",
                        "            e1Root.increaseRank();\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "union(E, E)",
                    "parameters": [
                        "e1",
                        "e2"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.DisjointSet",
                            "DisjointSet",
                            "42-47:find0"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.DisjointSet",
                            "DisjointSet",
                            "74-83:getNode"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/DisjointSetNode",
                            "compareTo(org.apache.commons.graph.collections.DisjointSetNode)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/DisjointSetNode",
                            "setParent(org.apache.commons.graph.collections.DisjointSetNode)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/DisjointSetNode",
                            "increaseRank()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def union(self, e1: typing.Any, e2: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "55-65:find1": {
                    "start": 55,
                    "end": 65,
                    "body": [
                        "    public E find1(E e) {\n",
                        "        DisjointSetNode<E> node = find0(getNode(e));\n",
                        "\n",
                        "        if (node == node.getParent()) {\n",
                        "            return node.getElement();\n",
                        "        }\n",
                        "\n",
                        "        node.setParent(find0(node.getParent()));\n",
                        "\n",
                        "        return node.getParent().getElement();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "E",
                            "E"
                        ]
                    ],
                    "signature": "find1(E)",
                    "parameters": [
                        "e"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.DisjointSet",
                            "DisjointSet",
                            "42-47:find0"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.DisjointSet",
                            "DisjointSet",
                            "74-83:getNode"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/DisjointSetNode",
                            "getParent()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/DisjointSetNode",
                            "getElement()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/DisjointSetNode",
                            "setParent(org.apache.commons.graph.collections.DisjointSetNode)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def find1(self, e: typing.Any) -> typing.Any:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "74-83:getNode": {
                    "start": 74,
                    "end": 83,
                    "body": [
                        "    private DisjointSetNode<E> getNode(E e) {\n",
                        "        DisjointSetNode<E> node = disjointSets.get(e);\n",
                        "\n",
                        "        if (node == null) {\n",
                        "            node = new DisjointSetNode<E>(e);\n",
                        "            disjointSets.put(e, node);\n",
                        "        }\n",
                        "\n",
                        "        return node;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "DisjointSetNode<E>",
                            "DisjointSetNode<E>"
                        ]
                    ],
                    "signature": "getNode(E)",
                    "parameters": [
                        "e"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/DisjointSetNode",
                            "DisjointSetNode<E>(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(java.lang.Object,org.apache.commons.graph.collections.DisjointSetNode)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __getNode(self, e: typing.Any) -> DisjointSetNode[typing.Any]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "42-47:find0": {
                    "start": 42,
                    "end": 47,
                    "body": [
                        "    private DisjointSetNode<E> find0(DisjointSetNode<E> node) {\n",
                        "        if (node == node.getParent()) {\n",
                        "            return node;\n",
                        "        }\n",
                        "        return find0(node.getParent());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "DisjointSetNode<E>",
                            "DisjointSetNode<E>"
                        ]
                    ],
                    "signature": "find0(DisjointSetNode<E>)",
                    "parameters": [
                        "node"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/DisjointSetNode",
                            "getParent()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.DisjointSet",
                            "DisjointSet",
                            "42-47:find0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __find0(self, node: DisjointSetNode[typing.Any]) -> DisjointSetNode[typing.Any]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "34-34:disjointSets": {
                    "start": 34,
                    "end": 34,
                    "body": [
                        "    private final Map<E, DisjointSetNode<E>> disjointSets = new HashMap<E, DisjointSetNode<E>>();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Map<E,DisjointSetNode<E>>",
                            "java.util.Map<E,DisjointSetNode<E>>"
                        ]
                    ],
                    "partial_translation": [
                        "    __disjointSets: typing.Dict[typing.Any, DisjointSetNode[typing.Any]] = {}",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class DisjointSet:\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import io",
        "import typing\nfrom typing import *",
        "from src.main.org.apache.commons.graph.collections.DisjointSetNode import *"
    ]
}