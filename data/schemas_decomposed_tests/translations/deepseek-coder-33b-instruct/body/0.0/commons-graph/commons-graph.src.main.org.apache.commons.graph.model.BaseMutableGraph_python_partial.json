{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/model/BaseMutableGraph.java",
    "imports": {
        "25-25:import LinkedHashSet": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.util.LinkedHashSet;\n"
            ]
        },
        "22-22:import MutableGraph": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.graph.MutableGraph;\n"
            ]
        },
        "23-23:import VertexPair": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.apache.commons.graph.VertexPair;\n"
            ]
        }
    },
    "classes": {
        "BaseMutableGraph": {
            "start": 36,
            "end": 36,
            "is_abstract": true,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "MutableGraph",
                "BaseGraph"
            ],
            "methods": {
                "142-152:removeVertex": {
                    "start": 142,
                    "end": 152,
                    "body": [
                        "    public final void removeVertex(V v) {\n",
                        "        checkGraphCondition(v != null, \"Impossible to remove a null Vertex from the Graph\");\n",
                        "        checkGraphCondition(containsVertex(v), \"Vertex '%s' not present in the Graph\", v);\n",
                        "\n",
                        "        for (V tail : getAdjacencyList().get(v)) {\n",
                        "            getIndexedEdges().remove(new VertexPair<V>(v, tail));\n",
                        "        }\n",
                        "        getAdjacencyList().remove(v);\n",
                        "\n",
                        "        decorateRemoveVertex(v);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "removeVertex(V)",
                    "parameters": [
                        "v"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseGraph",
                            "BaseGraph",
                            "65-70:checkGraphCondition"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "containsVertex(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getAdjacencyList()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "remove(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getIndexedEdges()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "VertexPair<V>(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseMutableGraph",
                            "BaseMutableGraph",
                            "97-97:decorateRemoveVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def removeVertex(self, v: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "132-139:removeEdge": {
                    "start": 132,
                    "end": 139,
                    "body": [
                        "    public final void removeEdge(E e) {\n",
                        "        checkGraphCondition(e != null, \"Impossible to remove a null Edge from the Graph\");\n",
                        "        checkGraphCondition(containsEdge(e), \"Edge '%s' not present in the Graph\", e);\n",
                        "        final VertexPair<V> vertexPair = getVertices1(e);\n",
                        "        decorateRemoveEdge(e);\n",
                        "        internalRemoveEdge(vertexPair.getHead(), e, vertexPair.getTail());\n",
                        "        getAllEdges().remove(e);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "removeEdge(E)",
                    "parameters": [
                        "e"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getVertices1(java.lang.Object)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseGraph",
                            "BaseGraph",
                            "65-70:checkGraphCondition"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "containsEdge(java.lang.Object)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseMutableGraph",
                            "BaseMutableGraph",
                            "90-90:decorateRemoveEdge"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseMutableGraph",
                            "BaseMutableGraph",
                            "124-129:internalRemoveEdge"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "getHead()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "getTail()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "remove(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getAllEdges()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def removeEdge(self, e: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "124-129:internalRemoveEdge": {
                    "start": 124,
                    "end": 129,
                    "body": [
                        "    protected void internalRemoveEdge(V head, E e, V tail) {\n",
                        "        final VertexPair<V> vertexPair = new VertexPair<V>(head, tail);\n",
                        "        getIndexedVertices().remove(e);\n",
                        "        getIndexedEdges().remove(vertexPair);\n",
                        "        getAdjacencyList().get(vertexPair.getHead()).remove(vertexPair.getTail());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "internalRemoveEdge(V, E, V)",
                    "parameters": [
                        "head",
                        "e",
                        "tail"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "VertexPair<V>(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "remove(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getIndexedVertices()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getIndexedEdges()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "remove(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "getTail()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getAdjacencyList()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "getHead()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _internalRemoveEdge(self, head: typing.Any, e: typing.Any, tail: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "106-115:internalAddEdge": {
                    "start": 106,
                    "end": 115,
                    "body": [
                        "    protected void internalAddEdge(V head, E e, V tail) {\n",
                        "        getAdjacencyList().get(head).add(tail);\n",
                        "\n",
                        "        final VertexPair<V> vertexPair = new VertexPair<V>(head, tail);\n",
                        "        getIndexedEdges().put(vertexPair, e);\n",
                        "\n",
                        "        if (!getIndexedVertices().containsKey(e)) {\n",
                        "            getIndexedVertices().put(e, vertexPair);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "internalAddEdge(V, E, V)",
                    "parameters": [
                        "head",
                        "e",
                        "tail"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "VertexPair<V>(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "add(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getAdjacencyList()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(org.apache.commons.graph.VertexPair,java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getIndexedEdges()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "containsKey(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getIndexedVertices()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(java.lang.Object,org.apache.commons.graph.VertexPair)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _internalAddEdge(self, head: typing.Any, e: typing.Any, tail: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "60-67:addVertex": {
                    "start": 60,
                    "end": 67,
                    "body": [
                        "    public final void addVertex(V v) {\n",
                        "        checkGraphCondition(v != null, \"Impossible to add a null Vertex to the Graph\");\n",
                        "        checkGraphCondition(!containsVertex(v), \"Vertex '%s' already present in the Graph\", v);\n",
                        "\n",
                        "        getAdjacencyList().put(v, new LinkedHashSet<V>());\n",
                        "\n",
                        "        decorateAddVertex(v);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "addVertex(V)",
                    "parameters": [
                        "v"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseGraph",
                            "BaseGraph",
                            "65-70:checkGraphCondition"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "containsVertex(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(java.lang.Object,java.util.Set)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getAdjacencyList()"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<V>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseMutableGraph",
                            "BaseMutableGraph",
                            "83-83:decorateAddVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def addVertex(self, v: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "41-57:addEdge": {
                    "start": 41,
                    "end": 57,
                    "body": [
                        "    public void addEdge(V head, E e, V tail) {\n",
                        "        checkGraphCondition(head != null, \"Null head Vertex not admitted\");\n",
                        "        checkGraphCondition(e != null, \"Impossible to add a null Edge in the Graph\");\n",
                        "        checkGraphCondition(tail != null, \"Null tail Vertex not admitted\");\n",
                        "        checkGraphCondition(\n",
                        "                containsVertex(head), \"Head Vertex '%s' not present in the Graph\", head);\n",
                        "        checkGraphCondition(\n",
                        "                containsVertex(tail), \"Head Vertex '%s' not present in the Graph\", tail);\n",
                        "        checkGraphCondition(\n",
                        "                getEdge(head, tail) == null, \"Edge %s is already present in the Graph\", e);\n",
                        "\n",
                        "        getAllEdges().add(e);\n",
                        "\n",
                        "        internalAddEdge(head, e, tail);\n",
                        "\n",
                        "        decorateAddEdge(head, e, tail);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "addEdge(V, E, V)",
                    "parameters": [
                        "head",
                        "e",
                        "tail"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseGraph",
                            "BaseGraph",
                            "65-70:checkGraphCondition"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "containsVertex(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getEdge(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "add(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getAllEdges()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseMutableGraph",
                            "BaseMutableGraph",
                            "106-115:internalAddEdge"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseMutableGraph",
                            "BaseMutableGraph",
                            "76-76:decorateAddEdge"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def addEdge(self, head: typing.Any, e: typing.Any, tail: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "97-97:decorateRemoveVertex": {
                    "start": 97,
                    "end": 97,
                    "body": [
                        "    protected abstract void decorateRemoveVertex(V v);\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "decorateRemoveVertex(V)",
                    "parameters": [
                        "v"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _decorateRemoveVertex(self, v: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "90-90:decorateRemoveEdge": {
                    "start": 90,
                    "end": 90,
                    "body": [
                        "    protected abstract void decorateRemoveEdge(E e);\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "decorateRemoveEdge(E)",
                    "parameters": [
                        "e"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _decorateRemoveEdge(self, e: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "83-83:decorateAddVertex": {
                    "start": 83,
                    "end": 83,
                    "body": [
                        "    protected abstract void decorateAddVertex(V v);\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "decorateAddVertex(V)",
                    "parameters": [
                        "v"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _decorateAddVertex(self, v: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "76-76:decorateAddEdge": {
                    "start": 76,
                    "end": 76,
                    "body": [
                        "    protected abstract void decorateAddEdge(V head, E e, V tail);\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "decorateAddEdge(V, E, V)",
                    "parameters": [
                        "head",
                        "e",
                        "tail"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _decorateAddEdge(self, head: typing.Any, e: typing.Any, tail: typing.Any) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "38-38:serialVersionUID": {
                    "start": 38,
                    "end": 38,
                    "body": [
                        "    private static final long serialVersionUID = 1549113549446254183L;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "partial_translation": [
                        "    __serialVersionUID: int = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class BaseMutableGraph(MutableGraph, BaseGraph, ABC):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "from abc import ABC",
        "import io",
        "import typing\nfrom typing import *",
        "from src.main.org.apache.commons.graph.MutableGraph import *",
        "from src.main.org.apache.commons.graph.VertexPair import *",
        "from src.main.org.apache.commons.graph.model.BaseGraph import *"
    ]
}