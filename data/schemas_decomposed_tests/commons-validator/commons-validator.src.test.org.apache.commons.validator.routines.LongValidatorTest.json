{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-validator/src/test/java/org/apache/commons/validator/routines/LongValidatorTest.java",
    "imports": {
        "20-20:import Locale": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.util.Locale;\n"
            ]
        },
        "18-18:import Test": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.junit.Test;\n"
            ]
        }
    },
    "classes": {
        "LongValidatorTest": {
            "start": 27,
            "end": 27,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "AbstractNumberValidatorTest"
            ],
            "methods": {
                "1409-1428:testLongRangeMinMax_test4_decomposed": {
                    "start": 1409,
                    "end": 1428,
                    "body": [
                        "    public void testLongRangeMinMax_test4_decomposed()  {\n",
                        "        LongValidator validator = (LongValidator) strictValidator;\n",
                        "        Long number9 = validator.validate1(\"9\", \"#\");\n",
                        "        Long number10 = validator.validate1(\"10\", \"#\");\n",
                        "        Long number11 = validator.validate1(\"11\", \"#\");\n",
                        "        Long number19 = validator.validate1(\"19\", \"#\");\n",
                        "        Long number20 = validator.validate1(\"20\", \"#\");\n",
                        "        Long number21 = validator.validate1(\"21\", \"#\");\n",
                        "        assertFalse(\"isInRange() < min\", validator.isInRange1(number9, 10, 20));\n",
                        "        assertTrue(\"isInRange() = min\", validator.isInRange1(number10, 10, 20));\n",
                        "        assertTrue(\"isInRange() in range\", validator.isInRange1(number11, 10, 20));\n",
                        "        assertTrue(\"isInRange() = max\", validator.isInRange1(number20, 10, 20));\n",
                        "        assertFalse(\"isInRange() > max\", validator.isInRange1(number21, 10, 20));\n",
                        "        assertFalse(\"minValue() < min\", validator.minValue1(number9, 10));\n",
                        "        assertTrue(\"minValue() = min\", validator.minValue1(number10, 10));\n",
                        "        assertTrue(\"minValue() > min\", validator.minValue1(number11, 10));\n",
                        "        assertTrue(\"maxValue() < max\", validator.maxValue1(number19, 20));\n",
                        "        assertTrue(\"maxValue() = max\", validator.maxValue1(number20, 20));\n",
                        "        assertFalse(\"maxValue() > max\", validator.maxValue1(number21, 20));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongRangeMinMax_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "170-172:isInRange1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "192-194:minValue1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "214-216:maxValue1"
                        ]
                    ]
                },
                "1390-1406:testLongRangeMinMax_test3_decomposed": {
                    "start": 1390,
                    "end": 1406,
                    "body": [
                        "    public void testLongRangeMinMax_test3_decomposed()  {\n",
                        "        LongValidator validator = (LongValidator) strictValidator;\n",
                        "        Long number9 = validator.validate1(\"9\", \"#\");\n",
                        "        Long number10 = validator.validate1(\"10\", \"#\");\n",
                        "        Long number11 = validator.validate1(\"11\", \"#\");\n",
                        "        Long number19 = validator.validate1(\"19\", \"#\");\n",
                        "        Long number20 = validator.validate1(\"20\", \"#\");\n",
                        "        Long number21 = validator.validate1(\"21\", \"#\");\n",
                        "        assertFalse(\"isInRange() < min\", validator.isInRange1(number9, 10, 20));\n",
                        "        assertTrue(\"isInRange() = min\", validator.isInRange1(number10, 10, 20));\n",
                        "        assertTrue(\"isInRange() in range\", validator.isInRange1(number11, 10, 20));\n",
                        "        assertTrue(\"isInRange() = max\", validator.isInRange1(number20, 10, 20));\n",
                        "        assertFalse(\"isInRange() > max\", validator.isInRange1(number21, 10, 20));\n",
                        "        assertFalse(\"minValue() < min\", validator.minValue1(number9, 10));\n",
                        "        assertTrue(\"minValue() = min\", validator.minValue1(number10, 10));\n",
                        "        assertTrue(\"minValue() > min\", validator.minValue1(number11, 10));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongRangeMinMax_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "170-172:isInRange1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "192-194:minValue1"
                        ]
                    ]
                },
                "1374-1387:testLongRangeMinMax_test2_decomposed": {
                    "start": 1374,
                    "end": 1387,
                    "body": [
                        "    public void testLongRangeMinMax_test2_decomposed()  {\n",
                        "        LongValidator validator = (LongValidator) strictValidator;\n",
                        "        Long number9 = validator.validate1(\"9\", \"#\");\n",
                        "        Long number10 = validator.validate1(\"10\", \"#\");\n",
                        "        Long number11 = validator.validate1(\"11\", \"#\");\n",
                        "        Long number19 = validator.validate1(\"19\", \"#\");\n",
                        "        Long number20 = validator.validate1(\"20\", \"#\");\n",
                        "        Long number21 = validator.validate1(\"21\", \"#\");\n",
                        "        assertFalse(\"isInRange() < min\", validator.isInRange1(number9, 10, 20));\n",
                        "        assertTrue(\"isInRange() = min\", validator.isInRange1(number10, 10, 20));\n",
                        "        assertTrue(\"isInRange() in range\", validator.isInRange1(number11, 10, 20));\n",
                        "        assertTrue(\"isInRange() = max\", validator.isInRange1(number20, 10, 20));\n",
                        "        assertFalse(\"isInRange() > max\", validator.isInRange1(number21, 10, 20));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongRangeMinMax_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "170-172:isInRange1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1363-1371:testLongRangeMinMax_test1_decomposed": {
                    "start": 1363,
                    "end": 1371,
                    "body": [
                        "    public void testLongRangeMinMax_test1_decomposed()  {\n",
                        "        LongValidator validator = (LongValidator) strictValidator;\n",
                        "        Long number9 = validator.validate1(\"9\", \"#\");\n",
                        "        Long number10 = validator.validate1(\"10\", \"#\");\n",
                        "        Long number11 = validator.validate1(\"11\", \"#\");\n",
                        "        Long number19 = validator.validate1(\"19\", \"#\");\n",
                        "        Long number20 = validator.validate1(\"20\", \"#\");\n",
                        "        Long number21 = validator.validate1(\"21\", \"#\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongRangeMinMax_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ]
                    ]
                },
                "1357-1360:testLongRangeMinMax_test0_decomposed": {
                    "start": 1357,
                    "end": 1360,
                    "body": [
                        "    public void testLongRangeMinMax_test0_decomposed()  {\n",
                        "        LongValidator validator = (LongValidator) strictValidator;\n",
                        "        Long number9 = validator.validate1(\"9\", \"#\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongRangeMinMax_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ]
                    ]
                },
                "1297-1354:testLongValidatorMethods_test31_decomposed": {
                    "start": 1297,
                    "end": 1354,
                    "body": [
                        "    public void testLongValidatorMethods_test31_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                LongValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", LongValidator.getInstance().isValid0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", LongValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) pattern\", LongValidator.getInstance().isValid1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\n",
                        "                \"isValid(B) both\",\n",
                        "                LongValidator.getInstance().isValid3(patternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test31_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1240-1294:testLongValidatorMethods_test30_decomposed": {
                    "start": 1240,
                    "end": 1294,
                    "body": [
                        "    public void testLongValidatorMethods_test30_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                LongValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", LongValidator.getInstance().isValid0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", LongValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) pattern\", LongValidator.getInstance().isValid1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test30_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1184-1237:testLongValidatorMethods_test29_decomposed": {
                    "start": 1184,
                    "end": 1237,
                    "body": [
                        "    public void testLongValidatorMethods_test29_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                LongValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", LongValidator.getInstance().isValid0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", LongValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) pattern\", LongValidator.getInstance().isValid1(XXXX, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test29_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1129-1181:testLongValidatorMethods_test28_decomposed": {
                    "start": 1129,
                    "end": 1181,
                    "body": [
                        "    public void testLongValidatorMethods_test28_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                LongValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", LongValidator.getInstance().isValid0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", LongValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test28_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1075-1126:testLongValidatorMethods_test27_decomposed": {
                    "start": 1075,
                    "end": 1126,
                    "body": [
                        "    public void testLongValidatorMethods_test27_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                LongValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", LongValidator.getInstance().isValid0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", LongValidator.getInstance().isValid2(XXXX, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test27_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1022-1072:testLongValidatorMethods_test26_decomposed": {
                    "start": 1022,
                    "end": 1072,
                    "body": [
                        "    public void testLongValidatorMethods_test26_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                LongValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", LongValidator.getInstance().isValid0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test26_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "970-1019:testLongValidatorMethods_test25_decomposed": {
                    "start": 970,
                    "end": 1019,
                    "body": [
                        "    public void testLongValidatorMethods_test25_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                LongValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", LongValidator.getInstance().isValid0(XXXX));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test25_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "919-967:testLongValidatorMethods_test24_decomposed": {
                    "start": 919,
                    "end": 967,
                    "body": [
                        "    public void testLongValidatorMethods_test24_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                LongValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test24_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "869-916:testLongValidatorMethods_test23_decomposed": {
                    "start": 869,
                    "end": 916,
                    "body": [
                        "    public void testLongValidatorMethods_test23_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                LongValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test23_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "822-866:testLongValidatorMethods_test22_decomposed": {
                    "start": 822,
                    "end": 866,
                    "body": [
                        "    public void testLongValidatorMethods_test22_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test22_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "776-819:testLongValidatorMethods_test21_decomposed": {
                    "start": 776,
                    "end": 819,
                    "body": [
                        "    public void testLongValidatorMethods_test21_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", LongValidator.getInstance().validate1(XXXX, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test21_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "731-773:testLongValidatorMethods_test20_decomposed": {
                    "start": 731,
                    "end": 773,
                    "body": [
                        "    public void testLongValidatorMethods_test20_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test20_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "687-728:testLongValidatorMethods_test19_decomposed": {
                    "start": 687,
                    "end": 728,
                    "body": [
                        "    public void testLongValidatorMethods_test19_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", LongValidator.getInstance().validate2(XXXX, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test19_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "644-684:testLongValidatorMethods_test18_decomposed": {
                    "start": 644,
                    "end": 684,
                    "body": [
                        "    public void testLongValidatorMethods_test18_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test18_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "602-641:testLongValidatorMethods_test17_decomposed": {
                    "start": 602,
                    "end": 641,
                    "body": [
                        "    public void testLongValidatorMethods_test17_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", LongValidator.getInstance().validate0(XXXX));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test17_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "561-599:testLongValidatorMethods_test16_decomposed": {
                    "start": 561,
                    "end": 599,
                    "body": [
                        "    public void testLongValidatorMethods_test16_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test16_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ]
                    ]
                },
                "521-558:testLongValidatorMethods_test15_decomposed": {
                    "start": 521,
                    "end": 558,
                    "body": [
                        "    public void testLongValidatorMethods_test15_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                LongValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test15_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ]
                    ]
                },
                "484-518:testLongValidatorMethods_test14_decomposed": {
                    "start": 484,
                    "end": 518,
                    "body": [
                        "    public void testLongValidatorMethods_test14_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test14_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ]
                    ]
                },
                "448-481:testLongValidatorMethods_test13_decomposed": {
                    "start": 448,
                    "end": 481,
                    "body": [
                        "    public void testLongValidatorMethods_test13_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) pattern\", LongValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test13_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ]
                    ]
                },
                "413-445:testLongValidatorMethods_test12_decomposed": {
                    "start": 413,
                    "end": 445,
                    "body": [
                        "    public void testLongValidatorMethods_test12_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test12_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ]
                    ]
                },
                "379-410:testLongValidatorMethods_test11_decomposed": {
                    "start": 379,
                    "end": 410,
                    "body": [
                        "    public void testLongValidatorMethods_test11_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", LongValidator.getInstance().isValid2(localeVal, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ]
                    ]
                },
                "346-376:testLongValidatorMethods_test10_decomposed": {
                    "start": 346,
                    "end": 376,
                    "body": [
                        "    public void testLongValidatorMethods_test10_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ]
                    ]
                },
                "314-343:testLongValidatorMethods_test9_decomposed": {
                    "start": 314,
                    "end": 343,
                    "body": [
                        "    public void testLongValidatorMethods_test9_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", LongValidator.getInstance().isValid0(defaultVal));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ]
                    ]
                },
                "283-311:testLongValidatorMethods_test8_decomposed": {
                    "start": 283,
                    "end": 311,
                    "body": [
                        "    public void testLongValidatorMethods_test8_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ]
                    ]
                },
                "253-280:testLongValidatorMethods_test7_decomposed": {
                    "start": 253,
                    "end": 280,
                    "body": [
                        "    public void testLongValidatorMethods_test7_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "146-148:validate3"
                        ]
                    ]
                },
                "227-250:testLongValidatorMethods_test6_decomposed": {
                    "start": 227,
                    "end": 250,
                    "body": [
                        "    public void testLongValidatorMethods_test6_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ]
                    ]
                },
                "202-224:testLongValidatorMethods_test5_decomposed": {
                    "start": 202,
                    "end": 224,
                    "body": [
                        "    public void testLongValidatorMethods_test5_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate1(patternVal, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "122-124:validate1"
                        ]
                    ]
                },
                "181-199:testLongValidatorMethods_test4_decomposed": {
                    "start": 181,
                    "end": 199,
                    "body": [
                        "    public void testLongValidatorMethods_test4_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ]
                    ]
                },
                "161-178:testLongValidatorMethods_test3_decomposed": {
                    "start": 161,
                    "end": 178,
                    "body": [
                        "    public void testLongValidatorMethods_test3_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                LongValidator.getInstance().validate2(localeVal, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "133-135:validate2"
                        ]
                    ]
                },
                "145-158:testLongValidatorMethods_test2_decomposed": {
                    "start": 145,
                    "end": 158,
                    "body": [
                        "    public void testLongValidatorMethods_test2_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ]
                    ]
                },
                "130-142:testLongValidatorMethods_test1_decomposed": {
                    "start": 130,
                    "end": 142,
                    "body": [
                        "    public void testLongValidatorMethods_test1_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\", expected, LongValidator.getInstance().validate0(defaultVal));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "111-113:validate0"
                        ]
                    ]
                },
                "117-127:testLongValidatorMethods_test0_decomposed": {
                    "start": 117,
                    "end": 127,
                    "body": [
                        "    public void testLongValidatorMethods_test0_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Long expected = Long.valueOf(12345);\n",
                        "        LongValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLongValidatorMethods_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "73-75:getInstance"
                        ]
                    ]
                },
                "52-109:setUp": {
                    "start": 52,
                    "end": 109,
                    "body": [
                        "    protected void setUp() throws Exception {\n",
                        "        super.setUp();\n",
                        "\n",
                        "        validator = new LongValidator(false, 0);\n",
                        "        strictValidator = LongValidator.LongValidator1();\n",
                        "\n",
                        "        testPattern = \"#,###\";\n",
                        "\n",
                        "        max = null;\n",
                        "        maxPlusOne = null;\n",
                        "        min = null;\n",
                        "        minMinusOne = null;\n",
                        "\n",
                        "        invalidStrict =\n",
                        "                new String[] {\n",
                        "                    null, \"\", \"X\", \"X12\", \"12X\", \"1X2\", \"1.2\", LONG_MAX_1, LONG_MIN_1, NINES\n",
                        "                };\n",
                        "\n",
                        "        invalid = new String[] {null, \"\", \"X\", \"X12\", \"\", LONG_MAX_1, LONG_MIN_1, NINES};\n",
                        "\n",
                        "        testNumber = Long.valueOf(1234);\n",
                        "        testZero = Long.valueOf(0);\n",
                        "        validStrict = new String[] {\"0\", \"1234\", \"1,234\", LONG_MAX, LONG_MIN};\n",
                        "        validStrictCompare =\n",
                        "                new Number[] {testZero, testNumber, testNumber, LONG_MAX_VAL, LONG_MIN_VAL};\n",
                        "        valid =\n",
                        "                new String[] {\n",
                        "                    \"0\",\n",
                        "                    \"1234\",\n",
                        "                    \"1,234\",\n",
                        "                    \"1,234.5\",\n",
                        "                    \"1234X\",\n",
                        "                    LONG_MAX,\n",
                        "                    LONG_MIN,\n",
                        "                    LONG_MAX_0,\n",
                        "                    LONG_MIN_0\n",
                        "                };\n",
                        "        validCompare =\n",
                        "                new Number[] {\n",
                        "                    testZero,\n",
                        "                    testNumber,\n",
                        "                    testNumber,\n",
                        "                    testNumber,\n",
                        "                    testNumber,\n",
                        "                    LONG_MAX_VAL,\n",
                        "                    LONG_MIN_VAL,\n",
                        "                    LONG_MAX_VAL,\n",
                        "                    LONG_MIN_VAL\n",
                        "                };\n",
                        "\n",
                        "        testStringUS = \"1,234\";\n",
                        "        testStringDE = \"1.234\";\n",
                        "\n",
                        "        localeValue = testStringDE;\n",
                        "        localePattern = \"#.###\";\n",
                        "        testLocale = Locale.GERMANY;\n",
                        "        localeExpected = testNumber;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setUp()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.AbstractNumberValidatorTest",
                            "AbstractNumberValidatorTest",
                            "72-76:setUp"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "78-80:LongValidator"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.LongValidator",
                            "LongValidator",
                            "82-84:LongValidator1"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ]
                    ]
                },
                "47-49:LongValidatorTest": {
                    "start": 47,
                    "end": 49,
                    "body": [
                        "    public LongValidatorTest(String name) {\n",
                        "        super(name);\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "LongValidatorTest(String)",
                    "parameters": [
                        "name"
                    ],
                    "calls": [
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.AbstractNumberValidatorTest",
                            "AbstractNumberValidatorTest",
                            "67-69:AbstractNumberValidatorTest"
                        ]
                    ]
                }
            },
            "fields": {
                "40-40:NINES": {
                    "start": 40,
                    "end": 40,
                    "body": [
                        "    private static final String NINES = \"9999999999999999999999999999999999999\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "38-38:LONG_MIN_1": {
                    "start": 38,
                    "end": 38,
                    "body": [
                        "    private static final String LONG_MIN_1 = \"-9223372036854775809\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "36-37:LONG_MIN_0": {
                    "start": 36,
                    "end": 37,
                    "body": [
                        "    private static final String LONG_MIN_0 =\n",
                        "            \"-9223372036854775808.99999999999999999999999\"; // force double rounding\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "35-35:LONG_MIN": {
                    "start": 35,
                    "end": 35,
                    "body": [
                        "    private static final String LONG_MIN = \"-9223372036854775808\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "34-34:LONG_MAX_1": {
                    "start": 34,
                    "end": 34,
                    "body": [
                        "    private static final String LONG_MAX_1 = \"9223372036854775808\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "32-33:LONG_MAX_0": {
                    "start": 32,
                    "end": 33,
                    "body": [
                        "    private static final String LONG_MAX_0 =\n",
                        "            \"9223372036854775807.99999999999999999999999\"; // force double rounding\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "31-31:LONG_MAX": {
                    "start": 31,
                    "end": 31,
                    "body": [
                        "    private static final String LONG_MAX = \"9223372036854775807\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "30-30:LONG_MAX_VAL": {
                    "start": 30,
                    "end": 30,
                    "body": [
                        "    private static final Long LONG_MAX_VAL = Long.valueOf(Long.MAX_VALUE);\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "Long",
                            "java.lang.Long"
                        ]
                    ]
                },
                "29-29:LONG_MIN_VAL": {
                    "start": 29,
                    "end": 29,
                    "body": [
                        "    private static final Long LONG_MIN_VAL = Long.valueOf(Long.MIN_VALUE);\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "Long",
                            "java.lang.Long"
                        ]
                    ]
                }
            }
        }
    }
}