{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/test/java/org/apache/commons/codec/binary/Base16InputStreamTest.java",
    "imports": {
        "28-28:import IOException": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "27-27:import ByteArrayInputStream": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.io.ByteArrayInputStream;\n"
            ]
        },
        "29-29:import InputStream": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.io.InputStream;\n"
            ]
        },
        "25-25:import Test": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "23-23:import static Assert.fail": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.junit.Assert.fail;\n"
            ]
        },
        "21-21:import static Assert.assertEquals": {
            "start": 21,
            "end": 21,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        },
        "20-20:import static Assert.assertArrayEquals": {
            "start": 20,
            "end": 20,
            "body": [
                "import static org.junit.Assert.assertArrayEquals;\n"
            ]
        },
        "22-22:import static Assert.assertFalse": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.junit.Assert.assertFalse;\n"
            ]
        }
    },
    "classes": {
        "Base16InputStreamTest": {
            "start": 34,
            "end": 34,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "476-482:testSkipWrongArgument_test1_decomposed": {
                    "start": 476,
                    "end": 482,
                    "body": [
                        "    public void testSkipWrongArgument_test1_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "        try (final Base16InputStream b16Stream = Base16InputStream.Base16InputStream3(ins)) {\n",
                        "            b16Stream.skip(-10);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = IllegalArgumentException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSkipWrongArgument_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "59-61:Base16InputStream3"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSkipWrongArgument_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "470-473:testSkipWrongArgument_test0_decomposed": {
                    "start": 470,
                    "end": 473,
                    "body": [
                        "    public void testSkipWrongArgument_test0_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSkipWrongArgument_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSkipWrongArgument_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "459-467:testSkipToEnd_test1_decomposed": {
                    "start": 459,
                    "end": 467,
                    "body": [
                        "    public void testSkipToEnd_test1_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "        try (final Base16InputStream b16Stream = Base16InputStream.Base16InputStream3(ins)) {\n",
                        "            assertEquals(6, b16Stream.skip(6));\n",
                        "            assertEquals(-1, b16Stream.read0());\n",
                        "            assertEquals(-1, b16Stream.read0());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSkipToEnd_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "59-61:Base16InputStream3"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "109-119:read0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSkipToEnd_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "453-456:testSkipToEnd_test0_decomposed": {
                    "start": 453,
                    "end": 456,
                    "body": [
                        "    public void testSkipToEnd_test0_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSkipToEnd_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSkipToEnd_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "442-450:testSkipPastEnd_test1_decomposed": {
                    "start": 442,
                    "end": 450,
                    "body": [
                        "    public void testSkipPastEnd_test1_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "        try (final Base16InputStream b16Stream = Base16InputStream.Base16InputStream3(ins)) {\n",
                        "            assertEquals(6, b16Stream.skip(10));\n",
                        "            assertEquals(-1, b16Stream.read0());\n",
                        "            assertEquals(-1, b16Stream.read0());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSkipPastEnd_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "59-61:Base16InputStream3"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "109-119:read0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSkipPastEnd_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "436-439:testSkipPastEnd_test0_decomposed": {
                    "start": 436,
                    "end": 439,
                    "body": [
                        "    public void testSkipPastEnd_test0_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSkipPastEnd_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSkipPastEnd_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "419-433:testSkipNone_test1_decomposed": {
                    "start": 419,
                    "end": 433,
                    "body": [
                        "    public void testSkipNone_test1_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "        try (final Base16InputStream b16Stream = Base16InputStream.Base16InputStream3(ins)) {\n",
                        "            final byte[] actualBytes = new byte[6];\n",
                        "            assertEquals(0, b16Stream.skip(0));\n",
                        "            b16Stream.read1(actualBytes, 0, actualBytes.length);\n",
                        "            assertArrayEquals(\n",
                        "                    actualBytes,\n",
                        "                    new byte[] {\n",
                        "                        (byte) 202, (byte) 254, (byte) 186, (byte) 190, (byte) 255, (byte) 255\n",
                        "                    });\n",
                        "            assertEquals(-1, b16Stream.read0());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSkipNone_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "59-61:Base16InputStream3"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(byte[],byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "109-119:read0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSkipNone_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "413-416:testSkipNone_test0_decomposed": {
                    "start": 413,
                    "end": 416,
                    "body": [
                        "    public void testSkipNone_test0_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSkipNone_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSkipNone_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "402-410:testSkipBig_test1_decomposed": {
                    "start": 402,
                    "end": 410,
                    "body": [
                        "    public void testSkipBig_test1_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "        try (final Base16InputStream b16Stream = Base16InputStream.Base16InputStream3(ins)) {\n",
                        "            assertEquals(6, b16Stream.skip(Integer.MAX_VALUE));\n",
                        "            assertEquals(-1, b16Stream.read0());\n",
                        "            assertEquals(-1, b16Stream.read0());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSkipBig_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "59-61:Base16InputStream3"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "109-119:read0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSkipBig_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "396-399:testSkipBig_test0_decomposed": {
                    "start": 396,
                    "end": 399,
                    "body": [
                        "    public void testSkipBig_test0_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSkipBig_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSkipBig_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "355-393:testReadOutOfBounds_test1_decomposed": {
                    "start": 355,
                    "end": 393,
                    "body": [
                        "    public void testReadOutOfBounds_test1_decomposed() throws IOException {\n",
                        "        final byte[] decoded = StringUtils.getBytesUtf8(STRING_FIXTURE);\n",
                        "        final byte[] buf = new byte[1024];\n",
                        "        final ByteArrayInputStream bin = new ByteArrayInputStream(decoded);\n",
                        "        try (final Base16InputStream in = Base16InputStream.Base16InputStream2(bin, true)) {\n",
                        "\n",
                        "            try {\n",
                        "                in.read1(buf, -1, 0);\n",
                        "                fail(\n",
                        "                        \"Expected Base16InputStream.read(buf, -1, 0) to throw\"\n",
                        "                                + \" IndexOutOfBoundsException\");\n",
                        "            } catch (final IndexOutOfBoundsException e) {\n",
                        "            }\n",
                        "\n",
                        "            try {\n",
                        "                in.read1(buf, 0, -1);\n",
                        "                fail(\n",
                        "                        \"Expected Base16InputStream.read(buf, 0, -1) to throw\"\n",
                        "                                + \" IndexOutOfBoundsException\");\n",
                        "            } catch (final IndexOutOfBoundsException e) {\n",
                        "            }\n",
                        "\n",
                        "            try {\n",
                        "                in.read1(buf, buf.length + 1, 0);\n",
                        "                fail(\n",
                        "                        \"Base16InputStream.read(buf, buf.length + 1, 0) throws\"\n",
                        "                                + \" IndexOutOfBoundsException\");\n",
                        "            } catch (final IndexOutOfBoundsException e) {\n",
                        "            }\n",
                        "\n",
                        "            try {\n",
                        "                in.read1(buf, buf.length - 1, 2);\n",
                        "                fail(\n",
                        "                        \"Base16InputStream.read(buf, buf.length - 1, 2) throws\"\n",
                        "                                + \" IndexOutOfBoundsException\");\n",
                        "            } catch (final IndexOutOfBoundsException e) {\n",
                        "            }\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testReadOutOfBounds_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "258-260:getBytesUtf8"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "54-57:Base16InputStream2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testReadOutOfBounds_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "350-352:testReadOutOfBounds_test0_decomposed": {
                    "start": 350,
                    "end": 352,
                    "body": [
                        "    public void testReadOutOfBounds_test0_decomposed() throws IOException {\n",
                        "        final byte[] decoded = StringUtils.getBytesUtf8(STRING_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testReadOutOfBounds_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "258-260:getBytesUtf8"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testReadOutOfBounds_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "339-347:testReadNull_test1_decomposed": {
                    "start": 339,
                    "end": 347,
                    "body": [
                        "    public void testReadNull_test1_decomposed() throws IOException {\n",
                        "        final byte[] decoded = StringUtils.getBytesUtf8(STRING_FIXTURE);\n",
                        "        final ByteArrayInputStream bin = new ByteArrayInputStream(decoded);\n",
                        "        try (final Base16InputStream in = Base16InputStream.Base16InputStream2(bin, true)) {\n",
                        "            in.read1(null, 0, 0);\n",
                        "            fail(\"Base16InputStream.read(null, 0, 0) to throw a NullPointerException\");\n",
                        "        } catch (final NullPointerException e) {\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testReadNull_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "258-260:getBytesUtf8"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "54-57:Base16InputStream2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testReadNull_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "334-336:testReadNull_test0_decomposed": {
                    "start": 334,
                    "end": 336,
                    "body": [
                        "    public void testReadNull_test0_decomposed() throws IOException {\n",
                        "        final byte[] decoded = StringUtils.getBytesUtf8(STRING_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testReadNull_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "258-260:getBytesUtf8"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testReadNull_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "322-331:testRead0_test1_decomposed": {
                    "start": 322,
                    "end": 331,
                    "body": [
                        "    public void testRead0_test1_decomposed() throws IOException {\n",
                        "        final byte[] decoded = StringUtils.getBytesUtf8(STRING_FIXTURE);\n",
                        "        final byte[] buf = new byte[1024];\n",
                        "        int bytesRead = 0;\n",
                        "        final ByteArrayInputStream bin = new ByteArrayInputStream(decoded);\n",
                        "        try (final Base16InputStream in = Base16InputStream.Base16InputStream2(bin, true)) {\n",
                        "            bytesRead = in.read1(buf, 0, 0);\n",
                        "            assertEquals(\"Base16InputStream.read(buf, 0, 0) returns 0\", 0, bytesRead);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testRead0_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "258-260:getBytesUtf8"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "54-57:Base16InputStream2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,long,long)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testRead0_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "317-319:testRead0_test0_decomposed": {
                    "start": 317,
                    "end": 319,
                    "body": [
                        "    public void testRead0_test0_decomposed() throws IOException {\n",
                        "        final byte[] decoded = StringUtils.getBytesUtf8(STRING_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testRead0_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "258-260:getBytesUtf8"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testRead0_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "308-314:testMarkSupported_test1_decomposed": {
                    "start": 308,
                    "end": 314,
                    "body": [
                        "    public void testMarkSupported_test1_decomposed() throws IOException {\n",
                        "        final byte[] decoded = StringUtils.getBytesUtf8(STRING_FIXTURE);\n",
                        "        final ByteArrayInputStream bin = new ByteArrayInputStream(decoded);\n",
                        "        try (final Base16InputStream in = Base16InputStream.Base16InputStream2(bin, true)) {\n",
                        "            assertFalse(\"Base16InputStream.markSupported() is false\", in.markSupported());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testMarkSupported_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "258-260:getBytesUtf8"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "54-57:Base16InputStream2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "99-101:markSupported"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testMarkSupported_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "303-305:testMarkSupported_test0_decomposed": {
                    "start": 303,
                    "end": 305,
                    "body": [
                        "    public void testMarkSupported_test0_decomposed() throws IOException {\n",
                        "        final byte[] decoded = StringUtils.getBytesUtf8(STRING_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testMarkSupported_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "258-260:getBytesUtf8"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testMarkSupported_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "295-300:testBase16EmptyInputStream_test1_decomposed": {
                    "start": 295,
                    "end": 300,
                    "body": [
                        "    public void testBase16EmptyInputStream_test1_decomposed() throws IOException {\n",
                        "        final byte[] emptyEncoded = {};\n",
                        "        final byte[] emptyDecoded = {};\n",
                        "        testByteByByte0(emptyEncoded, emptyDecoded);\n",
                        "        testByChunk0(emptyEncoded, emptyDecoded);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBase16EmptyInputStream_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.Base16InputStreamTest",
                            "Base16InputStreamTest",
                            "142-144:testByteByByte0"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.Base16InputStreamTest",
                            "Base16InputStreamTest",
                            "78-80:testByChunk0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testBase16EmptyInputStream_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "288-292:testBase16EmptyInputStream_test0_decomposed": {
                    "start": 288,
                    "end": 292,
                    "body": [
                        "    public void testBase16EmptyInputStream_test0_decomposed() throws IOException {\n",
                        "        final byte[] emptyEncoded = {};\n",
                        "        final byte[] emptyDecoded = {};\n",
                        "        testByteByByte0(emptyEncoded, emptyDecoded);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBase16EmptyInputStream_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.Base16InputStreamTest",
                            "Base16InputStreamTest",
                            "142-144:testByteByByte0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testBase16EmptyInputStream_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "274-285:testAvailable_test1_decomposed": {
                    "start": 274,
                    "end": 285,
                    "body": [
                        "    public void testAvailable_test1_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "        try (final Base16InputStream b16Stream = Base16InputStream.Base16InputStream3(ins)) {\n",
                        "            assertEquals(1, b16Stream.available());\n",
                        "            assertEquals(6, b16Stream.skip(10));\n",
                        "            assertEquals(0, b16Stream.available());\n",
                        "            assertEquals(-1, b16Stream.read0());\n",
                        "            assertEquals(-1, b16Stream.read0());\n",
                        "            assertEquals(0, b16Stream.available());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testAvailable_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "59-61:Base16InputStream3"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "61-64:available"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "109-119:read0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testAvailable_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "268-271:testAvailable_test0_decomposed": {
                    "start": 268,
                    "end": 271,
                    "body": [
                        "    public void testAvailable_test0_decomposed() throws IOException {\n",
                        "        final InputStream ins =\n",
                        "                new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B16));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testAvailable_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testAvailable_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "158-203:testByteByByte1": {
                    "start": 158,
                    "end": 203,
                    "body": [
                        "    private void testByteByByte1(\n",
                        "            final byte[] encoded, final byte[] decoded, final boolean lowerCase)\n",
                        "            throws IOException {\n",
                        "\n",
                        "        try (final InputStream in =\n",
                        "                Base16InputStream.Base16InputStream1(\n",
                        "                        new ByteArrayInputStream(decoded), true, lowerCase)) {\n",
                        "            final byte[] output = new byte[encoded.length];\n",
                        "            for (int i = 0; i < output.length; i++) {\n",
                        "                output[i] = (byte) in.read();\n",
                        "            }\n",
                        "\n",
                        "            assertEquals(\"EOF\", -1, in.read());\n",
                        "            assertEquals(\"Still EOF\", -1, in.read());\n",
                        "            assertArrayEquals(\"Streaming Base16 encode\", encoded, output);\n",
                        "        }\n",
                        "\n",
                        "        try (final InputStream in =\n",
                        "                Base16InputStream.Base16InputStream1(\n",
                        "                        new ByteArrayInputStream(encoded), false, lowerCase)) {\n",
                        "            final byte[] output = new byte[decoded.length];\n",
                        "            for (int i = 0; i < output.length; i++) {\n",
                        "                output[i] = (byte) in.read();\n",
                        "            }\n",
                        "\n",
                        "            assertEquals(\"EOF\", -1, in.read());\n",
                        "            assertEquals(\"Still EOF\", -1, in.read());\n",
                        "            assertArrayEquals(\"Streaming Base16 decode\", decoded, output);\n",
                        "        }\n",
                        "\n",
                        "        try (final InputStream in = new ByteArrayInputStream(decoded);\n",
                        "                final InputStream inEncode =\n",
                        "                        Base16InputStream.Base16InputStream1(in, true, lowerCase);\n",
                        "                final InputStream inDecode =\n",
                        "                        Base16InputStream.Base16InputStream1(inEncode, false, lowerCase)) {\n",
                        "\n",
                        "            final byte[] output = new byte[decoded.length];\n",
                        "            for (int i = 0; i < output.length; i++) {\n",
                        "                output[i] = (byte) inDecode.read();\n",
                        "            }\n",
                        "\n",
                        "            assertEquals(\"EOF\", -1, inDecode.read());\n",
                        "            assertEquals(\"Still EOF\", -1, inDecode.read());\n",
                        "            assertArrayEquals(\"Streaming Base16 wrap-wrap!\", decoded, output);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testByteByByte1(byte[], byte[], boolean)",
                    "parameters": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "49-52:Base16InputStream1"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "read()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,long,long)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(java.lang.String,byte[],byte[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __testByteByByte1(self, encoded: typing.List[int], decoded: typing.List[int], lowerCase: bool) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "142-144:testByteByByte0": {
                    "start": 142,
                    "end": 144,
                    "body": [
                        "    private void testByteByByte0(final byte[] encoded, final byte[] decoded) throws IOException {\n",
                        "        testByteByByte1(encoded, decoded, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testByteByByte0(byte[], byte[])",
                    "parameters": [
                        "encoded",
                        "decoded"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.Base16InputStreamTest",
                            "Base16InputStreamTest",
                            "158-203:testByteByByte1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __testByteByByte0(self, encoded: typing.List[int], decoded: typing.List[int]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "94-129:testByChunk1": {
                    "start": 94,
                    "end": 129,
                    "body": [
                        "    private void testByChunk1(final byte[] encoded, final byte[] decoded, final boolean lowerCase)\n",
                        "            throws IOException {\n",
                        "\n",
                        "        try (final InputStream in =\n",
                        "                Base16InputStream.Base16InputStream1(\n",
                        "                        new ByteArrayInputStream(decoded), true, lowerCase)) {\n",
                        "            final byte[] output = BaseNTestData.streamToBytes0(in);\n",
                        "\n",
                        "            assertEquals(\"EOF\", -1, in.read());\n",
                        "            assertEquals(\"Still EOF\", -1, in.read());\n",
                        "            assertArrayEquals(\"Streaming Base16 encode\", encoded, output);\n",
                        "        }\n",
                        "\n",
                        "        try (final InputStream in =\n",
                        "                Base16InputStream.Base16InputStream1(\n",
                        "                        new ByteArrayInputStream(encoded), false, lowerCase)) {\n",
                        "            final byte[] output = BaseNTestData.streamToBytes0(in);\n",
                        "\n",
                        "            assertEquals(\"EOF\", -1, in.read());\n",
                        "            assertEquals(\"Still EOF\", -1, in.read());\n",
                        "            assertArrayEquals(\"Streaming Base16 decode\", decoded, output);\n",
                        "        }\n",
                        "\n",
                        "        try (final InputStream in = new ByteArrayInputStream(decoded);\n",
                        "                final InputStream inEncode =\n",
                        "                        Base16InputStream.Base16InputStream1(in, true, lowerCase);\n",
                        "                final InputStream inDecode =\n",
                        "                        Base16InputStream.Base16InputStream1(inEncode, false, lowerCase)) {\n",
                        "\n",
                        "            final byte[] output = BaseNTestData.streamToBytes0(inDecode);\n",
                        "\n",
                        "            assertEquals(\"EOF\", -1, inDecode.read());\n",
                        "            assertEquals(\"Still EOF\", -1, inDecode.read());\n",
                        "            assertArrayEquals(\"Streaming Base16 wrap-wrap!\", decoded, output);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testByChunk1(byte[], byte[], boolean)",
                    "parameters": [
                        "encoded",
                        "decoded",
                        "lowerCase"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16InputStream",
                            "Base16InputStream",
                            "49-52:Base16InputStream1"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream(byte[])"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.BaseNTestData",
                            "BaseNTestData",
                            "95-103:streamToBytes0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "read()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(java.lang.String,byte[],byte[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __testByChunk1(self, encoded: typing.List[int], decoded: typing.List[int], lowerCase: bool) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "78-80:testByChunk0": {
                    "start": 78,
                    "end": 80,
                    "body": [
                        "    private void testByChunk0(final byte[] encoded, final byte[] decoded) throws IOException {\n",
                        "        testByChunk1(encoded, decoded, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testByChunk0(byte[], byte[])",
                    "parameters": [
                        "encoded",
                        "decoded"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.Base16InputStreamTest",
                            "Base16InputStreamTest",
                            "94-129:testByChunk1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __testByChunk0(self, encoded: typing.List[int], decoded: typing.List[int]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "39-39:STRING_FIXTURE": {
                    "start": 39,
                    "end": 39,
                    "body": [
                        "    private static final String STRING_FIXTURE = \"Hello World\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __STRING_FIXTURE: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "37-37:ENCODED_B16": {
                    "start": 37,
                    "end": 37,
                    "body": [
                        "    private static final String ENCODED_B16 = \"CAFEBABEFFFF\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __ENCODED_B16: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class Base16InputStreamTest(unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import typing\nfrom typing import *",
        "import os",
        "import unittest",
        "from src.main.org.apache.commons.codec.binary.Base16InputStream import *",
        "from src.test.org.apache.commons.codec.binary.BaseNTestData import *",
        "from src.main.org.apache.commons.codec.binary.StringUtils import *"
    ]
}