{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-fileupload/src/main/java/org/apache/commons/fileupload/util/LimitedInputStream.java",
    "imports": {
        "20-20:import IOException": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "21-21:import InputStream": {
            "start": 21,
            "end": 21,
            "body": [
                "import java.io.InputStream;\n"
            ]
        },
        "19-19:import FilterInputStream": {
            "start": 19,
            "end": 19,
            "body": [
                "import java.io.FilterInputStream;\n"
            ]
        }
    },
    "classes": {
        "LimitedInputStream": {
            "start": 27,
            "end": 27,
            "is_abstract": true,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "Closeable",
                "FilterInputStream"
            ],
            "methods": {
                "138-141:close": {
                    "start": 138,
                    "end": 141,
                    "body": [
                        "    public void close() throws IOException {\n",
                        "        closed = true;\n",
                        "        super.close();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "close()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/FilterInputStream",
                            "close()"
                        ]
                    ]
                },
                "126-128:isClosed": {
                    "start": 126,
                    "end": 128,
                    "body": [
                        "    public boolean isClosed() throws IOException {\n",
                        "        return closed;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isClosed()",
                    "parameters": [],
                    "calls": []
                },
                "110-117:read1": {
                    "start": 110,
                    "end": 117,
                    "body": [
                        "    public int read1(byte[] b, int off, int len) throws IOException {\n",
                        "        int res = super.read(b, off, len);\n",
                        "        if (res > 0) {\n",
                        "            count += res;\n",
                        "            checkLimit();\n",
                        "        }\n",
                        "        return res;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "read1(byte[], int, int)",
                    "parameters": [
                        "b",
                        "off",
                        "len"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/FilterInputStream",
                            "read(byte[],int,int)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.LimitedInputStream",
                            "LimitedInputStream",
                            "64-68:checkLimit"
                        ]
                    ]
                },
                "83-90:read0": {
                    "start": 83,
                    "end": 90,
                    "body": [
                        "    public int read0() throws IOException {\n",
                        "        int res = super.read();\n",
                        "        if (res != -1) {\n",
                        "            count++;\n",
                        "            checkLimit();\n",
                        "        }\n",
                        "        return res;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "read0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/FilterInputStream",
                            "read()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.LimitedInputStream",
                            "LimitedInputStream",
                            "64-68:checkLimit"
                        ]
                    ]
                },
                "45-48:LimitedInputStream": {
                    "start": 45,
                    "end": 48,
                    "body": [
                        "    public LimitedInputStream(InputStream inputStream, long pSizeMax) {\n",
                        "        super(inputStream);\n",
                        "        sizeMax = pSizeMax;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "LimitedInputStream(InputStream, long)",
                    "parameters": [
                        "inputStream",
                        "pSizeMax"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/FilterInputStream",
                            "FilterInputStream(java.io.InputStream)"
                        ]
                    ]
                },
                "64-68:checkLimit": {
                    "start": 64,
                    "end": 68,
                    "body": [
                        "    private void checkLimit() throws IOException {\n",
                        "        if (count > sizeMax) {\n",
                        "            raiseError(sizeMax, count);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkLimit()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.LimitedInputStream",
                            "LimitedInputStream",
                            "57-57:raiseError"
                        ]
                    ]
                },
                "57-57:raiseError": {
                    "start": 57,
                    "end": 57,
                    "body": [
                        "    protected abstract void raiseError(long pSizeMax, long pCount) throws IOException;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "raiseError(long, long)",
                    "parameters": [
                        "pSizeMax",
                        "pCount"
                    ],
                    "calls": []
                }
            },
            "fields": {
                "36-36:closed": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    private boolean closed;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ]
                },
                "33-33:count": {
                    "start": 33,
                    "end": 33,
                    "body": [
                        "    private long count;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                },
                "30-30:sizeMax": {
                    "start": 30,
                    "end": 30,
                    "body": [
                        "    private final long sizeMax;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                }
            }
        }
    }
}