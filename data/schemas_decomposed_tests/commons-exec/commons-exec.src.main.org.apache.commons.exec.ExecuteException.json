{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-exec/src/main/java/org/apache/commons/exec/ExecuteException.java",
    "imports": {
        "20-20:import IOException": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.io.IOException;\n"
            ]
        }
    },
    "classes": {
        "ExecuteException": {
            "start": 25,
            "end": 25,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "IOException"
            ],
            "methods": {
                "65-67:getExitValue": {
                    "start": 65,
                    "end": 67,
                    "body": [
                        "    public int getExitValue() {\n",
                        "        return exitValue;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getExitValue()",
                    "parameters": [],
                    "calls": []
                },
                "55-58:ExecuteException": {
                    "start": 55,
                    "end": 58,
                    "body": [
                        "    public ExecuteException(final String message, final int exitValue, final Throwable cause) {\n",
                        "        super(message + \" (Exit value: \" + exitValue + \")\", cause);\n",
                        "        this.exitValue = exitValue;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ExecuteException(String, int, Throwable)",
                    "parameters": [
                        "message",
                        "exitValue",
                        "cause"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/IOException",
                            "IOException(java.lang.String,java.lang.Throwable)"
                        ]
                    ]
                }
            },
            "fields": {
                "35-35:exitValue": {
                    "start": 35,
                    "end": 35,
                    "body": [
                        "    private final int exitValue;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "30-30:serialVersionUID": {
                    "start": 30,
                    "end": 30,
                    "body": [
                        "    private static final long serialVersionUID = 3256443620654331699L;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                }
            }
        }
    }
}