{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/shortestpath/ShortestDistances.java",
    "imports": {
        "24-24:import Comparator": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.util.Comparator;\n"
            ]
        },
        "26-26:import Map": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "25-25:import HashMap": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.util.HashMap;\n"
            ]
        },
        "22-22:import OrderedMonoid": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.graph.weight.OrderedMonoid;\n"
            ]
        }
    },
    "classes": {
        "ShortestDistances": {
            "start": 34,
            "end": 34,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [
                "Comparator<V>"
            ],
            "extends": [],
            "methods": {
                "85-87:setWeight": {
                    "start": 85,
                    "end": 87,
                    "body": [
                        "    public void setWeight(V vertex, W distance) {\n",
                        "        distances.put(vertex, distance);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setWeight(V, W)",
                    "parameters": [
                        "vertex",
                        "distance"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "75-77:getWeight": {
                    "start": 75,
                    "end": 77,
                    "body": [
                        "    public W getWeight(V vertex) {\n",
                        "        return distances.get(vertex);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "W",
                            "W"
                        ]
                    ],
                    "signature": "getWeight(V)",
                    "parameters": [
                        "vertex"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "55-64:compare": {
                    "start": 55,
                    "end": 64,
                    "body": [
                        "    public int compare(V left, V right) {\n",
                        "        if (!alreadyVisited(left) && !alreadyVisited(right)) {\n",
                        "            return 0;\n",
                        "        } else if (!alreadyVisited(left)) {\n",
                        "            return 1;\n",
                        "        } else if (!alreadyVisited(right)) {\n",
                        "            return -1;\n",
                        "        }\n",
                        "        return weightOperations.compare(getWeight(left), getWeight(right));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "compare(V, V)",
                    "parameters": [
                        "left",
                        "right"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.shortestpath.ShortestDistances",
                            "ShortestDistances",
                            "50-52:alreadyVisited"
                        ],
                        [
                            "library",
                            "java.base/java/util/Comparator",
                            "compare(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.shortestpath.ShortestDistances",
                            "ShortestDistances",
                            "75-77:getWeight"
                        ]
                    ]
                },
                "50-52:alreadyVisited": {
                    "start": 50,
                    "end": 52,
                    "body": [
                        "    public boolean alreadyVisited(V vertex) {\n",
                        "        return distances.containsKey(vertex);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "alreadyVisited(V)",
                    "parameters": [
                        "vertex"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Map",
                            "containsKey(java.lang.Object)"
                        ]
                    ]
                },
                "40-42:ShortestDistances": {
                    "start": 40,
                    "end": 42,
                    "body": [
                        "    public ShortestDistances(OrderedMonoid<W> weightOperations) {\n",
                        "        this.weightOperations = weightOperations;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ShortestDistances(OrderedMonoid<W>)",
                    "parameters": [
                        "weightOperations"
                    ],
                    "calls": []
                }
            },
            "fields": {
                "38-38:weightOperations": {
                    "start": 38,
                    "end": 38,
                    "body": [
                        "    private final OrderedMonoid<W> weightOperations;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "OrderedMonoid<W>",
                            "OrderedMonoid<W>"
                        ]
                    ]
                },
                "36-36:distances": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    private final Map<V, W> distances = new HashMap<V, W>();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Map<V,W>",
                            "java.util.Map<V,W>"
                        ]
                    ]
                }
            }
        }
    }
}