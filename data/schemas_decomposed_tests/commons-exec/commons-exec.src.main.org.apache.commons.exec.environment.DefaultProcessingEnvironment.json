{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-exec/src/main/java/org/apache/commons/exec/environment/DefaultProcessingEnvironment.java",
    "imports": {
        "20-20:import BufferedReader": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.io.BufferedReader;\n"
            ]
        },
        "21-21:import IOException": {
            "start": 21,
            "end": 21,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "23-23:import Map": {
            "start": 23,
            "end": 23,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "22-22:import HashMap": {
            "start": 22,
            "end": 22,
            "body": [
                "import java.util.HashMap;\n"
            ]
        },
        "24-24:import TreeMap": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.util.TreeMap;\n"
            ]
        },
        "26-26:import CommandLine": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.exec.CommandLine;\n"
            ]
        },
        "27-27:import OS": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.apache.commons.exec.OS;\n"
            ]
        }
    },
    "classes": {
        "DefaultProcessingEnvironment": {
            "start": 33,
            "end": 33,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "new Comparator<String>(...) { ... }"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "143-151:runProcEnvCommand": {
                    "start": 143,
                    "end": 151,
                    "body": [
                        "    protected BufferedReader runProcEnvCommand() throws IOException {\n",
                        "//        final ByteArrayOutputStream out = new ByteArrayOutputStream();\n",
                        "//        final Executor exe = DefaultExecutor.builder().get();\n",
                        "//        exe.setStreamHandler(new PumpStreamHandler(out));\n",
                        "//        // ignore the exit value - Just try to use what we got\n",
                        "//        exe.execute(getProcEnvCommand());\n",
                        "//        return new BufferedReader(new StringReader(toString(out)));\n",
                        "        return null;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "BufferedReader",
                            "java.io.BufferedReader"
                        ]
                    ],
                    "signature": "runProcEnvCommand()",
                    "parameters": [],
                    "calls": []
                },
                "71-115:getProcEnvCommand": {
                    "start": 71,
                    "end": 115,
                    "body": [
                        "    protected CommandLine getProcEnvCommand() {\n",
                        "//        String executable;\n",
                        "//        String[] arguments = null;\n",
                        "//        if (OS.isFamilyOS2()) {\n",
                        "//            // OS/2 - use same mechanism as Windows 2000\n",
                        "//            executable = \"cmd\";\n",
                        "//\n",
                        "//            arguments = new String[] {\"/c\", \"set\"};\n",
                        "//        } else if (OS.isFamilyWindows()) {\n",
                        "//            // Determine if we're running under XP/2000/NT or 98/95\n",
                        "//            if (OS.isFamilyWin9x()) {\n",
                        "//                executable = \"command.com\";\n",
                        "//                // Windows 98/95\n",
                        "//            } else {\n",
                        "//                executable = \"cmd\";\n",
                        "//                // Windows XP/2000/NT/2003\n",
                        "//            }\n",
                        "//            arguments = new String[] {\"/c\", \"set\"};\n",
                        "//        } else if (OS.isFamilyZOS() || OS.isFamilyUnix()) {\n",
                        "//            // On most systems one could use: /bin/sh -c env\n",
                        "//\n",
                        "//            // Some systems have /bin/env, others /usr/bin/env, just try\n",
                        "//            if (new File(\"/bin/env\").canRead()) {\n",
                        "//                executable = \"/bin/env\";\n",
                        "//            } else if (new File(\"/usr/bin/env\").canRead()) {\n",
                        "//                executable = \"/usr/bin/env\";\n",
                        "//            } else {\n",
                        "//                // rely on PATH\n",
                        "//                executable = \"env\";\n",
                        "//            }\n",
                        "//        } else if (OS.isFamilyNetware() || OS.isFamilyOS400()) {\n",
                        "//            // rely on PATH\n",
                        "//            executable = \"env\";\n",
                        "//        } else {\n",
                        "//            // macOS 9 and previous\n",
                        "//            // TODO: I have no idea how to get it, someone must fix it\n",
                        "//            executable = null;\n",
                        "//        }\n",
                        "        final CommandLine commandLine = null;\n",
                        "//        if (executable != null) {\n",
                        "//            commandLine = new CommandLine(executable);\n",
                        "//            commandLine.addArguments(arguments);\n",
                        "//        }\n",
                        "        return commandLine;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "CommandLine",
                            "CommandLine"
                        ]
                    ],
                    "signature": "getProcEnvCommand()",
                    "parameters": [],
                    "calls": []
                },
                "123-133:getProcEnvironment": {
                    "start": 123,
                    "end": 133,
                    "body": [
                        "    public synchronized Map<String, String> getProcEnvironment() throws IOException {\n",
                        "        if (procEnvironment == null) {\n",
                        "            procEnvironment = this.createProcEnvironment();\n",
                        "        }\n",
                        "        // create a copy of the map just in case that\n",
                        "        // anyone is going to modifiy it, e.g. removing\n",
                        "        // or setting an evironment variable\n",
                        "        final Map<String, String> copy = createEnvironmentMap();\n",
                        "        copy.putAll(procEnvironment);\n",
                        "        return copy;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "synchronized"
                    ],
                    "return_types": [
                        [
                            "Map<String,String>",
                            "java.util.Map<String,String>"
                        ]
                    ],
                    "signature": "getProcEnvironment()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-exec.src.main.org.apache.commons.exec.environment.DefaultProcessingEnvironment",
                            "DefaultProcessingEnvironment",
                            "43-48:createEnvironmentMap"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.environment.DefaultProcessingEnvironment",
                            "DefaultProcessingEnvironment",
                            "56-62:createProcEnvironment"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "putAll(java.util.Map)"
                        ]
                    ]
                },
                "56-62:createProcEnvironment": {
                    "start": 56,
                    "end": 62,
                    "body": [
                        "    protected Map<String, String> createProcEnvironment() throws IOException {\n",
                        "        if (procEnvironment == null) {\n",
                        "            procEnvironment = createEnvironmentMap();\n",
                        "            procEnvironment.putAll(System.getenv());\n",
                        "        }\n",
                        "        return procEnvironment;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "Map<String,String>",
                            "java.util.Map<String,String>"
                        ]
                    ],
                    "signature": "createProcEnvironment()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-exec.src.main.org.apache.commons.exec.environment.DefaultProcessingEnvironment",
                            "DefaultProcessingEnvironment",
                            "43-48:createEnvironmentMap"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "putAll(java.util.Map)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/System",
                            "getenv()"
                        ]
                    ]
                },
                "43-48:createEnvironmentMap": {
                    "start": 43,
                    "end": 48,
                    "body": [
                        "    private Map<String, String> createEnvironmentMap() {\n",
                        "        if (OS.isFamilyWindows()) {\n",
                        "            return new TreeMap<>(String::compareToIgnoreCase);\n",
                        "        }\n",
                        "        return new HashMap<>();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "Map<String,String>",
                            "java.util.Map<String,String>"
                        ]
                    ],
                    "signature": "createEnvironmentMap()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-exec.src.main.org.apache.commons.exec.OS",
                            "OS",
                            "191-193:isFamilyWindows"
                        ],
                        [
                            "library",
                            "java.base/java/util/TreeMap",
                            "TreeMap<String,String>(java.util.Comparator)"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashMap",
                            "HashMap<String,String>()"
                        ]
                    ]
                }
            },
            "fields": {
                "36-36:procEnvironment": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    protected Map<String, String> procEnvironment;\n"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "types": [
                        [
                            "Map<String,String>",
                            "java.util.Map<String,String>"
                        ]
                    ]
                }
            }
        },
        "new Comparator<String>(...) { ... }": {
            "start": 45,
            "end": 45,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "DefaultProcessingEnvironment",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "45-45:compare": {
                    "start": 45,
                    "end": 45,
                    "body": [
                        "            return new TreeMap<>(String::compareToIgnoreCase);\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "compare(String, String)",
                    "parameters": [
                        "arg0",
                        "p0"
                    ],
                    "calls": []
                }
            },
            "fields": {}
        }
    }
}