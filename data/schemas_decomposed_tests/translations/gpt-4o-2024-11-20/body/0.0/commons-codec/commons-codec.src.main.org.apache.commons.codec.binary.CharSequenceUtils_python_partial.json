{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java",
    "imports": {},
    "classes": {
        "CharSequenceUtils": {
            "start": 27,
            "end": 27,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "43-77:regionMatches": {
                    "start": 43,
                    "end": 77,
                    "body": [
                        "    static boolean regionMatches(\n",
                        "            final CharSequence cs,\n",
                        "            final boolean ignoreCase,\n",
                        "            final int thisStart,\n",
                        "            final CharSequence substring,\n",
                        "            final int start,\n",
                        "            final int length) {\n",
                        "        if (cs instanceof String && substring instanceof String) {\n",
                        "            return ((String) cs)\n",
                        "                    .regionMatches(ignoreCase, thisStart, (String) substring, start, length);\n",
                        "        }\n",
                        "        int index1 = thisStart;\n",
                        "        int index2 = start;\n",
                        "        int tmpLen = length;\n",
                        "\n",
                        "        while (tmpLen-- > 0) {\n",
                        "            final char c1 = cs.charAt(index1++);\n",
                        "            final char c2 = substring.charAt(index2++);\n",
                        "\n",
                        "            if (c1 == c2) {\n",
                        "                continue;\n",
                        "            }\n",
                        "\n",
                        "            if (!ignoreCase) {\n",
                        "                return false;\n",
                        "            }\n",
                        "\n",
                        "            if (Character.toUpperCase(c1) != Character.toUpperCase(c2)\n",
                        "                    && Character.toLowerCase(c1) != Character.toLowerCase(c2)) {\n",
                        "                return false;\n",
                        "            }\n",
                        "        }\n",
                        "\n",
                        "        return true;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "regionMatches(CharSequence, boolean, int, CharSequence, int, int)",
                    "parameters": [
                        "cs",
                        "ignoreCase",
                        "thisStart",
                        "substring",
                        "start",
                        "length"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "regionMatches(boolean,int,java.lang.String,int,int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "toUpperCase(char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "toLowerCase(char)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def regionMatches(cs: str, ignoreCase: bool, thisStart: int, substring: str, start: int, length: int) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class CharSequenceUtils:\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import io"
    ]
}