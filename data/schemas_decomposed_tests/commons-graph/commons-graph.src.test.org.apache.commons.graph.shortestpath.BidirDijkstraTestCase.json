{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/test/java/org/apache/commons/graph/shortestpath/BidirDijkstraTestCase.java",
    "imports": {
        "47-47:import Random": {
            "start": 47,
            "end": 47,
            "body": [
                "import java.util.Random;\n"
            ]
        },
        "46-46:import List": {
            "start": 46,
            "end": 46,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "45-45:import ArrayList": {
            "start": 45,
            "end": 45,
            "body": [
                "import java.util.ArrayList;\n"
            ]
        },
        "29-29:import Graph": {
            "start": 29,
            "end": 29,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "39-39:import UndirectedMutableGraph": {
            "start": 39,
            "end": 39,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "37-37:import DirectedMutableGraph": {
            "start": 37,
            "end": 37,
            "body": [
                "import org.apache.commons.graph.model.DirectedMutableGraph;\n"
            ]
        },
        "30-30:import GraphException": {
            "start": 30,
            "end": 30,
            "body": [
                "import org.apache.commons.graph.GraphException;\n"
            ]
        },
        "31-31:import Path": {
            "start": 31,
            "end": 31,
            "body": [
                "import org.apache.commons.graph.Path;\n"
            ]
        },
        "32-32:import WeightedPath": {
            "start": 32,
            "end": 32,
            "body": [
                "import org.apache.commons.graph.WeightedPath;\n"
            ]
        },
        "33-33:import AbstractGraphConnection": {
            "start": 33,
            "end": 33,
            "body": [
                "import org.apache.commons.graph.builder.AbstractGraphConnection;\n"
            ]
        },
        "43-43:import Test": {
            "start": 43,
            "end": 43,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "35-35:import BaseLabeledWeightedEdge": {
            "start": 35,
            "end": 35,
            "body": [
                "import org.apache.commons.graph.model.BaseLabeledWeightedEdge;\n"
            ]
        },
        "34-34:import BaseLabeledVertex": {
            "start": 34,
            "end": 34,
            "body": [
                "import org.apache.commons.graph.model.BaseLabeledVertex;\n"
            ]
        },
        "40-40:import OrderedMonoid": {
            "start": 40,
            "end": 40,
            "body": [
                "import org.apache.commons.graph.weight.OrderedMonoid;\n"
            ]
        },
        "36-36:import BaseWeightedEdge": {
            "start": 36,
            "end": 36,
            "body": [
                "import org.apache.commons.graph.model.BaseWeightedEdge;\n"
            ]
        },
        "38-38:import InMemoryWeightedPath": {
            "start": 38,
            "end": 38,
            "body": [
                "import org.apache.commons.graph.model.InMemoryWeightedPath;\n"
            ]
        },
        "42-42:import BeforeClass": {
            "start": 42,
            "end": 42,
            "body": [
                "import org.junit.BeforeClass;\n"
            ]
        },
        "41-41:import DoubleWeightBaseOperations": {
            "start": 41,
            "end": 41,
            "body": [
                "import org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations;\n"
            ]
        },
        "26-26:import static String.format": {
            "start": 26,
            "end": 26,
            "body": [
                "import static java.lang.String.format;\n"
            ]
        },
        "27-27:import static String.valueOf": {
            "start": 27,
            "end": 27,
            "body": [
                "import static java.lang.String.valueOf;\n"
            ]
        },
        "24-24:import static Assert.assertEquals": {
            "start": 24,
            "end": 24,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        },
        "23-23:import static CommonsGraph.newDirectedMutableGraph": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.apache.commons.graph.CommonsGraph.newDirectedMutableGraph;\n"
            ]
        },
        "22-22:import static CommonsGraph.findShortestPath": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.CommonsGraph.findShortestPath;\n"
            ]
        }
    },
    "classes": {
        "BidirDijkstraTestCase": {
            "start": 49,
            "end": 49,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>(...) { ... }"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "1242-1266:testVerifyTwoNodePath_test10_decomposed": {
                    "start": 1242,
                    "end": 1266,
                    "body": [
                        "    public void testVerifyTwoNodePath_test10_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one, two, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one).to(two);\n",
                        "        Path<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                findShortestPath(graph)\n",
                        "                        .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                        .from(one)\n",
                        "                        .to(two)\n",
                        "                        .applyingBidirectionalDijkstra(new DoubleWeightBaseOperations());\n",
                        "        assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "1216-1239:testVerifyTwoNodePath_test9_decomposed": {
                    "start": 1216,
                    "end": 1239,
                    "body": [
                        "    public void testVerifyTwoNodePath_test9_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one, two, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one).to(two);\n",
                        "        Path<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                findShortestPath(graph)\n",
                        "                        .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                        .from(one)\n",
                        "                        .to(two)\n",
                        "                        .applyingBidirectionalDijkstra(new DoubleWeightBaseOperations());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "1196-1213:testVerifyTwoNodePath_test8_decomposed": {
                    "start": 1196,
                    "end": 1213,
                    "body": [
                        "    public void testVerifyTwoNodePath_test8_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one, two, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one).to(two);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "1177-1193:testVerifyTwoNodePath_test7_decomposed": {
                    "start": 1177,
                    "end": 1193,
                    "body": [
                        "    public void testVerifyTwoNodePath_test7_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one, two, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "1159-1174:testVerifyTwoNodePath_test6_decomposed": {
                    "start": 1159,
                    "end": 1174,
                    "body": [
                        "    public void testVerifyTwoNodePath_test6_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one, two, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ]
                    ]
                },
                "1142-1156:testVerifyTwoNodePath_test5_decomposed": {
                    "start": 1142,
                    "end": 1156,
                    "body": [
                        "    public void testVerifyTwoNodePath_test5_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one, two, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        findShortestPath(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ]
                },
                "1126-1139:testVerifyTwoNodePath_test4_decomposed": {
                    "start": 1126,
                    "end": 1139,
                    "body": [
                        "    public void testVerifyTwoNodePath_test4_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one, two, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "1115-1123:testVerifyTwoNodePath_test3_decomposed": {
                    "start": 1115,
                    "end": 1123,
                    "body": [
                        "    public void testVerifyTwoNodePath_test3_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 14D), two);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ]
                    ]
                },
                "1105-1112:testVerifyTwoNodePath_test2_decomposed": {
                    "start": 1105,
                    "end": 1112,
                    "body": [
                        "    public void testVerifyTwoNodePath_test2_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "1097-1102:testVerifyTwoNodePath_test1_decomposed": {
                    "start": 1097,
                    "end": 1102,
                    "body": [
                        "    public void testVerifyTwoNodePath_test1_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "1090-1094:testVerifyTwoNodePath_test0_decomposed": {
                    "start": 1090,
                    "end": 1094,
                    "body": [
                        "    public void testVerifyTwoNodePath_test0_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyTwoNodePath_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "1059-1087:testVerifyThreeNodePath_test12_decomposed": {
                    "start": 1059,
                    "end": 1087,
                    "body": [
                        "    public void testVerifyThreeNodePath_test12_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        graph.addVertex(c);\n",
                        "        graph.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        graph.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        a, c, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        expected.addConnectionInTail(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(c);\n",
                        "        Path<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                findShortestPath(graph)\n",
                        "                        .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                        .from(a)\n",
                        "                        .to(c)\n",
                        "                        .applyingBidirectionalDijkstra(new DoubleWeightBaseOperations());\n",
                        "        assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test12_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "1029-1056:testVerifyThreeNodePath_test11_decomposed": {
                    "start": 1029,
                    "end": 1056,
                    "body": [
                        "    public void testVerifyThreeNodePath_test11_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        graph.addVertex(c);\n",
                        "        graph.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        graph.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        a, c, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        expected.addConnectionInTail(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(c);\n",
                        "        Path<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                findShortestPath(graph)\n",
                        "                        .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                        .from(a)\n",
                        "                        .to(c)\n",
                        "                        .applyingBidirectionalDijkstra(new DoubleWeightBaseOperations());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "1005-1026:testVerifyThreeNodePath_test10_decomposed": {
                    "start": 1005,
                    "end": 1026,
                    "body": [
                        "    public void testVerifyThreeNodePath_test10_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        graph.addVertex(c);\n",
                        "        graph.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        graph.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        a, c, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        expected.addConnectionInTail(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(c);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "982-1002:testVerifyThreeNodePath_test9_decomposed": {
                    "start": 982,
                    "end": 1002,
                    "body": [
                        "    public void testVerifyThreeNodePath_test9_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        graph.addVertex(c);\n",
                        "        graph.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        graph.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        a, c, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        expected.addConnectionInTail(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "960-979:testVerifyThreeNodePath_test8_decomposed": {
                    "start": 960,
                    "end": 979,
                    "body": [
                        "    public void testVerifyThreeNodePath_test8_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        graph.addVertex(c);\n",
                        "        graph.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        graph.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        a, c, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        expected.addConnectionInTail(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ]
                    ]
                },
                "939-957:testVerifyThreeNodePath_test7_decomposed": {
                    "start": 939,
                    "end": 957,
                    "body": [
                        "    public void testVerifyThreeNodePath_test7_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        graph.addVertex(c);\n",
                        "        graph.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        graph.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        a, c, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        expected.addConnectionInTail(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        findShortestPath(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ]
                },
                "919-936:testVerifyThreeNodePath_test6_decomposed": {
                    "start": 919,
                    "end": 936,
                    "body": [
                        "    public void testVerifyThreeNodePath_test6_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        graph.addVertex(c);\n",
                        "        graph.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        graph.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        a, c, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        expected.addConnectionInTail(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "900-916:testVerifyThreeNodePath_test5_decomposed": {
                    "start": 900,
                    "end": 916,
                    "body": [
                        "    public void testVerifyThreeNodePath_test5_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        graph.addVertex(c);\n",
                        "        graph.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        graph.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        a, c, new DoubleWeightBaseOperations(), new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "886-897:testVerifyThreeNodePath_test4_decomposed": {
                    "start": 886,
                    "end": 897,
                    "body": [
                        "    public void testVerifyThreeNodePath_test4_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        graph.addVertex(c);\n",
                        "        graph.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a -> b\", 14D), b);\n",
                        "        graph.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b -> c\", 10D), c);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ]
                    ]
                },
                "874-883:testVerifyThreeNodePath_test3_decomposed": {
                    "start": 874,
                    "end": 883,
                    "body": [
                        "    public void testVerifyThreeNodePath_test3_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        graph.addVertex(c);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "865-871:testVerifyThreeNodePath_test2_decomposed": {
                    "start": 865,
                    "end": 871,
                    "body": [
                        "    public void testVerifyThreeNodePath_test2_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "857-862:testVerifyThreeNodePath_test1_decomposed": {
                    "start": 857,
                    "end": 862,
                    "body": [
                        "    public void testVerifyThreeNodePath_test1_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "850-854:testVerifyThreeNodePath_test0_decomposed": {
                    "start": 850,
                    "end": 854,
                    "body": [
                        "    public void testVerifyThreeNodePath_test0_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyThreeNodePath_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "835-847:testNullVertices_test4_decomposed": {
                    "start": 835,
                    "end": 847,
                    "body": [
                        "    public void testNullVertices_test4_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null).to(null);\n",
                        "        findShortestPath(graph)\n",
                        "                .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                .from(null)\n",
                        "                .to(null)\n",
                        "                .applyingBidirectionalDijkstra(new DoubleWeightBaseOperations());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullVertices_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ]
                    ]
                },
                "825-832:testNullVertices_test3_decomposed": {
                    "start": 825,
                    "end": 832,
                    "body": [
                        "    public void testNullVertices_test3_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null).to(null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullVertices_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "816-822:testNullVertices_test2_decomposed": {
                    "start": 816,
                    "end": 822,
                    "body": [
                        "    public void testNullVertices_test2_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullVertices_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "808-813:testNullVertices_test1_decomposed": {
                    "start": 808,
                    "end": 813,
                    "body": [
                        "    public void testNullVertices_test1_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullVertices_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ]
                    ]
                },
                "801-805:testNullVertices_test0_decomposed": {
                    "start": 801,
                    "end": 805,
                    "body": [
                        "    public void testNullVertices_test0_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        findShortestPath(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullVertices_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ]
                },
                "782-798:testNullMonoid_test7_decomposed": {
                    "start": 782,
                    "end": 798,
                    "body": [
                        "    public void testNullMonoid_test7_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(b);\n",
                        "        findShortestPath(graph)\n",
                        "                .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                .from(a)\n",
                        "                .to(b)\n",
                        "                .applyingBidirectionalDijkstra(null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ]
                    ]
                },
                "768-779:testNullMonoid_test6_decomposed": {
                    "start": 768,
                    "end": 779,
                    "body": [
                        "    public void testNullMonoid_test6_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(b);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "755-765:testNullMonoid_test5_decomposed": {
                    "start": 755,
                    "end": 765,
                    "body": [
                        "    public void testNullMonoid_test5_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "743-752:testNullMonoid_test4_decomposed": {
                    "start": 743,
                    "end": 752,
                    "body": [
                        "    public void testNullMonoid_test4_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ]
                    ]
                },
                "732-740:testNullMonoid_test3_decomposed": {
                    "start": 732,
                    "end": 740,
                    "body": [
                        "    public void testNullMonoid_test3_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ]
                },
                "722-729:testNullMonoid_test2_decomposed": {
                    "start": 722,
                    "end": 729,
                    "body": [
                        "    public void testNullMonoid_test2_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "714-719:testNullMonoid_test1_decomposed": {
                    "start": 714,
                    "end": 719,
                    "body": [
                        "    public void testNullMonoid_test1_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "707-711:testNullMonoid_test0_decomposed": {
                    "start": 707,
                    "end": 711,
                    "body": [
                        "    public void testNullMonoid_test0_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullMonoid_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "694-704:testNullGraph_test4_decomposed": {
                    "start": 694,
                    "end": 704,
                    "body": [
                        "    public void testNullGraph_test4_decomposed()  {\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null).to(null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null)\n",
                        "                .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                .from(null)\n",
                        "                .to(null)\n",
                        "                .applyingBidirectionalDijkstra(new DoubleWeightBaseOperations());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullGraph_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ]
                    ]
                },
                "686-691:testNullGraph_test3_decomposed": {
                    "start": 686,
                    "end": 691,
                    "body": [
                        "    public void testNullGraph_test3_decomposed()  {\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null).to(null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullGraph_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "679-683:testNullGraph_test2_decomposed": {
                    "start": 679,
                    "end": 683,
                    "body": [
                        "    public void testNullGraph_test2_decomposed()  {\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullGraph_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "673-676:testNullGraph_test1_decomposed": {
                    "start": 673,
                    "end": 676,
                    "body": [
                        "    public void testNullGraph_test1_decomposed()  {\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null);\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullGraph_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ]
                    ]
                },
                "668-670:testNullGraph_test0_decomposed": {
                    "start": 668,
                    "end": 670,
                    "body": [
                        "    public void testNullGraph_test0_decomposed()  {\n",
                        "        findShortestPath((Graph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>) null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = NullPointerException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullGraph_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ]
                },
                "649-665:testNotConnectGraph_test7_decomposed": {
                    "start": 649,
                    "end": 665,
                    "body": [
                        "    public void testNotConnectGraph_test7_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(b);\n",
                        "        findShortestPath(graph)\n",
                        "                .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                .from(a)\n",
                        "                .to(b)\n",
                        "                .applyingBidirectionalDijkstra(new DoubleWeightBaseOperations());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = PathNotFoundException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ]
                    ]
                },
                "635-646:testNotConnectGraph_test6_decomposed": {
                    "start": 635,
                    "end": 646,
                    "body": [
                        "    public void testNotConnectGraph_test6_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a).to(b);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "622-632:testNotConnectGraph_test5_decomposed": {
                    "start": 622,
                    "end": 632,
                    "body": [
                        "    public void testNotConnectGraph_test5_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(a);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "610-619:testNotConnectGraph_test4_decomposed": {
                    "start": 610,
                    "end": 619,
                    "body": [
                        "    public void testNotConnectGraph_test4_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ]
                    ]
                },
                "599-607:testNotConnectGraph_test3_decomposed": {
                    "start": 599,
                    "end": 607,
                    "body": [
                        "    public void testNotConnectGraph_test3_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "        findShortestPath(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ]
                },
                "589-596:testNotConnectGraph_test2_decomposed": {
                    "start": 589,
                    "end": 596,
                    "body": [
                        "    public void testNotConnectGraph_test2_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        graph.addVertex(a);\n",
                        "        graph.addVertex(b);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "581-586:testNotConnectGraph_test1_decomposed": {
                    "start": 581,
                    "end": 586,
                    "body": [
                        "    public void testNotConnectGraph_test1_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        final BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "574-578:testNotConnectGraph_test0_decomposed": {
                    "start": 574,
                    "end": 578,
                    "body": [
                        "    public void testNotConnectGraph_test0_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        final BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotConnectGraph_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "526-571:testFindShortestPathAndVerify_test15_decomposed": {
                    "start": 526,
                    "end": 571,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test15_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one).to(five);\n",
                        "        Path<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                findShortestPath(graph)\n",
                        "                        .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                        .from(one)\n",
                        "                        .to(five)\n",
                        "                        .applyingBidirectionalDijkstra(new DoubleWeightBaseOperations());\n",
                        "        assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test15_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "479-523:testFindShortestPathAndVerify_test14_decomposed": {
                    "start": 479,
                    "end": 523,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test14_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one).to(five);\n",
                        "        Path<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                findShortestPath(graph)\n",
                        "                        .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                        .from(one)\n",
                        "                        .to(five)\n",
                        "                        .applyingBidirectionalDijkstra(new DoubleWeightBaseOperations());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test14_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "438-476:testFindShortestPathAndVerify_test13_decomposed": {
                    "start": 438,
                    "end": 476,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test13_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one).to(five);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test13_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "398-435:testFindShortestPathAndVerify_test12_decomposed": {
                    "start": 398,
                    "end": 435,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test12_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>()).from(one);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test12_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "359-395:testFindShortestPathAndVerify_test11_decomposed": {
                    "start": 359,
                    "end": 395,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test11_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "        findShortestPath(graph).whereEdgesHaveWeights(new BaseWeightedEdge<Double>());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ]
                    ]
                },
                "321-356:testFindShortestPathAndVerify_test10_decomposed": {
                    "start": 321,
                    "end": 356,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test10_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        findShortestPath(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ]
                    ]
                },
                "284-318:testFindShortestPathAndVerify_test9_decomposed": {
                    "start": 284,
                    "end": 318,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test9_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        expected.addConnectionInTail(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        expected.addConnectionInTail(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "249-281:testFindShortestPathAndVerify_test8_decomposed": {
                    "start": 249,
                    "end": 281,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test8_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "        InMemoryWeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> expected =\n",
                        "                new InMemoryWeightedPath<\n",
                        "                        BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double>(\n",
                        "                        one,\n",
                        "                        five,\n",
                        "                        new DoubleWeightBaseOperations(),\n",
                        "                        new BaseWeightedEdge<Double>());\n",
                        "        expected.addConnectionInTail(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.weight.Monoid,org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryWeightedPath",
                            "addConnectionInTail(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "222-246:testFindShortestPathAndVerify_test7_decomposed": {
                    "start": 222,
                    "end": 246,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test7_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 6\", 14D), six);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 3\", 9D), three);\n",
                        "        graph.addEdge(one, new BaseLabeledWeightedEdge<Double>(\"1 -> 2\", 7D), two);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 3\", 10D), three);\n",
                        "        graph.addEdge(two, new BaseLabeledWeightedEdge<Double>(\"2 -> 4\", 15D), four);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 6\", 2D), six);\n",
                        "        graph.addEdge(three, new BaseLabeledWeightedEdge<Double>(\"3 -> 4\", 11D), four);\n",
                        "        graph.addEdge(four, new BaseLabeledWeightedEdge<Double>(\"4 -> 5\", 6D), five);\n",
                        "        graph.addEdge(six, new BaseLabeledWeightedEdge<Double>(\"6 -> 5\", 9D), five);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ]
                    ]
                },
                "204-219:testFindShortestPathAndVerify_test6_decomposed": {
                    "start": 204,
                    "end": 219,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test6_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "        graph.addVertex(one);\n",
                        "        graph.addVertex(two);\n",
                        "        graph.addVertex(three);\n",
                        "        graph.addVertex(four);\n",
                        "        graph.addVertex(five);\n",
                        "        graph.addVertex(six);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "192-201:testFindShortestPathAndVerify_test5_decomposed": {
                    "start": 192,
                    "end": 201,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test5_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "        BaseLabeledVertex six = new BaseLabeledVertex(\"6\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "181-189:testFindShortestPathAndVerify_test4_decomposed": {
                    "start": 181,
                    "end": 189,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test4_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "        BaseLabeledVertex five = new BaseLabeledVertex(\"5\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "171-178:testFindShortestPathAndVerify_test3_decomposed": {
                    "start": 171,
                    "end": 178,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test3_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "        BaseLabeledVertex four = new BaseLabeledVertex(\"4\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "162-168:testFindShortestPathAndVerify_test2_decomposed": {
                    "start": 162,
                    "end": 168,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test2_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "        BaseLabeledVertex three = new BaseLabeledVertex(\"3\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "154-159:testFindShortestPathAndVerify_test1_decomposed": {
                    "start": 154,
                    "end": 159,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test1_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "        BaseLabeledVertex two = new BaseLabeledVertex(\"2\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "147-151:testFindShortestPathAndVerify_test0_decomposed": {
                    "start": 147,
                    "end": 151,
                    "body": [
                        "    public void testFindShortestPathAndVerify_test0_decomposed()  {\n",
                        "        DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph =\n",
                        "                new DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex one = new BaseLabeledVertex(\"1\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFindShortestPathAndVerify_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "117-144:testCompareToUnidirectional_test0_decomposed": {
                    "start": 117,
                    "end": 144,
                    "body": [
                        "    public void testCompareToUnidirectional_test0_decomposed()  {\n",
                        "        Random r = new Random();\n",
                        "        for (int ii = 0; ii < TIMES; ii++) {\n",
                        "            BaseLabeledVertex s = vertices.get(r.nextInt(vertices.size()));\n",
                        "            BaseLabeledVertex t;\n",
                        "\n",
                        "            do {\n",
                        "                t = vertices.get(r.nextInt(vertices.size()));\n",
                        "            } while (s.equals(t));\n",
                        "\n",
                        "            WeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> pathUni =\n",
                        "                    findShortestPath(graph)\n",
                        "                            .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                            .from(s)\n",
                        "                            .to(t)\n",
                        "                            .applyingDijkstra(weightOperations);\n",
                        "\n",
                        "            WeightedPath<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>, Double> pathBi =\n",
                        "                    findShortestPath(graph)\n",
                        "                            .whereEdgesHaveWeights(new BaseWeightedEdge<Double>())\n",
                        "                            .from(s)\n",
                        "                            .to(t)\n",
                        "                            .applyingBidirectionalDijkstra(weightOperations);\n",
                        "\n",
                        "            assertEquals(pathUni.getSize(), pathBi.getSize());\n",
                        "            assertEquals(pathUni.getWeight(), pathBi.getWeight(), EPSILON);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCompareToUnidirectional_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Random",
                            "Random()"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "get(int)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Random",
                            "nextInt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "size()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/TargetSourceSelector",
                            "to(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/PathWeightedEdgesBuilder",
                            "whereEdgesHaveWeights(org.apache.commons.graph.Mapper)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "139-143:findShortestPath"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseWeightedEdge",
                            "BaseWeightedEdge<Double>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/ShortestPathAlgorithmSelector",
                            "applyingBidirectionalDijkstra(org.apache.commons.graph.weight.OrderedMonoid)"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "41-52:equals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "getSize()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(double,double,double)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Weighted",
                            "getWeight()"
                        ]
                    ]
                },
                "62-107:setUp": {
                    "start": 62,
                    "end": 107,
                    "body": [
                        "    public static void setUp() {\n",
                        "        weightOperations = new DoubleWeightBaseOperations();\n",
                        "\n",
                        "        graph =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<\n",
                        "                                BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>() {\n",
                        "                            Random r = new Random();\n",
                        "\n",
                        "                            private boolean addEdge(BaseLabeledVertex src, BaseLabeledVertex dst) {\n",
                        "                                try {\n",
                        "                                    addEdge(\n",
                        "                                                    new BaseLabeledWeightedEdge<Double>(\n",
                        "                                                            format(\"%s -> %s\", src, dst),\n",
                        "                                                            10.0 * r.nextDouble() + 1.0))\n",
                        "                                            .from(src)\n",
                        "                                            .to(dst);\n",
                        "                                    return true;\n",
                        "                                } catch (GraphException e) {\n",
                        "                                    return false;\n",
                        "                                }\n",
                        "                            }\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                vertices = new ArrayList<BaseLabeledVertex>();\n",
                        "                                for (int i = 0; i < NODES; i++) {\n",
                        "                                    BaseLabeledVertex v = new BaseLabeledVertex(valueOf(i));\n",
                        "                                    addVertex(v);\n",
                        "                                    vertices.add(v);\n",
                        "                                }\n",
                        "\n",
                        "                                for (int i = 0; i < NODES - 1; i++) {\n",
                        "                                    addEdge(vertices.get(i), vertices.get(i + 1));\n",
                        "                                }\n",
                        "\n",
                        "                                addEdge(vertices.get(NODES - 1), vertices.get(0));\n",
                        "\n",
                        "                                int maxEdges = Math.max(0, EDGES - NODES);\n",
                        "                                for (int i = 0; i < maxEdges; i++) {\n",
                        "                                    while (!addEdge(\n",
                        "                                            vertices.get(r.nextInt(NODES)),\n",
                        "                                            vertices.get(r.nextInt(NODES)))) {}\n",
                        "                                }\n",
                        "                            }\n",
                        "                        });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "BeforeClass",
                        "BeforeClass"
                    ],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setUp()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations",
                            "DoubleWeightBaseOperations"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "187-190:newDirectedMutableGraph"
                        ]
                    ]
                }
            },
            "fields": {
                "59-59:weightOperations": {
                    "start": 59,
                    "end": 59,
                    "body": [
                        "    private static OrderedMonoid<Double> weightOperations;\n"
                    ],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "OrderedMonoid<Double>",
                            "OrderedMonoid<Double>"
                        ]
                    ]
                },
                "57-57:vertices": {
                    "start": 57,
                    "end": 57,
                    "body": [
                        "    private static List<BaseLabeledVertex> vertices;\n"
                    ],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "List<BaseLabeledVertex>",
                            "java.util.List<BaseLabeledVertex>"
                        ]
                    ]
                },
                "55-55:graph": {
                    "start": 55,
                    "end": 55,
                    "body": [
                        "    private static DirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> graph;\n"
                    ],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>",
                            "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>"
                        ]
                    ]
                },
                "53-53:EPSILON": {
                    "start": 53,
                    "end": 53,
                    "body": [
                        "    private static final double EPSILON = 1.0e-6;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "double",
                            "double"
                        ]
                    ]
                },
                "52-52:EDGES": {
                    "start": 52,
                    "end": 52,
                    "body": [
                        "    private static final int EDGES = 100000;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "51-51:NODES": {
                    "start": 51,
                    "end": 51,
                    "body": [
                        "    private static final int NODES = 5000;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "50-50:TIMES": {
                    "start": 50,
                    "end": 50,
                    "body": [
                        "    private static final int TIMES = 10;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                }
            }
        },
        "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>(...) { ... }": {
            "start": 67,
            "end": 68,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "BidirDijkstraTestCase",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "85-105:connect0": {
                    "start": 85,
                    "end": 105,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                vertices = new ArrayList<BaseLabeledVertex>();\n",
                        "                                for (int i = 0; i < NODES; i++) {\n",
                        "                                    BaseLabeledVertex v = new BaseLabeledVertex(valueOf(i));\n",
                        "                                    addVertex(v);\n",
                        "                                    vertices.add(v);\n",
                        "                                }\n",
                        "\n",
                        "                                for (int i = 0; i < NODES - 1; i++) {\n",
                        "                                    addEdge(vertices.get(i), vertices.get(i + 1));\n",
                        "                                }\n",
                        "\n",
                        "                                addEdge(vertices.get(NODES - 1), vertices.get(0));\n",
                        "\n",
                        "                                int maxEdges = Math.max(0, EDGES - NODES);\n",
                        "                                for (int i = 0; i < maxEdges; i++) {\n",
                        "                                    while (!addEdge(\n",
                        "                                            vertices.get(r.nextInt(NODES)),\n",
                        "                                            vertices.get(r.nextInt(NODES)))) {}\n",
                        "                                }\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Math",
                            "max"
                        ],
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<BaseLabeledVertex>"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "valueOf"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.shortestpath.BidirDijkstraTestCase",
                            "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>(...) { ... }",
                            "71-83:addEdge"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "get"
                        ],
                        [
                            "library",
                            "java.base/java/util/Random",
                            "nextInt"
                        ]
                    ]
                },
                "71-83:addEdge": {
                    "start": 71,
                    "end": 83,
                    "body": [
                        "                            private boolean addEdge(BaseLabeledVertex src, BaseLabeledVertex dst) {\n",
                        "                                try {\n",
                        "                                    addEdge(\n",
                        "                                                    new BaseLabeledWeightedEdge<Double>(\n",
                        "                                                            format(\"%s -> %s\", src, dst),\n",
                        "                                                            10.0 * r.nextDouble() + 1.0))\n",
                        "                                            .from(src)\n",
                        "                                            .to(dst);\n",
                        "                                    return true;\n",
                        "                                } catch (GraphException e) {\n",
                        "                                    return false;\n",
                        "                                }\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "addEdge(BaseLabeledVertex, BaseLabeledVertex)",
                    "parameters": [
                        "src",
                        "dst"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "format"
                        ],
                        [
                            "library",
                            "java.base/java/util/Random",
                            "nextDouble"
                        ]
                    ]
                },
                "65-68:": {
                    "start": 65,
                    "end": 68,
                    "body": [
                        "        graph =\n",
                        "                newDirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<\n",
                        "                                BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                }
            },
            "fields": {
                "69-69:r": {
                    "start": 69,
                    "end": 69,
                    "body": [
                        "                            Random r = new Random();\n"
                    ],
                    "modifiers": [],
                    "types": [
                        [
                            "Random",
                            "java.util.Random"
                        ]
                    ]
                }
            }
        }
    }
}