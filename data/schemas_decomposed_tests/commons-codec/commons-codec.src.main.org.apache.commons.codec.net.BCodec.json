{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/main/java/org/apache/commons/codec/net/BCodec.java",
    "imports": {
        "29-29:import Charset": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.nio.charset.Charset;\n"
            ]
        },
        "28-28:import UnsupportedEncodingException": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.io.UnsupportedEncodingException;\n"
            ]
        },
        "30-30:import StandardCharsets": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.nio.charset.StandardCharsets;\n"
            ]
        },
        "21-21:import DecoderException": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.codec.DecoderException;\n"
            ]
        },
        "22-22:import EncoderException": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.codec.EncoderException;\n"
            ]
        },
        "20-20:import CodecPolicy": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.codec.CodecPolicy;\n"
            ]
        },
        "23-23:import StringDecoder": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.apache.commons.codec.StringDecoder;\n"
            ]
        },
        "24-24:import StringEncoder": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.codec.StringEncoder;\n"
            ]
        },
        "26-26:import BaseNCodec": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.codec.binary.BaseNCodec;\n"
            ]
        },
        "25-25:import Base64": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.apache.commons.codec.binary.Base64;\n"
            ]
        }
    },
    "classes": {
        "BCodec": {
            "start": 46,
            "end": 46,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "StringDecoder",
                "StringEncoder",
                "RFC1522Codec"
            ],
            "methods": {
                "270-272:decode": {
                    "start": 270,
                    "end": 272,
                    "body": [
                        "    public Object decode(final Object value) throws DecoderException {\n",
                        "        return decode1(value);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "decode(Object)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "274-284:decode1"
                        ]
                    ]
                },
                "244-246:encode": {
                    "start": 244,
                    "end": 246,
                    "body": [
                        "    public Object encode(final Object value) throws EncoderException {\n",
                        "        return encode3(value);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "encode(Object)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "248-258:encode3"
                        ]
                    ]
                },
                "219-221:decode": {
                    "start": 219,
                    "end": 221,
                    "body": [
                        "    public String decode(final String value) throws DecoderException {\n",
                        "        return decode0(value);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "decode(String)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "223-232:decode0"
                        ]
                    ]
                },
                "198-200:encode": {
                    "start": 198,
                    "end": 200,
                    "body": [
                        "    public String encode(final String strSource) throws EncoderException {\n",
                        "        return encode2(strSource);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "encode(String)",
                    "parameters": [
                        "strSource"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "202-207:encode2"
                        ]
                    ]
                },
                "135-140:doDecoding": {
                    "start": 135,
                    "end": 140,
                    "body": [
                        "    protected byte[] doDecoding(final byte[] bytes) {\n",
                        "        if (bytes == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        return new Base64(0, BaseNCodec.getChunkSeparator(), false, decodingPolicy).decode0(bytes);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "byte[]",
                            "byte[]"
                        ]
                    ],
                    "signature": "doDecoding(byte[])",
                    "parameters": [
                        "bytes"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodec",
                            "BaseNCodec",
                            "401-411:decode0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "427-458:Base64"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodec",
                            "BaseNCodec",
                            "232-234:getChunkSeparator"
                        ]
                    ]
                },
                "127-132:doEncoding": {
                    "start": 127,
                    "end": 132,
                    "body": [
                        "    protected byte[] doEncoding(final byte[] bytes) {\n",
                        "        if (bytes == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        return Base64.encodeBase640(bytes);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "byte[]",
                            "byte[]"
                        ]
                    ],
                    "signature": "doEncoding(byte[])",
                    "parameters": [
                        "bytes"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "169-171:encodeBase640"
                        ]
                    ]
                },
                "122-124:getEncoding": {
                    "start": 122,
                    "end": 124,
                    "body": [
                        "    protected String getEncoding() {\n",
                        "        return \"B\";\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getEncoding()",
                    "parameters": [],
                    "calls": []
                },
                "301-303:getDefaultCharset": {
                    "start": 301,
                    "end": 303,
                    "body": [
                        "    public String getDefaultCharset() {\n",
                        "        return this.charset.name();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getDefaultCharset()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/charset/Charset",
                            "name()"
                        ]
                    ]
                },
                "292-294:getCharset": {
                    "start": 292,
                    "end": 294,
                    "body": [
                        "    public Charset getCharset() {\n",
                        "        return this.charset;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Charset",
                            "java.nio.charset.Charset"
                        ]
                    ],
                    "signature": "getCharset()",
                    "parameters": [],
                    "calls": []
                },
                "274-284:decode1": {
                    "start": 274,
                    "end": 284,
                    "body": [
                        "    public Object decode1(final Object value) throws DecoderException {\n",
                        "        if (value == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        if (value instanceof String) {\n",
                        "            return decode0((String) value);\n",
                        "        }\n",
                        "        throw new DecoderException(\n",
                        "                \"Objects of type \" + value.getClass().getName() + \" cannot be decoded using BCodec\",\n",
                        "                null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "decode1(Object)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "223-232:decode0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.DecoderException",
                            "DecoderException",
                            "63-65:DecoderException"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getName()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "getClass()"
                        ]
                    ]
                },
                "248-258:encode3": {
                    "start": 248,
                    "end": 258,
                    "body": [
                        "    public Object encode3(final Object value) throws EncoderException {\n",
                        "        if (value == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        if (value instanceof String) {\n",
                        "            return encode2((String) value);\n",
                        "        }\n",
                        "        throw new EncoderException(\n",
                        "                \"Objects of type \" + value.getClass().getName() + \" cannot be encoded using BCodec\",\n",
                        "                null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "encode3(Object)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "202-207:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.EncoderException",
                            "EncoderException",
                            "62-64:EncoderException"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getName()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "getClass()"
                        ]
                    ]
                },
                "223-232:decode0": {
                    "start": 223,
                    "end": 232,
                    "body": [
                        "    public String decode0(final String value) throws DecoderException {\n",
                        "        if (value == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        try {\n",
                        "            return this.decodeText(value);\n",
                        "        } catch (final UnsupportedEncodingException | IllegalArgumentException e) {\n",
                        "            throw new DecoderException(e.getMessage(), e);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "decode0(String)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.RFC1522Codec",
                            "RFC1522Codec",
                            "120-153:decodeText"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.DecoderException",
                            "DecoderException",
                            "63-65:DecoderException"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Throwable",
                            "getMessage()"
                        ]
                    ]
                },
                "202-207:encode2": {
                    "start": 202,
                    "end": 207,
                    "body": [
                        "    public String encode2(final String strSource) throws EncoderException {\n",
                        "        if (strSource == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        return encode0(strSource, this.getCharset());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "encode2(String)",
                    "parameters": [
                        "strSource"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "158-164:encode0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "292-294:getCharset"
                        ]
                    ]
                },
                "176-186:encode1": {
                    "start": 176,
                    "end": 186,
                    "body": [
                        "    public String encode1(final String strSource, final String sourceCharset)\n",
                        "            throws EncoderException {\n",
                        "        if (strSource == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        try {\n",
                        "            return this.encodeText1(strSource, sourceCharset);\n",
                        "        } catch (final UnsupportedEncodingException e) {\n",
                        "            throw new EncoderException(e.getMessage(), e);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "encode1(String, String)",
                    "parameters": [
                        "strSource",
                        "sourceCharset"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.RFC1522Codec",
                            "RFC1522Codec",
                            "99-105:encodeText1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.EncoderException",
                            "EncoderException",
                            "62-64:EncoderException"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Throwable",
                            "getMessage()"
                        ]
                    ]
                },
                "158-164:encode0": {
                    "start": 158,
                    "end": 164,
                    "body": [
                        "    public String encode0(final String strSource, final Charset sourceCharset)\n",
                        "            throws EncoderException {\n",
                        "        if (strSource == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        return encodeText0(strSource, sourceCharset);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "encode0(String, Charset)",
                    "parameters": [
                        "strSource",
                        "sourceCharset"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.RFC1522Codec",
                            "RFC1522Codec",
                            "67-80:encodeText0"
                        ]
                    ]
                },
                "153-156:encode": {
                    "start": 153,
                    "end": 156,
                    "body": [
                        "    public String encode(final String strSource, final Charset sourceCharset)\n",
                        "            throws EncoderException {\n",
                        "        return encode0(strSource, sourceCharset);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "encode(String, Charset)",
                    "parameters": [
                        "strSource",
                        "sourceCharset"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "158-164:encode0"
                        ]
                    ]
                },
                "117-119:isStrictDecoding": {
                    "start": 117,
                    "end": 119,
                    "body": [
                        "    public boolean isStrictDecoding() {\n",
                        "        return decodingPolicy == CodecPolicy.STRICT;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isStrictDecoding()",
                    "parameters": [],
                    "calls": []
                },
                "103-105:BCodec2": {
                    "start": 103,
                    "end": 105,
                    "body": [
                        "    public static BCodec BCodec2(final String charsetName) {\n",
                        "        return BCodec1(Charset.forName(charsetName));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "BCodec",
                            "BCodec"
                        ]
                    ],
                    "signature": "BCodec2(String)",
                    "parameters": [
                        "charsetName"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "74-76:BCodec1"
                        ],
                        [
                            "library",
                            "java.base/java/nio/charset/Charset",
                            "forName(java.lang.String)"
                        ]
                    ]
                },
                "88-91:BCodec": {
                    "start": 88,
                    "end": 91,
                    "body": [
                        "    public BCodec(final Charset charset, final CodecPolicy decodingPolicy) {\n",
                        "        this.charset = charset;\n",
                        "        this.decodingPolicy = decodingPolicy;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "BCodec(Charset, CodecPolicy)",
                    "parameters": [
                        "charset",
                        "decodingPolicy"
                    ],
                    "calls": []
                },
                "74-76:BCodec1": {
                    "start": 74,
                    "end": 76,
                    "body": [
                        "    public static BCodec BCodec1(final Charset charset) {\n",
                        "        return new BCodec(charset, DECODING_POLICY_DEFAULT);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "BCodec",
                            "BCodec"
                        ]
                    ],
                    "signature": "BCodec1(Charset)",
                    "parameters": [
                        "charset"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "88-91:BCodec"
                        ]
                    ]
                },
                "61-63:BCodec0": {
                    "start": 61,
                    "end": 63,
                    "body": [
                        "    public static BCodec BCodec0() {\n",
                        "        return BCodec1(StandardCharsets.UTF_8);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "BCodec",
                            "BCodec"
                        ]
                    ],
                    "signature": "BCodec0()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.BCodec",
                            "BCodec",
                            "74-76:BCodec1"
                        ]
                    ]
                }
            },
            "fields": {
                "58-58:decodingPolicy": {
                    "start": 58,
                    "end": 58,
                    "body": [
                        "    private final CodecPolicy decodingPolicy;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "CodecPolicy",
                            "CodecPolicy"
                        ]
                    ]
                },
                "52-52:charset": {
                    "start": 52,
                    "end": 52,
                    "body": [
                        "    private final Charset charset;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Charset",
                            "java.nio.charset.Charset"
                        ]
                    ]
                },
                "49-49:DECODING_POLICY_DEFAULT": {
                    "start": 49,
                    "end": 49,
                    "body": [
                        "    private static final CodecPolicy DECODING_POLICY_DEFAULT = CodecPolicy.LENIENT;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "CodecPolicy",
                            "CodecPolicy"
                        ]
                    ]
                }
            }
        }
    }
}