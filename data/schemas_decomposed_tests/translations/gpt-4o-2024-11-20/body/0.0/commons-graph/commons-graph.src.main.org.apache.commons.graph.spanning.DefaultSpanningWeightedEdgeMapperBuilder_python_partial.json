{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/spanning/DefaultSpanningWeightedEdgeMapperBuilder.java",
    "imports": {
        "24-24:import Graph": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "25-25:import Mapper": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.apache.commons.graph.Mapper;\n"
            ]
        },
        "22-22:import static Assertions.checkNotNull": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.utils.Assertions.checkNotNull;\n"
            ]
        }
    },
    "classes": {
        "DefaultSpanningWeightedEdgeMapperBuilder": {
            "start": 27,
            "end": 28,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "36-41:whereEdgesHaveWeights": {
                    "start": 36,
                    "end": 41,
                    "body": [
                        "    public <W> SpanningTreeSourceSelector<V, W, WE> whereEdgesHaveWeights(\n",
                        "            Mapper<WE, W> weightedEdges) {\n",
                        "        weightedEdges =\n",
                        "                checkNotNull(weightedEdges, \"Function to calculate edges weight can not be null.\");\n",
                        "        return new DefaultSpanningTreeSourceSelector<V, W, WE>(graph, weightedEdges);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "SpanningTreeSourceSelector<V,W,WE>",
                            "SpanningTreeSourceSelector<V,W,WE>"
                        ]
                    ],
                    "signature": "whereEdgesHaveWeights(Mapper<WE,W>)",
                    "parameters": [
                        "weightedEdges"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<V,W,WE>(org.apache.commons.graph.Graph,org.apache.commons.graph.Mapper)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def whereEdgesHaveWeights(self, weightedEdges: Mapper[typing.Any, typing.Any]) -> SpanningTreeSourceSelector[typing.Any, typing.Any, typing.Any]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "32-34:DefaultSpanningWeightedEdgeMapperBuilder": {
                    "start": 32,
                    "end": 34,
                    "body": [
                        "    public DefaultSpanningWeightedEdgeMapperBuilder(Graph<V, WE> graph) {\n",
                        "        this.graph = graph;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "DefaultSpanningWeightedEdgeMapperBuilder(Graph<V,WE>)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, graph: Graph[typing.Any, typing.Any]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "30-30:graph": {
                    "start": 30,
                    "end": 30,
                    "body": [
                        "    private final Graph<V, WE> graph;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Graph<V,WE>",
                            "Graph<V,WE>"
                        ]
                    ],
                    "partial_translation": [
                        "    __graph: Graph[typing.Any, typing.Any] = None",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class DefaultSpanningWeightedEdgeMapperBuilder:\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import io",
        "import typing\nfrom typing import *",
        "from src.main.org.apache.commons.graph.Graph import *",
        "from src.main.org.apache.commons.graph.Mapper import *",
        "from src.main.org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector import *",
        "from src.main.org.apache.commons.graph.spanning.SpanningTreeSourceSelector import *",
        "from src.main.org.apache.commons.graph.spanning.SpanningWeightedEdgeMapperBuilder import *",
        "from src.main.org.apache.commons.graph.utils.Assertions import *"
    ]
}