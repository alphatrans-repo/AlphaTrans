{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/spanning/ReverseDeleteGraph.java",
    "imports": {
        "28-28:import List": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "27-27:import Collection": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.util.Collection;\n"
            ]
        },
        "26-26:import ArrayList": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.util.ArrayList;\n"
            ]
        },
        "22-22:import Graph": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "24-24:import VertexPair": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.graph.VertexPair;\n"
            ]
        },
        "23-23:import GraphException": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.apache.commons.graph.GraphException;\n"
            ]
        }
    },
    "classes": {
        "ReverseDeleteGraph": {
            "start": 34,
            "end": 34,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [
                "Graph<V,WE>"
            ],
            "extends": [],
            "methods": {
                "106-121:getVertices1": {
                    "start": 106,
                    "end": 121,
                    "body": [
                        "    public VertexPair<V> getVertices1(WE e) {\n",
                        "        for (WE edge : sortedEdge) {\n",
                        "            if (edge.equals(e)) {\n",
                        "                return graph.getVertices1(e);\n",
                        "            }\n",
                        "        }\n",
                        "\n",
                        "        if (sortedEdge.contains(e)) {\n",
                        "            return graph.getVertices1(e);\n",
                        "        }\n",
                        "\n",
                        "        if (visitedEdge.contains(e)) {\n",
                        "            return graph.getVertices1(e);\n",
                        "        }\n",
                        "        return null;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "VertexPair<V>",
                            "VertexPair<V>"
                        ]
                    ],
                    "signature": "getVertices1(WE)",
                    "parameters": [
                        "e"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "equals(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "getVertices1(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "contains(java.lang.Object)"
                        ]
                    ]
                },
                "102-104:getVertices0": {
                    "start": 102,
                    "end": 104,
                    "body": [
                        "    public Iterable<V> getVertices0() {\n",
                        "        return graph.getVertices0();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Iterable<V>",
                            "java.lang.Iterable<V>"
                        ]
                    ],
                    "signature": "getVertices0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "getVertices0()"
                        ]
                    ]
                },
                "98-100:getSize": {
                    "start": 98,
                    "end": 100,
                    "body": [
                        "    public int getSize() {\n",
                        "        return sortedEdge.size() + visitedEdge.size();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getSize()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "size()"
                        ]
                    ]
                },
                "94-96:getOrder": {
                    "start": 94,
                    "end": 96,
                    "body": [
                        "    public int getOrder() {\n",
                        "        return graph.getOrder();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getOrder()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "getOrder()"
                        ]
                    ]
                },
                "87-92:getEdges": {
                    "start": 87,
                    "end": 92,
                    "body": [
                        "    public Iterable<WE> getEdges() {\n",
                        "        List<WE> e = new ArrayList<WE>();\n",
                        "        e.addAll(sortedEdge);\n",
                        "        e.addAll(visitedEdge);\n",
                        "        return e;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Iterable<WE>",
                            "java.lang.Iterable<WE>"
                        ]
                    ],
                    "signature": "getEdges()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<WE>()"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "addAll(java.util.Collection)"
                        ]
                    ]
                },
                "75-85:getEdge": {
                    "start": 75,
                    "end": 85,
                    "body": [
                        "    public WE getEdge(V source, V target) {\n",
                        "        WE edge = graph.getEdge(source, target);\n",
                        "        if (sortedEdge.contains(edge)) {\n",
                        "            return edge;\n",
                        "        }\n",
                        "\n",
                        "        if (visitedEdge.contains(edge)) {\n",
                        "            return edge;\n",
                        "        }\n",
                        "        return null;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "WE",
                            "WE"
                        ]
                    ],
                    "signature": "getEdge(V, V)",
                    "parameters": [
                        "source",
                        "target"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "getEdge(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "contains(java.lang.Object)"
                        ]
                    ]
                },
                "71-73:getDegree": {
                    "start": 71,
                    "end": 73,
                    "body": [
                        "    public int getDegree(V v) {\n",
                        "        throw new GraphException(\"Unused Method\", null, null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getDegree(V)",
                    "parameters": [
                        "v"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.GraphException",
                            "GraphException",
                            "51-53:GraphException"
                        ]
                    ]
                },
                "59-69:getConnectedVertices": {
                    "start": 59,
                    "end": 69,
                    "body": [
                        "    public Iterable<V> getConnectedVertices(V v) {\n",
                        "\n",
                        "        List<V> tmp = new ArrayList<V>();\n",
                        "        for (V originalVertex : graph.getConnectedVertices(v)) {\n",
                        "            if (getEdge(v, originalVertex) != null) {\n",
                        "                tmp.add(originalVertex);\n",
                        "            }\n",
                        "        }\n",
                        "\n",
                        "        return tmp;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Iterable<V>",
                            "java.lang.Iterable<V>"
                        ]
                    ],
                    "signature": "getConnectedVertices(V)",
                    "parameters": [
                        "v"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<V>()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "getConnectedVertices(java.lang.Object)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.spanning.ReverseDeleteGraph",
                            "ReverseDeleteGraph",
                            "75-85:getEdge"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(java.lang.Object)"
                        ]
                    ]
                },
                "55-57:containsVertex": {
                    "start": 55,
                    "end": 57,
                    "body": [
                        "    public boolean containsVertex(V v) {\n",
                        "        return graph.containsVertex(v);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "containsVertex(V)",
                    "parameters": [
                        "v"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "containsVertex(java.lang.Object)"
                        ]
                    ]
                },
                "51-53:containsEdge": {
                    "start": 51,
                    "end": 53,
                    "body": [
                        "    public boolean containsEdge(WE e) {\n",
                        "        return graph.containsEdge(e);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "containsEdge(WE)",
                    "parameters": [
                        "e"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "containsEdge(java.lang.Object)"
                        ]
                    ]
                },
                "44-49:ReverseDeleteGraph": {
                    "start": 44,
                    "end": 49,
                    "body": [
                        "    public ReverseDeleteGraph(\n",
                        "            Graph<V, WE> graph, Collection<WE> sortedEdge, Collection<WE> visitedEdge) {\n",
                        "        this.graph = graph;\n",
                        "        this.sortedEdge = sortedEdge;\n",
                        "        this.visitedEdge = visitedEdge;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ReverseDeleteGraph(Graph<V,WE>, Collection<WE>, Collection<WE>)",
                    "parameters": [
                        "graph",
                        "sortedEdge",
                        "visitedEdge"
                    ],
                    "calls": []
                }
            },
            "fields": {
                "42-42:visitedEdge": {
                    "start": 42,
                    "end": 42,
                    "body": [
                        "    private final Collection<WE> visitedEdge;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Collection<WE>",
                            "java.util.Collection<WE>"
                        ]
                    ]
                },
                "40-40:sortedEdge": {
                    "start": 40,
                    "end": 40,
                    "body": [
                        "    private final Collection<WE> sortedEdge;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Collection<WE>",
                            "java.util.Collection<WE>"
                        ]
                    ]
                },
                "38-38:graph": {
                    "start": 38,
                    "end": 38,
                    "body": [
                        "    private final Graph<V, WE> graph;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Graph<V,WE>",
                            "Graph<V,WE>"
                        ]
                    ]
                },
                "36-36:serialVersionUID": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    private static final long serialVersionUID = -543197749473412325L;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                }
            }
        }
    }
}