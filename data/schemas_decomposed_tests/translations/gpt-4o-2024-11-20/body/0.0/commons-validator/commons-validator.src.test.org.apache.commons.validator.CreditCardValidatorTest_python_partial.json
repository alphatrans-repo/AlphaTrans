{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-validator/src/test/java/org/apache/commons/validator/CreditCardValidatorTest.java",
    "imports": {
        "20-20:import TestCase": {
            "start": 20,
            "end": 20,
            "body": [
                "import junit.framework.TestCase;\n"
            ]
        },
        "18-18:import Test": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.junit.Test;\n"
            ]
        }
    },
    "classes": {
        "DinersClub": {
            "start": 48,
            "end": 48,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "CreditCardValidatorTest",
            "nests": [],
            "implements": [
                "CreditCardType"
            ],
            "extends": [],
            "methods": {
                "52-55:matches": {
                    "start": 52,
                    "end": 55,
                    "body": [
                        "        public boolean matches(String card) {\n",
                        "            String prefix = card.substring(0, 3) + \",\";\n",
                        "            return ((PREFIX.contains(prefix)) && (card.length() == 14));\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "matches(String)",
                    "parameters": [
                        "card"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "substring(int,int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "contains(java.lang.CharSequence)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def matches(self, card: str) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "49-49:PREFIX": {
                    "start": 49,
                    "end": 49,
                    "body": [
                        "        private static final String PREFIX = \"300,301,302,303,304,305,\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __PREFIX: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class DinersClub(CreditCardType):\n\n"
        },
        "CreditCardValidatorTest": {
            "start": 29,
            "end": 29,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "DinersClub"
            ],
            "implements": [],
            "extends": [
                "unittest.TestCase"
            ],
            "methods": {
                "139-147:testAddAllowedCardType_test3_decomposed": {
                    "start": 139,
                    "end": 147,
                    "body": [
                        "    public void testAddAllowedCardType_test3_decomposed()  {\n",
                        "        CreditCardValidator ccv = new CreditCardValidator(CreditCardValidator.NONE);\n",
                        "        assertFalse(ccv.isValid(VALID_VISA));\n",
                        "        assertFalse(ccv.isValid(VALID_AMEX));\n",
                        "        assertFalse(ccv.isValid(VALID_MASTERCARD));\n",
                        "        assertFalse(ccv.isValid(VALID_DISCOVER));\n",
                        "        ccv.addAllowedCardType(new DinersClub());\n",
                        "        assertTrue(ccv.isValid(VALID_DINERS));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testAddAllowedCardType_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "82-101:CreditCardValidator"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "120-137:isValid"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "145-147:addAllowedCardType"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.CreditCardValidatorTest",
                            "DinersClub",
                            "DinersClub"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testAddAllowedCardType_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "129-136:testAddAllowedCardType_test2_decomposed": {
                    "start": 129,
                    "end": 136,
                    "body": [
                        "    public void testAddAllowedCardType_test2_decomposed()  {\n",
                        "        CreditCardValidator ccv = new CreditCardValidator(CreditCardValidator.NONE);\n",
                        "        assertFalse(ccv.isValid(VALID_VISA));\n",
                        "        assertFalse(ccv.isValid(VALID_AMEX));\n",
                        "        assertFalse(ccv.isValid(VALID_MASTERCARD));\n",
                        "        assertFalse(ccv.isValid(VALID_DISCOVER));\n",
                        "        ccv.addAllowedCardType(new DinersClub());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testAddAllowedCardType_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "82-101:CreditCardValidator"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "120-137:isValid"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "145-147:addAllowedCardType"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.CreditCardValidatorTest",
                            "DinersClub",
                            "DinersClub"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testAddAllowedCardType_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "120-126:testAddAllowedCardType_test1_decomposed": {
                    "start": 120,
                    "end": 126,
                    "body": [
                        "    public void testAddAllowedCardType_test1_decomposed()  {\n",
                        "        CreditCardValidator ccv = new CreditCardValidator(CreditCardValidator.NONE);\n",
                        "        assertFalse(ccv.isValid(VALID_VISA));\n",
                        "        assertFalse(ccv.isValid(VALID_AMEX));\n",
                        "        assertFalse(ccv.isValid(VALID_MASTERCARD));\n",
                        "        assertFalse(ccv.isValid(VALID_DISCOVER));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testAddAllowedCardType_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "82-101:CreditCardValidator"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "120-137:isValid"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testAddAllowedCardType_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "115-117:testAddAllowedCardType_test0_decomposed": {
                    "start": 115,
                    "end": 117,
                    "body": [
                        "    public void testAddAllowedCardType_test0_decomposed()  {\n",
                        "        CreditCardValidator ccv = new CreditCardValidator(CreditCardValidator.NONE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testAddAllowedCardType_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "82-101:CreditCardValidator"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testAddAllowedCardType_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "97-112:testIsValid_test3_decomposed": {
                    "start": 97,
                    "end": 112,
                    "body": [
                        "    public void testIsValid_test3_decomposed()  {\n",
                        "        CreditCardValidator ccv = CreditCardValidator.CreditCardValidator1();\n",
                        "        assertFalse(ccv.isValid(null));\n",
                        "        assertFalse(ccv.isValid(\"\"));\n",
                        "        assertFalse(ccv.isValid(\"123456789012\"));\n",
                        "        assertFalse(ccv.isValid(\"12345678901234567890\"));\n",
                        "        assertFalse(ccv.isValid(\"4417123456789112\"));\n",
                        "        assertFalse(ccv.isValid(\"4417q23456w89113\"));\n",
                        "        assertTrue(ccv.isValid(VALID_VISA));\n",
                        "        assertTrue(ccv.isValid(VALID_SHORT_VISA));\n",
                        "        assertTrue(ccv.isValid(VALID_AMEX));\n",
                        "        assertTrue(ccv.isValid(VALID_MASTERCARD));\n",
                        "        assertTrue(ccv.isValid(VALID_DISCOVER));\n",
                        "        ccv = new CreditCardValidator(CreditCardValidator.AMEX);\n",
                        "        assertFalse(ccv.isValid(\"4417123456789113\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testIsValid_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "103-105:CreditCardValidator1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "120-137:isValid"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "82-101:CreditCardValidator"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testIsValid_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "80-94:testIsValid_test2_decomposed": {
                    "start": 80,
                    "end": 94,
                    "body": [
                        "    public void testIsValid_test2_decomposed()  {\n",
                        "        CreditCardValidator ccv = CreditCardValidator.CreditCardValidator1();\n",
                        "        assertFalse(ccv.isValid(null));\n",
                        "        assertFalse(ccv.isValid(\"\"));\n",
                        "        assertFalse(ccv.isValid(\"123456789012\"));\n",
                        "        assertFalse(ccv.isValid(\"12345678901234567890\"));\n",
                        "        assertFalse(ccv.isValid(\"4417123456789112\"));\n",
                        "        assertFalse(ccv.isValid(\"4417q23456w89113\"));\n",
                        "        assertTrue(ccv.isValid(VALID_VISA));\n",
                        "        assertTrue(ccv.isValid(VALID_SHORT_VISA));\n",
                        "        assertTrue(ccv.isValid(VALID_AMEX));\n",
                        "        assertTrue(ccv.isValid(VALID_MASTERCARD));\n",
                        "        assertTrue(ccv.isValid(VALID_DISCOVER));\n",
                        "        ccv = new CreditCardValidator(CreditCardValidator.AMEX);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testIsValid_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "103-105:CreditCardValidator1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "120-137:isValid"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "82-101:CreditCardValidator"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testIsValid_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "64-77:testIsValid_test1_decomposed": {
                    "start": 64,
                    "end": 77,
                    "body": [
                        "    public void testIsValid_test1_decomposed()  {\n",
                        "        CreditCardValidator ccv = CreditCardValidator.CreditCardValidator1();\n",
                        "        assertFalse(ccv.isValid(null));\n",
                        "        assertFalse(ccv.isValid(\"\"));\n",
                        "        assertFalse(ccv.isValid(\"123456789012\"));\n",
                        "        assertFalse(ccv.isValid(\"12345678901234567890\"));\n",
                        "        assertFalse(ccv.isValid(\"4417123456789112\"));\n",
                        "        assertFalse(ccv.isValid(\"4417q23456w89113\"));\n",
                        "        assertTrue(ccv.isValid(VALID_VISA));\n",
                        "        assertTrue(ccv.isValid(VALID_SHORT_VISA));\n",
                        "        assertTrue(ccv.isValid(VALID_AMEX));\n",
                        "        assertTrue(ccv.isValid(VALID_MASTERCARD));\n",
                        "        assertTrue(ccv.isValid(VALID_DISCOVER));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testIsValid_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "103-105:CreditCardValidator1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "120-137:isValid"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testIsValid_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "59-61:testIsValid_test0_decomposed": {
                    "start": 59,
                    "end": 61,
                    "body": [
                        "    public void testIsValid_test0_decomposed()  {\n",
                        "        CreditCardValidator ccv = CreditCardValidator.CreditCardValidator1();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testIsValid_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.CreditCardValidator",
                            "CreditCardValidator",
                            "103-105:CreditCardValidator1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testIsValid_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "39-41:CreditCardValidatorTest": {
                    "start": 39,
                    "end": 41,
                    "body": [
                        "    public CreditCardValidatorTest(String name) {\n",
                        "        super(name);\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "CreditCardValidatorTest(String)",
                    "parameters": [
                        "name"
                    ],
                    "calls": [
                        [
                            "library",
                            "TestCase",
                            "TestCase(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, name: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "36-36:VALID_DINERS": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    private static final String VALID_DINERS = \"30569309025904\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __VALID_DINERS: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "35-35:VALID_DISCOVER": {
                    "start": 35,
                    "end": 35,
                    "body": [
                        "    private static final String VALID_DISCOVER = \"6011000990139424\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __VALID_DISCOVER: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "34-34:VALID_MASTERCARD": {
                    "start": 34,
                    "end": 34,
                    "body": [
                        "    private static final String VALID_MASTERCARD = \"5105105105105100\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __VALID_MASTERCARD: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "33-33:VALID_AMEX": {
                    "start": 33,
                    "end": 33,
                    "body": [
                        "    private static final String VALID_AMEX = \"378282246310005\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __VALID_AMEX: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "32-32:VALID_SHORT_VISA": {
                    "start": 32,
                    "end": 32,
                    "body": [
                        "    private static final String VALID_SHORT_VISA = \"4222222222222\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __VALID_SHORT_VISA: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "31-31:VALID_VISA": {
                    "start": 31,
                    "end": 31,
                    "body": [
                        "    private static final String VALID_VISA = \"4417123456789113\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __VALID_VISA: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class CreditCardValidatorTest(unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import typing\nfrom typing import *",
        "import os",
        "import unittest",
        "from src.main.org.apache.commons.validator.CreditCardValidator import *",
        "from src.main.org.apache.commons.validator.routines.CodeValidator import *",
        "from src.main.org.apache.commons.validator.routines.CreditCardValidator import *",
        "from src.main.org.apache.commons.validator.routines.RegexValidator import *",
        "from src.main.org.apache.commons.validator.routines.checkdigit.CheckDigit import *",
        "from src.main.org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit import *"
    ]
}