{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/test/java/org/apache/commons/graph/visit/VisitTestCase.java",
    "imports": {
        "34-34:import List": {
            "start": 34,
            "end": 34,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "33-33:import ArrayList": {
            "start": 33,
            "end": 33,
            "body": [
                "import java.util.ArrayList;\n"
            ]
        },
        "26-26:import Graph": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "30-30:import UndirectedMutableGraph": {
            "start": 30,
            "end": 30,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "27-27:import AbstractGraphConnection": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.apache.commons.graph.builder.AbstractGraphConnection;\n"
            ]
        },
        "31-31:import Test": {
            "start": 31,
            "end": 31,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "28-28:import BaseLabeledEdge": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.apache.commons.graph.model.BaseLabeledEdge;\n"
            ]
        },
        "29-29:import BaseLabeledVertex": {
            "start": 29,
            "end": 29,
            "body": [
                "import org.apache.commons.graph.model.BaseLabeledVertex;\n"
            ]
        },
        "24-24:import static Assert.assertEquals": {
            "start": 24,
            "end": 24,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        },
        "22-22:import static CommonsGraph.newUndirectedMutableGraph": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.CommonsGraph.newUndirectedMutableGraph;\n"
            ]
        },
        "23-23:import static CommonsGraph.visit": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.apache.commons.graph.CommonsGraph.visit;\n"
            ]
        }
    },
    "classes": {
        "VisitTestCase": {
            "start": 36,
            "end": 36,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "578-625:testVerifyDepthFirstSearch_test4_decomposed": {
                    "start": 578,
                    "end": 625,
                    "body": [
                        "    public void testVerifyDepthFirstSearch_test4_decomposed()  {\n",
                        "        final List<BaseLabeledVertex> expected = new ArrayList<BaseLabeledVertex>();\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"A\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"B\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"C\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"D\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"E\"));\n",
                        "                                BaseLabeledVertex f = addVertex(new BaseLabeledVertex(\"F\"));\n",
                        "                                BaseLabeledVertex g = addVertex(new BaseLabeledVertex(\"G\"));\n",
                        "                                BaseLabeledVertex h = addVertex(new BaseLabeledVertex(\"H\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"S\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> A\")).from(s).to(a);\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> B\")).from(s).to(b);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> C\")).from(a).to(c);\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> D\")).from(a).to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> E\")).from(b).to(e);\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> F\")).from(b).to(f);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> H\")).from(e).to(h);\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> G\")).from(e).to(g);\n",
                        "\n",
                        "                                expected.add(s);\n",
                        "                                expected.add(b);\n",
                        "                                expected.add(f);\n",
                        "                                expected.add(e);\n",
                        "                                expected.add(g);\n",
                        "                                expected.add(h);\n",
                        "                                expected.add(a);\n",
                        "                                expected.add(d);\n",
                        "                                expected.add(c);\n",
                        "                            }\n",
                        "                        });\n",
                        "        visit(input);\n",
                        "        visit(input).from(new BaseLabeledVertex(\"S\"));\n",
                        "        final List<BaseLabeledVertex> actual =\n",
                        "                visit(input)\n",
                        "                        .from(new BaseLabeledVertex(\"S\"))\n",
                        "                        .applyingDepthFirstSearch1(new NodeSequenceVisitor());\n",
                        "        assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyDepthFirstSearch_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<BaseLabeledVertex>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitAlgorithmsSelector",
                            "applyingDepthFirstSearch1(org.apache.commons.graph.visit.GraphVisitHandler)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.visit.NodeSequenceVisitor",
                            "NodeSequenceVisitor",
                            "NodeSequenceVisitor"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "354-357:visit"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVerifyDepthFirstSearch_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "529-575:testVerifyDepthFirstSearch_test3_decomposed": {
                    "start": 529,
                    "end": 575,
                    "body": [
                        "    public void testVerifyDepthFirstSearch_test3_decomposed()  {\n",
                        "        final List<BaseLabeledVertex> expected = new ArrayList<BaseLabeledVertex>();\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"A\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"B\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"C\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"D\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"E\"));\n",
                        "                                BaseLabeledVertex f = addVertex(new BaseLabeledVertex(\"F\"));\n",
                        "                                BaseLabeledVertex g = addVertex(new BaseLabeledVertex(\"G\"));\n",
                        "                                BaseLabeledVertex h = addVertex(new BaseLabeledVertex(\"H\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"S\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> A\")).from(s).to(a);\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> B\")).from(s).to(b);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> C\")).from(a).to(c);\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> D\")).from(a).to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> E\")).from(b).to(e);\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> F\")).from(b).to(f);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> H\")).from(e).to(h);\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> G\")).from(e).to(g);\n",
                        "\n",
                        "                                expected.add(s);\n",
                        "                                expected.add(b);\n",
                        "                                expected.add(f);\n",
                        "                                expected.add(e);\n",
                        "                                expected.add(g);\n",
                        "                                expected.add(h);\n",
                        "                                expected.add(a);\n",
                        "                                expected.add(d);\n",
                        "                                expected.add(c);\n",
                        "                            }\n",
                        "                        });\n",
                        "        visit(input);\n",
                        "        visit(input).from(new BaseLabeledVertex(\"S\"));\n",
                        "        final List<BaseLabeledVertex> actual =\n",
                        "                visit(input)\n",
                        "                        .from(new BaseLabeledVertex(\"S\"))\n",
                        "                        .applyingDepthFirstSearch1(new NodeSequenceVisitor());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyDepthFirstSearch_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<BaseLabeledVertex>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitAlgorithmsSelector",
                            "applyingDepthFirstSearch1(org.apache.commons.graph.visit.GraphVisitHandler)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.visit.NodeSequenceVisitor",
                            "NodeSequenceVisitor",
                            "NodeSequenceVisitor"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "354-357:visit"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVerifyDepthFirstSearch_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "484-526:testVerifyDepthFirstSearch_test2_decomposed": {
                    "start": 484,
                    "end": 526,
                    "body": [
                        "    public void testVerifyDepthFirstSearch_test2_decomposed()  {\n",
                        "        final List<BaseLabeledVertex> expected = new ArrayList<BaseLabeledVertex>();\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"A\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"B\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"C\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"D\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"E\"));\n",
                        "                                BaseLabeledVertex f = addVertex(new BaseLabeledVertex(\"F\"));\n",
                        "                                BaseLabeledVertex g = addVertex(new BaseLabeledVertex(\"G\"));\n",
                        "                                BaseLabeledVertex h = addVertex(new BaseLabeledVertex(\"H\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"S\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> A\")).from(s).to(a);\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> B\")).from(s).to(b);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> C\")).from(a).to(c);\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> D\")).from(a).to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> E\")).from(b).to(e);\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> F\")).from(b).to(f);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> H\")).from(e).to(h);\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> G\")).from(e).to(g);\n",
                        "\n",
                        "                                expected.add(s);\n",
                        "                                expected.add(b);\n",
                        "                                expected.add(f);\n",
                        "                                expected.add(e);\n",
                        "                                expected.add(g);\n",
                        "                                expected.add(h);\n",
                        "                                expected.add(a);\n",
                        "                                expected.add(d);\n",
                        "                                expected.add(c);\n",
                        "                            }\n",
                        "                        });\n",
                        "        visit(input);\n",
                        "        visit(input).from(new BaseLabeledVertex(\"S\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyDepthFirstSearch_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<BaseLabeledVertex>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "354-357:visit"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVerifyDepthFirstSearch_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "440-481:testVerifyDepthFirstSearch_test1_decomposed": {
                    "start": 440,
                    "end": 481,
                    "body": [
                        "    public void testVerifyDepthFirstSearch_test1_decomposed()  {\n",
                        "        final List<BaseLabeledVertex> expected = new ArrayList<BaseLabeledVertex>();\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"A\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"B\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"C\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"D\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"E\"));\n",
                        "                                BaseLabeledVertex f = addVertex(new BaseLabeledVertex(\"F\"));\n",
                        "                                BaseLabeledVertex g = addVertex(new BaseLabeledVertex(\"G\"));\n",
                        "                                BaseLabeledVertex h = addVertex(new BaseLabeledVertex(\"H\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"S\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> A\")).from(s).to(a);\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> B\")).from(s).to(b);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> C\")).from(a).to(c);\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> D\")).from(a).to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> E\")).from(b).to(e);\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> F\")).from(b).to(f);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> H\")).from(e).to(h);\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> G\")).from(e).to(g);\n",
                        "\n",
                        "                                expected.add(s);\n",
                        "                                expected.add(b);\n",
                        "                                expected.add(f);\n",
                        "                                expected.add(e);\n",
                        "                                expected.add(g);\n",
                        "                                expected.add(h);\n",
                        "                                expected.add(a);\n",
                        "                                expected.add(d);\n",
                        "                                expected.add(c);\n",
                        "                            }\n",
                        "                        });\n",
                        "        visit(input);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyDepthFirstSearch_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<BaseLabeledVertex>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "354-357:visit"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVerifyDepthFirstSearch_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "397-437:testVerifyDepthFirstSearch_test0_decomposed": {
                    "start": 397,
                    "end": 437,
                    "body": [
                        "    public void testVerifyDepthFirstSearch_test0_decomposed()  {\n",
                        "        final List<BaseLabeledVertex> expected = new ArrayList<BaseLabeledVertex>();\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"A\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"B\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"C\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"D\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"E\"));\n",
                        "                                BaseLabeledVertex f = addVertex(new BaseLabeledVertex(\"F\"));\n",
                        "                                BaseLabeledVertex g = addVertex(new BaseLabeledVertex(\"G\"));\n",
                        "                                BaseLabeledVertex h = addVertex(new BaseLabeledVertex(\"H\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"S\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> A\")).from(s).to(a);\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> B\")).from(s).to(b);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> C\")).from(a).to(c);\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> D\")).from(a).to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> E\")).from(b).to(e);\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> F\")).from(b).to(f);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> H\")).from(e).to(h);\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> G\")).from(e).to(g);\n",
                        "\n",
                        "                                expected.add(s);\n",
                        "                                expected.add(b);\n",
                        "                                expected.add(f);\n",
                        "                                expected.add(e);\n",
                        "                                expected.add(g);\n",
                        "                                expected.add(h);\n",
                        "                                expected.add(a);\n",
                        "                                expected.add(d);\n",
                        "                                expected.add(c);\n",
                        "                            }\n",
                        "                        });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyDepthFirstSearch_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<BaseLabeledVertex>()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVerifyDepthFirstSearch_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "332-394:testVerifyBreadthFirstSearch_test4_decomposed": {
                    "start": 332,
                    "end": 394,
                    "body": [
                        "    public void testVerifyBreadthFirstSearch_test4_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> x\")).from(t).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"y <-> u\")).from(y).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n",
                        "                        });\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> expected =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n",
                        "                        });\n",
                        "        visit(input);\n",
                        "        visit(input).from(new BaseLabeledVertex(\"s\"));\n",
                        "        Graph<BaseLabeledVertex, BaseLabeledEdge> actual =\n",
                        "                visit(input).from(new BaseLabeledVertex(\"s\")).applyingBreadthFirstSearch0();\n",
                        "        assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyBreadthFirstSearch_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitAlgorithmsSelector",
                            "applyingBreadthFirstSearch0()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "354-357:visit"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVerifyBreadthFirstSearch_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "268-329:testVerifyBreadthFirstSearch_test3_decomposed": {
                    "start": 268,
                    "end": 329,
                    "body": [
                        "    public void testVerifyBreadthFirstSearch_test3_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> x\")).from(t).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"y <-> u\")).from(y).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n",
                        "                        });\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> expected =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n",
                        "                        });\n",
                        "        visit(input);\n",
                        "        visit(input).from(new BaseLabeledVertex(\"s\"));\n",
                        "        Graph<BaseLabeledVertex, BaseLabeledEdge> actual =\n",
                        "                visit(input).from(new BaseLabeledVertex(\"s\")).applyingBreadthFirstSearch0();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyBreadthFirstSearch_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitAlgorithmsSelector",
                            "applyingBreadthFirstSearch0()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "354-357:visit"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVerifyBreadthFirstSearch_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "206-265:testVerifyBreadthFirstSearch_test2_decomposed": {
                    "start": 206,
                    "end": 265,
                    "body": [
                        "    public void testVerifyBreadthFirstSearch_test2_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> x\")).from(t).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"y <-> u\")).from(y).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n",
                        "                        });\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> expected =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n",
                        "                        });\n",
                        "        visit(input);\n",
                        "        visit(input).from(new BaseLabeledVertex(\"s\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyBreadthFirstSearch_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "354-357:visit"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVerifyBreadthFirstSearch_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "145-203:testVerifyBreadthFirstSearch_test1_decomposed": {
                    "start": 145,
                    "end": 203,
                    "body": [
                        "    public void testVerifyBreadthFirstSearch_test1_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> x\")).from(t).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"y <-> u\")).from(y).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n",
                        "                        });\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> expected =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n",
                        "                        });\n",
                        "        visit(input);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyBreadthFirstSearch_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "354-357:visit"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVerifyBreadthFirstSearch_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "85-142:testVerifyBreadthFirstSearch_test0_decomposed": {
                    "start": 85,
                    "end": 142,
                    "body": [
                        "    public void testVerifyBreadthFirstSearch_test0_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> x\")).from(t).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"y <-> u\")).from(y).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n",
                        "                        });\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> expected =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n",
                        "                        });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyBreadthFirstSearch_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVerifyBreadthFirstSearch_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "73-82:testNotExistVertex_test2_decomposed": {
                    "start": 73,
                    "end": 82,
                    "body": [
                        "    public void testNotExistVertex_test2_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {}\n",
                        "                        });\n",
                        "        visit(input);\n",
                        "        visit(input).from(new BaseLabeledVertex(\"NOT EXIST\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = IllegalStateException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotExistVertex_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "354-357:visit"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/VisitSourceSelector",
                            "from(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotExistVertex_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "62-70:testNotExistVertex_test1_decomposed": {
                    "start": 62,
                    "end": 70,
                    "body": [
                        "    public void testNotExistVertex_test1_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {}\n",
                        "                        });\n",
                        "        visit(input);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotExistVertex_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "354-357:visit"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotExistVertex_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "52-59:testNotExistVertex_test0_decomposed": {
                    "start": 52,
                    "end": 59,
                    "body": [
                        "    public void testNotExistVertex_test0_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n",
                        "\n",
                        "                            public void connect0() {}\n",
                        "                        });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNotExistVertex_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNotExistVertex_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class VisitTestCase(unittest.TestCase):\n\n"
        },
        "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>(...) { ... }": {
            "start": 55,
            "end": 55,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "VisitTestCase",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "57-57:connect0": {
                    "start": 57,
                    "end": 57,
                    "body": [
                        "                            public void connect0() {}\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "67-67:connect0": {
                    "start": 67,
                    "end": 67,
                    "body": [
                        "                            public void connect0() {}\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "78-78:connect0": {
                    "start": 78,
                    "end": 78,
                    "body": [
                        "                            public void connect0() {}\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "90-113:connect0": {
                    "start": 90,
                    "end": 113,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> x\")).from(t).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"y <-> u\")).from(y).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ]
                    ],
                    "is_overload": true
                },
                "119-140:connect0": {
                    "start": 119,
                    "end": 140,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ]
                    ],
                    "is_overload": true
                },
                "150-173:connect0": {
                    "start": 150,
                    "end": 173,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> x\")).from(t).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"y <-> u\")).from(y).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ]
                    ],
                    "is_overload": true
                },
                "179-200:connect0": {
                    "start": 179,
                    "end": 200,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ]
                    ],
                    "is_overload": true
                },
                "211-234:connect0": {
                    "start": 211,
                    "end": 234,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> x\")).from(t).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"y <-> u\")).from(y).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ]
                    ],
                    "is_overload": true
                },
                "240-261:connect0": {
                    "start": 240,
                    "end": 261,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ]
                    ],
                    "is_overload": true
                },
                "273-296:connect0": {
                    "start": 273,
                    "end": 296,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> x\")).from(t).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"y <-> u\")).from(y).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ]
                    ],
                    "is_overload": true
                },
                "302-323:connect0": {
                    "start": 302,
                    "end": 323,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ]
                    ],
                    "is_overload": true
                },
                "337-360:connect0": {
                    "start": 337,
                    "end": 360,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> x\")).from(t).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"y <-> u\")).from(y).to(u);\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ]
                    ],
                    "is_overload": true
                },
                "366-387:connect0": {
                    "start": 366,
                    "end": 387,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex r = addVertex(new BaseLabeledVertex(\"r\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"s\"));\n",
                        "                                BaseLabeledVertex t = addVertex(new BaseLabeledVertex(\"t\"));\n",
                        "                                BaseLabeledVertex u = addVertex(new BaseLabeledVertex(\"u\"));\n",
                        "                                BaseLabeledVertex v = addVertex(new BaseLabeledVertex(\"v\"));\n",
                        "                                BaseLabeledVertex w = addVertex(new BaseLabeledVertex(\"w\"));\n",
                        "                                BaseLabeledVertex x = addVertex(new BaseLabeledVertex(\"x\"));\n",
                        "                                BaseLabeledVertex y = addVertex(new BaseLabeledVertex(\"y\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> r\")).from(s).to(r);\n",
                        "                                addEdge(new BaseLabeledEdge(\"s <-> w\")).from(s).to(w);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"r <-> v\")).from(r).to(v);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> t\")).from(w).to(t);\n",
                        "                                addEdge(new BaseLabeledEdge(\"w <-> x\")).from(w).to(x);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"t <-> u\")).from(t).to(u);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"x <-> y\")).from(x).to(y);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ]
                    ],
                    "is_overload": true
                },
                "403-435:connect0": {
                    "start": 403,
                    "end": 435,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"A\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"B\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"C\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"D\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"E\"));\n",
                        "                                BaseLabeledVertex f = addVertex(new BaseLabeledVertex(\"F\"));\n",
                        "                                BaseLabeledVertex g = addVertex(new BaseLabeledVertex(\"G\"));\n",
                        "                                BaseLabeledVertex h = addVertex(new BaseLabeledVertex(\"H\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"S\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> A\")).from(s).to(a);\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> B\")).from(s).to(b);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> C\")).from(a).to(c);\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> D\")).from(a).to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> E\")).from(b).to(e);\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> F\")).from(b).to(f);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> H\")).from(e).to(h);\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> G\")).from(e).to(g);\n",
                        "\n",
                        "                                expected.add(s);\n",
                        "                                expected.add(b);\n",
                        "                                expected.add(f);\n",
                        "                                expected.add(e);\n",
                        "                                expected.add(g);\n",
                        "                                expected.add(h);\n",
                        "                                expected.add(a);\n",
                        "                                expected.add(d);\n",
                        "                                expected.add(c);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add"
                        ]
                    ],
                    "is_overload": true
                },
                "446-478:connect0": {
                    "start": 446,
                    "end": 478,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"A\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"B\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"C\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"D\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"E\"));\n",
                        "                                BaseLabeledVertex f = addVertex(new BaseLabeledVertex(\"F\"));\n",
                        "                                BaseLabeledVertex g = addVertex(new BaseLabeledVertex(\"G\"));\n",
                        "                                BaseLabeledVertex h = addVertex(new BaseLabeledVertex(\"H\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"S\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> A\")).from(s).to(a);\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> B\")).from(s).to(b);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> C\")).from(a).to(c);\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> D\")).from(a).to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> E\")).from(b).to(e);\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> F\")).from(b).to(f);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> H\")).from(e).to(h);\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> G\")).from(e).to(g);\n",
                        "\n",
                        "                                expected.add(s);\n",
                        "                                expected.add(b);\n",
                        "                                expected.add(f);\n",
                        "                                expected.add(e);\n",
                        "                                expected.add(g);\n",
                        "                                expected.add(h);\n",
                        "                                expected.add(a);\n",
                        "                                expected.add(d);\n",
                        "                                expected.add(c);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add"
                        ]
                    ],
                    "is_overload": true
                },
                "490-522:connect0": {
                    "start": 490,
                    "end": 522,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"A\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"B\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"C\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"D\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"E\"));\n",
                        "                                BaseLabeledVertex f = addVertex(new BaseLabeledVertex(\"F\"));\n",
                        "                                BaseLabeledVertex g = addVertex(new BaseLabeledVertex(\"G\"));\n",
                        "                                BaseLabeledVertex h = addVertex(new BaseLabeledVertex(\"H\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"S\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> A\")).from(s).to(a);\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> B\")).from(s).to(b);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> C\")).from(a).to(c);\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> D\")).from(a).to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> E\")).from(b).to(e);\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> F\")).from(b).to(f);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> H\")).from(e).to(h);\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> G\")).from(e).to(g);\n",
                        "\n",
                        "                                expected.add(s);\n",
                        "                                expected.add(b);\n",
                        "                                expected.add(f);\n",
                        "                                expected.add(e);\n",
                        "                                expected.add(g);\n",
                        "                                expected.add(h);\n",
                        "                                expected.add(a);\n",
                        "                                expected.add(d);\n",
                        "                                expected.add(c);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add"
                        ]
                    ],
                    "is_overload": true
                },
                "535-567:connect0": {
                    "start": 535,
                    "end": 567,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"A\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"B\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"C\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"D\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"E\"));\n",
                        "                                BaseLabeledVertex f = addVertex(new BaseLabeledVertex(\"F\"));\n",
                        "                                BaseLabeledVertex g = addVertex(new BaseLabeledVertex(\"G\"));\n",
                        "                                BaseLabeledVertex h = addVertex(new BaseLabeledVertex(\"H\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"S\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> A\")).from(s).to(a);\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> B\")).from(s).to(b);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> C\")).from(a).to(c);\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> D\")).from(a).to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> E\")).from(b).to(e);\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> F\")).from(b).to(f);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> H\")).from(e).to(h);\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> G\")).from(e).to(g);\n",
                        "\n",
                        "                                expected.add(s);\n",
                        "                                expected.add(b);\n",
                        "                                expected.add(f);\n",
                        "                                expected.add(e);\n",
                        "                                expected.add(g);\n",
                        "                                expected.add(h);\n",
                        "                                expected.add(a);\n",
                        "                                expected.add(d);\n",
                        "                                expected.add(c);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add"
                        ]
                    ],
                    "is_overload": true
                },
                "584-616:connect0": {
                    "start": 584,
                    "end": 616,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"A\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"B\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"C\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"D\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"E\"));\n",
                        "                                BaseLabeledVertex f = addVertex(new BaseLabeledVertex(\"F\"));\n",
                        "                                BaseLabeledVertex g = addVertex(new BaseLabeledVertex(\"G\"));\n",
                        "                                BaseLabeledVertex h = addVertex(new BaseLabeledVertex(\"H\"));\n",
                        "                                BaseLabeledVertex s = addVertex(new BaseLabeledVertex(\"S\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> A\")).from(s).to(a);\n",
                        "                                addEdge(new BaseLabeledEdge(\"S <-> B\")).from(s).to(b);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> C\")).from(a).to(c);\n",
                        "                                addEdge(new BaseLabeledEdge(\"A <-> D\")).from(a).to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> E\")).from(b).to(e);\n",
                        "                                addEdge(new BaseLabeledEdge(\"B <-> F\")).from(b).to(f);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> H\")).from(e).to(h);\n",
                        "                                addEdge(new BaseLabeledEdge(\"E <-> G\")).from(e).to(g);\n",
                        "\n",
                        "                                expected.add(s);\n",
                        "                                expected.add(b);\n",
                        "                                expected.add(f);\n",
                        "                                expected.add(e);\n",
                        "                                expected.add(g);\n",
                        "                                expected.add(h);\n",
                        "                                expected.add(a);\n",
                        "                                expected.add(d);\n",
                        "                                expected.add(c);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledEdge",
                            "BaseLabeledEdge",
                            "35-37:BaseLabeledEdge"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add"
                        ]
                    ],
                    "is_overload": true
                },
                "53-55:": {
                    "start": 53,
                    "end": 55,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "63-65:": {
                    "start": 63,
                    "end": 65,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "74-76:": {
                    "start": 74,
                    "end": 76,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "86-88:": {
                    "start": 86,
                    "end": 88,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "115-117:": {
                    "start": 115,
                    "end": 117,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> expected =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "146-148:": {
                    "start": 146,
                    "end": 148,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "175-177:": {
                    "start": 175,
                    "end": 177,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> expected =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "207-209:": {
                    "start": 207,
                    "end": 209,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "236-238:": {
                    "start": 236,
                    "end": 238,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> expected =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "269-271:": {
                    "start": 269,
                    "end": 271,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "298-300:": {
                    "start": 298,
                    "end": 300,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> expected =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "333-335:": {
                    "start": 333,
                    "end": 335,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "362-364:": {
                    "start": 362,
                    "end": 364,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> expected =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "399-401:": {
                    "start": 399,
                    "end": 401,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "442-444:": {
                    "start": 442,
                    "end": 444,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "486-488:": {
                    "start": 486,
                    "end": 488,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "531-533:": {
                    "start": 531,
                    "end": 533,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                },
                "580-582:": {
                    "start": 580,
                    "end": 582,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledEdge> input =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<BaseLabeledVertex, BaseLabeledEdge>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": true
                }
            },
            "fields": {}
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import os",
        "import unittest",
        "from src.main.org.apache.commons.graph.CommonsGraph import *",
        "from src.main.org.apache.commons.graph.Graph import *",
        "from src.main.org.apache.commons.graph.builder.GraphConnection import *",
        "from src.test.org.apache.commons.graph.model.BaseLabeledVertex import *",
        "from src.main.org.apache.commons.graph.model.UndirectedMutableGraph import *",
        "from src.main.org.apache.commons.graph.visit.GraphVisitHandler import *",
        "from src.test.org.apache.commons.graph.visit.NodeSequenceVisitor import *",
        "from src.main.org.apache.commons.graph.visit.VisitAlgorithmsSelector import *",
        "from src.main.org.apache.commons.graph.visit.VisitSourceSelector import *",
        "from src.main.org.apache.commons.graph.builder.AbstractGraphConnection import *",
        "from src.test.org.apache.commons.graph.model.BaseLabeledEdge import *",
        "from src.main.org.apache.commons.graph.builder.HeadVertexConnector import *",
        "from src.main.org.apache.commons.graph.builder.TailVertexConnector import *"
    ]
}