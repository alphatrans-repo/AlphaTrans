{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-exec/src/test/java/org/apache/commons/exec/issues/Exec62Test.java",
    "imports": {
        "21-21:import OutputStream": {
            "start": 21,
            "end": 21,
            "body": [
                "import java.io.OutputStream;\n"
            ]
        },
        "20-20:import File": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.io.File;\n"
            ]
        },
        "23-23:import Path": {
            "start": 23,
            "end": 23,
            "body": [
                "import java.nio.file.Path;\n"
            ]
        },
        "24-24:import TimeUnit": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.util.concurrent.TimeUnit;\n"
            ]
        },
        "22-22:import Files": {
            "start": 22,
            "end": 22,
            "body": [
                "import java.nio.file.Files;\n"
            ]
        },
        "25-25:import TimeoutException": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.util.concurrent.TimeoutException;\n"
            ]
        },
        "27-27:import CommandLine": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.apache.commons.exec.CommandLine;\n"
            ]
        },
        "36-36:import Test": {
            "start": 36,
            "end": 36,
            "body": [
                "import org.junit.jupiter.api.Test;\n"
            ]
        },
        "28-28:import DefaultExecutor": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.apache.commons.exec.DefaultExecutor;\n"
            ]
        },
        "29-29:import ExecuteWatchdog": {
            "start": 29,
            "end": 29,
            "body": [
                "import org.apache.commons.exec.ExecuteWatchdog;\n"
            ]
        },
        "30-30:import OS": {
            "start": 30,
            "end": 30,
            "body": [
                "import org.apache.commons.exec.OS;\n"
            ]
        },
        "31-31:import PumpStreamHandler": {
            "start": 31,
            "end": 31,
            "body": [
                "import org.apache.commons.exec.PumpStreamHandler;\n"
            ]
        },
        "32-32:import TestUtil": {
            "start": 32,
            "end": 32,
            "body": [
                "import org.apache.commons.exec.TestUtil;\n"
            ]
        },
        "33-33:import AfterEach": {
            "start": 33,
            "end": 33,
            "body": [
                "import org.junit.jupiter.api.AfterEach;\n"
            ]
        },
        "34-34:import BeforeEach": {
            "start": 34,
            "end": 34,
            "body": [
                "import org.junit.jupiter.api.BeforeEach;\n"
            ]
        },
        "35-35:import Disabled": {
            "start": 35,
            "end": 35,
            "body": [
                "import org.junit.jupiter.api.Disabled;\n"
            ]
        },
        "37-37:import Timeout": {
            "start": 37,
            "end": 37,
            "body": [
                "import org.junit.jupiter.api.Timeout;\n"
            ]
        }
    },
    "classes": {
        "Exec62Test": {
            "start": 42,
            "end": 42,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "80-84:testMe": {
                    "start": 80,
                    "end": 84,
                    "body": [
                        "    public void testMe() throws Exception {\n",
                        "        if (OS.isFamilyUnix()) {\n",
                        "            execute(\"exec-62\");\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Disabled(\"Test behaves differently between macOS X and Linux - don't know why\")",
                        "Test",
                        "Timeout(value = 10, unit = TimeUnit.SECONDS)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testMe()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-exec.src.main.org.apache.commons.exec.OS",
                            "OS",
                            "173-175:isFamilyUnix"
                        ],
                        [
                            "commons-exec.src.test.org.apache.commons.exec.issues.Exec62Test",
                            "Exec62Test",
                            "45-65:execute"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testMe(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "73-75:tearDown": {
                    "start": 73,
                    "end": 75,
                    "body": [
                        "    public void tearDown() throws Exception {\n",
                        "        Files.delete(outputFile);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "AfterEach"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "tearDown()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/file/Files",
                            "delete(java.nio.file.Path)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def tearDown(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "68-70:setUp": {
                    "start": 68,
                    "end": 70,
                    "body": [
                        "    public void setUp() throws Exception {\n",
                        "        outputFile = Files.createTempFile(\"foo\", \".log\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "BeforeEach"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setUp()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/file/Files",
                            "createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def setUp(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "45-65:execute": {
                    "start": 45,
                    "end": 65,
                    "body": [
                        "    private void execute(final String scriptName) throws Exception {\n",
                        "        final ExecuteWatchdog watchdog = ExecuteWatchdog.ExecuteWatchdog0(4000);\n",
                        "        final CommandLine commandLine = new CommandLine(2, null, null, \"/bin/sh\");\n",
                        "        final File testScript = TestUtil.resolveScriptForOS(\"./src/test/scripts/issues/\" + scriptName);\n",
                        "\n",
                        "        commandLine.addArgument0(testScript.getAbsolutePath());\n",
                        "\n",
                        "        final DefaultExecutor executor = DefaultExecutor.builder().get();\n",
                        "        executor.setExitValues(null); // ignore exit values\n",
                        "        executor.setWatchdog(watchdog);\n",
                        "\n",
                        "        try (OutputStream fos = Files.newOutputStream(outputFile)) {\n",
                        "            final PumpStreamHandler streamHandler = PumpStreamHandler.PumpStreamHandler1(fos);\n",
                        "            executor.setStreamHandler(streamHandler);\n",
                        "            executor.execute0(commandLine);\n",
                        "\n",
                        "            if (watchdog.killedProcess()) {\n",
                        "                throw new TimeoutException(String.format(\"Transcode process was killed on timeout %1$s ms, command line %2$s\", 4000, commandLine.toString()));\n",
                        "            }\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute(String)",
                    "parameters": [
                        "scriptName"
                    ],
                    "calls": [
                        [
                            "commons-exec.src.main.org.apache.commons.exec.ExecuteWatchdog",
                            "ExecuteWatchdog",
                            "147-149:ExecuteWatchdog0"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.CommandLine",
                            "CommandLine",
                            "192-208:CommandLine"
                        ],
                        [
                            "commons-exec.src.test.org.apache.commons.exec.TestUtil",
                            "TestUtil",
                            "47-59:resolveScriptForOS"
                        ],
                        [
                            "library",
                            "org/apache/commons/exec/DefaultExecutor$Builder",
                            "get()"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.DefaultExecutor",
                            "DefaultExecutor",
                            "131-133:builder"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.CommandLine",
                            "CommandLine",
                            "239-241:addArgument0"
                        ],
                        [
                            "library",
                            "java.base/java/io/File",
                            "getAbsolutePath()"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.DefaultExecutor",
                            "DefaultExecutor",
                            "478-480:setExitValues"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.DefaultExecutor",
                            "DefaultExecutor",
                            "509-511:setWatchdog"
                        ],
                        [
                            "library",
                            "java.base/java/nio/file/Files",
                            "newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.PumpStreamHandler",
                            "PumpStreamHandler",
                            "76-78:PumpStreamHandler1"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.DefaultExecutor",
                            "DefaultExecutor",
                            "494-496:setStreamHandler"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.DefaultExecutor",
                            "DefaultExecutor",
                            "234-237:execute0"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.ExecuteWatchdog",
                            "ExecuteWatchdog",
                            "241-243:killedProcess"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/TimeoutException",
                            "TimeoutException(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "format(java.lang.String,java.lang.Object[])"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.CommandLine",
                            "CommandLine",
                            "413-415:toString"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __execute(self, scriptName: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "43-43:outputFile": {
                    "start": 43,
                    "end": 43,
                    "body": [
                        "    private Path outputFile;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "Path",
                            "java.nio.file.Path"
                        ]
                    ],
                    "partial_translation": [
                        "    __outputFile: Path = None",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class Exec62Test(unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import pathlib",
        "import io",
        "import unittest",
        "from src.main.org.apache.commons.exec.CommandLine import *",
        "from src.main.org.apache.commons.exec.DefaultExecutor import *",
        "from src.main.org.apache.commons.exec.ExecuteStreamHandler import *",
        "from src.main.org.apache.commons.exec.ExecuteWatchdog import *",
        "from src.main.org.apache.commons.exec.OS import *",
        "from src.main.org.apache.commons.exec.PumpStreamHandler import *",
        "from src.test.org.apache.commons.exec.TestUtil import *"
    ]
}