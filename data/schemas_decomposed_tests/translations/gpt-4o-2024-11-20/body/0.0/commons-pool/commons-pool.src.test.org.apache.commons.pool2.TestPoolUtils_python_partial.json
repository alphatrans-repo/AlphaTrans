{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-pool/src/test/java/org/apache/commons/pool2/TestPoolUtils.java",
    "imports": {
        "38-38:import Map": {
            "start": 38,
            "end": 38,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "37-37:import List": {
            "start": 37,
            "end": 37,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "34-34:import Collection": {
            "start": 34,
            "end": 34,
            "body": [
                "import java.util.Collection;\n"
            ]
        },
        "30-30:import Method": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.lang.reflect.Method;\n"
            ]
        },
        "39-39:import Set": {
            "start": 39,
            "end": 39,
            "body": [
                "import java.util.Set;\n"
            ]
        },
        "29-29:import InvocationHandler": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.lang.reflect.InvocationHandler;\n"
            ]
        },
        "31-31:import Proxy": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.lang.reflect.Proxy;\n"
            ]
        },
        "32-32:import ArrayList": {
            "start": 32,
            "end": 32,
            "body": [
                "import java.util.ArrayList;\n"
            ]
        },
        "33-33:import Arrays": {
            "start": 33,
            "end": 33,
            "body": [
                "import java.util.Arrays;\n"
            ]
        },
        "35-35:import Collections": {
            "start": 35,
            "end": 35,
            "body": [
                "import java.util.Collections;\n"
            ]
        },
        "36-36:import HashSet": {
            "start": 36,
            "end": 36,
            "body": [
                "import java.util.HashSet;\n"
            ]
        },
        "40-40:import TimerTask": {
            "start": 40,
            "end": 40,
            "body": [
                "import java.util.TimerTask;\n"
            ]
        },
        "26-26:import Test": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.junit.jupiter.api.Test;\n"
            ]
        },
        "25-25:import DefaultPooledObject": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.apache.commons.pool2.impl.DefaultPooledObject;\n"
            ]
        },
        "27-27:import AssertionFailedError": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.opentest4j.AssertionFailedError;\n"
            ]
        },
        "20-20:import static Assertions.assertEquals": {
            "start": 20,
            "end": 20,
            "body": [
                "import static org.junit.jupiter.api.Assertions.assertEquals;\n"
            ]
        },
        "22-22:import static Assertions.assertThrows": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.junit.jupiter.api.Assertions.assertThrows;\n"
            ]
        },
        "23-23:import static Assertions.fail": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.junit.jupiter.api.Assertions.fail;\n"
            ]
        },
        "21-21:import static Assertions.assertNotNull": {
            "start": 21,
            "end": 21,
            "body": [
                "import static org.junit.jupiter.api.Assertions.assertNotNull;\n"
            ]
        }
    },
    "classes": {
        "MethodCallLogger": {
            "start": 49,
            "end": 49,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "TestPoolUtils",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "57-79:invoke": {
                    "start": 57,
                    "end": 79,
                    "body": [
                        "        public Object invoke(final Object proxy, final Method method, final Object[] args)\n",
                        "                throws Throwable {\n",
                        "            if (calledMethods == null) {\n",
                        "                return null;\n",
                        "            }\n",
                        "            calledMethods.add(method.getName());\n",
                        "            if (boolean.class.equals(method.getReturnType())) {\n",
                        "                return Boolean.FALSE;\n",
                        "            }\n",
                        "            if (int.class.equals(method.getReturnType())) {\n",
                        "                return Integer.valueOf(0);\n",
                        "            }\n",
                        "            if (long.class.equals(method.getReturnType())) {\n",
                        "                return Long.valueOf(0);\n",
                        "            }\n",
                        "            if (Object.class.equals(method.getReturnType())) {\n",
                        "                return new Object();\n",
                        "            }\n",
                        "            if (PooledObject.class.equals(method.getReturnType())) {\n",
                        "                return new DefaultPooledObject<>(new Object());\n",
                        "            }\n",
                        "            return null;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "invoke(Object, Method, Object[])",
                    "parameters": [
                        "proxy",
                        "method",
                        "args"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/reflect/Method",
                            "getName()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "equals(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/reflect/Method",
                            "getReturnType()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "valueOf(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "Object()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/impl/DefaultPooledObject",
                            "DefaultPooledObject<Object>(java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def invoke(self, proxy: typing.Any, method: typing.Union[inspect.Signature, typing.Callable], args: typing.List[typing.Any]) -> typing.Any:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "52-54:MethodCallLogger": {
                    "start": 52,
                    "end": 54,
                    "body": [
                        "        MethodCallLogger(final List<String> calledMethods) {\n",
                        "            this.calledMethods = calledMethods;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "MethodCallLogger(List<String>)",
                    "parameters": [
                        "calledMethods"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, calledMethods: typing.List[str]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "50-50:calledMethods": {
                    "start": 50,
                    "end": 50,
                    "body": [
                        "        private final List<String> calledMethods;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "List<String>",
                            "java.util.List<String>"
                        ]
                    ],
                    "partial_translation": [
                        "    __calledMethods: typing.List[str] = None",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class MethodCallLogger():\n\n"
        },
        "TestPoolUtils": {
            "start": 47,
            "end": 47,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "MethodCallLogger",
                "new Executable(...) { ... }",
                "new Executable(...) { ... }",
                "new Executable(...) { ... }",
                "new Executable(...) { ... }",
                "new Executable(...) { ... }",
                "new Executable(...) { ... }",
                "new Executable(...) { ... }",
                "new Executable(...) { ... }",
                "new Executable(...) { ... }",
                "new Executable(...) { ... }",
                "new InvocationHandler(...) { ... }",
                "new InvocationHandler(...) { ... }"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "511-515:testTimerHolder_test1_decomposed": {
                    "start": 511,
                    "end": 515,
                    "body": [
                        "    public void testTimerHolder_test1_decomposed()  {\n",
                        "        final PoolUtils.TimerHolder h = new PoolUtils.TimerHolder();\n",
                        "        assertNotNull(h);\n",
                        "        assertNotNull(PoolUtils.TimerHolder.MIN_IDLE_TIMER);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testTimerHolder_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "TimerHolder",
                            "TimerHolder"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertNotNull(java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testTimerHolder_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "506-508:testTimerHolder_test0_decomposed": {
                    "start": 506,
                    "end": 508,
                    "body": [
                        "    public void testTimerHolder_test0_decomposed()  {\n",
                        "        final PoolUtils.TimerHolder h = new PoolUtils.TimerHolder();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testTimerHolder_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "TimerHolder",
                            "TimerHolder"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testTimerHolder_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "490-503:testSynchronizedPoolObjectPool_test1_decomposed": {
                    "start": 490,
                    "end": 503,
                    "body": [
                        "    public void testSynchronizedPoolObjectPool_test1_decomposed() throws Exception {\n",
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.synchronizedPool1((ObjectPool<Object>) null),\n",
                        "                \"PoolUtils.synchronizedPool(ObjectPool) must not allow a null pool.\");\n",
                        "        final List<String> calledMethods = new ArrayList<>();\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                        final ObjectPool<Object> op =\n",
                        "                                createProxy1(ObjectPool.class, calledMethods);\n",
                        "                final ObjectPool<Object> sop = PoolUtils.synchronizedPool1(op)) {\n",
                        "            final List<String> expectedMethods = invokeEveryMethod2(sop);\n",
                        "            assertEquals(expectedMethods, calledMethods);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSynchronizedPoolObjectPool_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<String>()"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"
                        ],
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "100-102:createProxy1"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1502-1519:synchronizedPool1"
                        ],
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "152-173:invokeEveryMethod2"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSynchronizedPoolObjectPool_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "482-487:testSynchronizedPoolObjectPool_test0_decomposed": {
                    "start": 482,
                    "end": 487,
                    "body": [
                        "    public void testSynchronizedPoolObjectPool_test0_decomposed() throws Exception {\n",
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.synchronizedPool1((ObjectPool<Object>) null),\n",
                        "                \"PoolUtils.synchronizedPool(ObjectPool) must not allow a null pool.\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSynchronizedPoolObjectPool_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assertions",
                            "assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSynchronizedPoolObjectPool_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "466-479:testSynchronizedPoolKeyedObjectPool_test1_decomposed": {
                    "start": 466,
                    "end": 479,
                    "body": [
                        "    public void testSynchronizedPoolKeyedObjectPool_test1_decomposed() throws Exception {\n",
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.synchronizedPool0((KeyedObjectPool<Object, Object>) null),\n",
                        "                \"PoolUtils.synchronizedPool(KeyedObjectPool) must not allow a null pool.\");\n",
                        "        final List<String> calledMethods = new ArrayList<>();\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                        final KeyedObjectPool<Object, Object> kop =\n",
                        "                                createProxy1(KeyedObjectPool.class, calledMethods);\n",
                        "                final KeyedObjectPool<Object, Object> skop = PoolUtils.synchronizedPool0(kop)) {\n",
                        "            final List<String> expectedMethods = invokeEveryMethod0(skop);\n",
                        "            assertEquals(expectedMethods, calledMethods);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSynchronizedPoolKeyedObjectPool_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<String>()"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"
                        ],
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "100-102:createProxy1"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1475-1487:synchronizedPool0"
                        ],
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "104-132:invokeEveryMethod0"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSynchronizedPoolKeyedObjectPool_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "458-463:testSynchronizedPoolKeyedObjectPool_test0_decomposed": {
                    "start": 458,
                    "end": 463,
                    "body": [
                        "    public void testSynchronizedPoolKeyedObjectPool_test0_decomposed() throws Exception {\n",
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.synchronizedPool0((KeyedObjectPool<Object, Object>) null),\n",
                        "                \"PoolUtils.synchronizedPool(KeyedObjectPool) must not allow a null pool.\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSynchronizedPoolKeyedObjectPool_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assertions",
                            "assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testSynchronizedPoolKeyedObjectPool_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "437-455:testPrefillObjectPool_test1_decomposed": {
                    "start": 437,
                    "end": 455,
                    "body": [
                        "    public void testPrefillObjectPool_test1_decomposed() throws Exception {\n",
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.prefill2(null, 1),\n",
                        "                \"PoolUtils.prefill(ObjectPool,int) must not allow null pool.\");\n",
                        "        final List<String> calledMethods = new ArrayList<>();\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                final ObjectPool<Object> pool = createProxy1(ObjectPool.class, calledMethods)) {\n",
                        "\n",
                        "            PoolUtils.prefill2(pool, 0);\n",
                        "            final List<String> expectedMethods = new ArrayList<>();\n",
                        "            expectedMethods.add(\"addObjects\");\n",
                        "            assertEquals(expectedMethods, calledMethods);\n",
                        "\n",
                        "            calledMethods.clear();\n",
                        "            PoolUtils.prefill2(pool, 3);\n",
                        "            assertEquals(expectedMethods, calledMethods);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPrefillObjectPool_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<String>()"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"
                        ],
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "100-102:createProxy1"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1439-1445:prefill2"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(java.lang.String)"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "clear()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testPrefillObjectPool_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "429-434:testPrefillObjectPool_test0_decomposed": {
                    "start": 429,
                    "end": 434,
                    "body": [
                        "    public void testPrefillObjectPool_test0_decomposed() throws Exception {\n",
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.prefill2(null, 1),\n",
                        "                \"PoolUtils.prefill(ObjectPool,int) must not allow null pool.\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPrefillObjectPool_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assertions",
                            "assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testPrefillObjectPool_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "398-426:testPrefillKeyedObjectPoolCollection_test1_decomposed": {
                    "start": 398,
                    "end": 426,
                    "body": [
                        "    public void testPrefillKeyedObjectPoolCollection_test1_decomposed() throws Exception {\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                final KeyedObjectPool<String, String> pool =\n",
                        "                        createProxy1(KeyedObjectPool.class, (List<String>) null)) {\n",
                        "            assertThrows(\n",
                        "                    IllegalArgumentException.class,\n",
                        "                    () -> PoolUtils.prefill0(pool, (Collection<String>) null, 1),\n",
                        "                    \"PoolUtils.prefill(KeyedObjectPool,Collection,int) must not accept null keys.\");\n",
                        "        }\n",
                        "        final List<String> calledMethods = new ArrayList<>();\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                final KeyedObjectPool<String, Object> pool =\n",
                        "                        createProxy1(KeyedObjectPool.class, calledMethods)) {\n",
                        "\n",
                        "            final Set<String> keys = new HashSet<>();\n",
                        "            PoolUtils.prefill0(pool, keys, 0);\n",
                        "            final List<String> expectedMethods = new ArrayList<>();\n",
                        "            expectedMethods.add(\"addObjects0\");\n",
                        "            assertEquals(expectedMethods, calledMethods);\n",
                        "\n",
                        "            calledMethods.clear();\n",
                        "            keys.add(\"one\");\n",
                        "            keys.add(\"two\");\n",
                        "            keys.add(\"three\");\n",
                        "            final int count = 3;\n",
                        "            PoolUtils.prefill0(pool, keys, count);\n",
                        "            assertEquals(expectedMethods, calledMethods);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPrefillKeyedObjectPoolCollection_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<String>()"
                        ],
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "100-102:createProxy1"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashSet",
                            "HashSet<String>()"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1396-1403:prefill0"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(java.lang.String)"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "clear()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "add(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testPrefillKeyedObjectPoolCollection_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "386-395:testPrefillKeyedObjectPoolCollection_test0_decomposed": {
                    "start": 386,
                    "end": 395,
                    "body": [
                        "    public void testPrefillKeyedObjectPoolCollection_test0_decomposed() throws Exception {\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                final KeyedObjectPool<String, String> pool =\n",
                        "                        createProxy1(KeyedObjectPool.class, (List<String>) null)) {\n",
                        "            assertThrows(\n",
                        "                    IllegalArgumentException.class,\n",
                        "                    () -> PoolUtils.prefill0(pool, (Collection<String>) null, 1),\n",
                        "                    \"PoolUtils.prefill(KeyedObjectPool,Collection,int) must not accept null keys.\");\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPrefillKeyedObjectPoolCollection_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "100-102:createProxy1"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testPrefillKeyedObjectPoolCollection_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "381-383:testJavaBeanInstantiation_test0_decomposed": {
                    "start": 381,
                    "end": 383,
                    "body": [
                        "    public void testJavaBeanInstantiation_test0_decomposed()  {\n",
                        "        assertNotNull(new PoolUtils());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testJavaBeanInstantiation_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assertions",
                            "assertNotNull(java.lang.Object)"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1539-1539:PoolUtils"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testJavaBeanInstantiation_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "366-378:testErodingPoolKeyedObjectPoolDefaultFactor_test0_decomposed": {
                    "start": 366,
                    "end": 378,
                    "body": [
                        "    public void testErodingPoolKeyedObjectPoolDefaultFactor_test0_decomposed()  {\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                        final KeyedObjectPool<Object, Object> internalPool =\n",
                        "                                createProxy0(KeyedObjectPool.class, (arg0, arg1, arg2) -> null);\n",
                        "                final KeyedObjectPool<Object, Object> pool = PoolUtils.erodingPool0(internalPool)) {\n",
                        "            final String expectedToString =\n",
                        "                    \"ErodingKeyedObjectPool{factor=ErodingFactor{factor=1.0, idleHighWaterMark=1},\"\n",
                        "                            + \" keyedPool=\"\n",
                        "                            + internalPool\n",
                        "                            + \"}\";\n",
                        "            assertEquals(expectedToString, pool.toString());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testErodingPoolKeyedObjectPoolDefaultFactor_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "96-98:createProxy0"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1251-1253:erodingPool0"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "toString()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testErodingPoolKeyedObjectPoolDefaultFactor_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "352-363:testErodingObjectPoolDefaultFactor_test0_decomposed": {
                    "start": 352,
                    "end": 363,
                    "body": [
                        "    public void testErodingObjectPoolDefaultFactor_test0_decomposed()  {\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                        final ObjectPool<Object> internalPool =\n",
                        "                                createProxy0(ObjectPool.class, (arg0, arg1, arg2) -> null);\n",
                        "                final ObjectPool<Object> pool = PoolUtils.erodingPool3(internalPool)) {\n",
                        "            final String expectedToString =\n",
                        "                    \"ErodingObjectPool{factor=ErodingFactor{factor=1.0, idleHighWaterMark=1}, pool=\"\n",
                        "                            + internalPool\n",
                        "                            + \"}\";\n",
                        "            assertEquals(expectedToString, pool.toString());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testErodingObjectPoolDefaultFactor_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "96-98:createProxy0"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1336-1338:erodingPool3"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "toString()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testErodingObjectPoolDefaultFactor_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "322-349:testCheckRethrow_test0_decomposed": {
                    "start": 322,
                    "end": 349,
                    "body": [
                        "    public void testCheckRethrow_test0_decomposed()  {\n",
                        "        try {\n",
                        "            PoolUtils.checkRethrow(new Exception());\n",
                        "        } catch (final Throwable t) {\n",
                        "            fail(\n",
                        "                    \"PoolUtils.checkRethrow(Throwable) must rethrow only ThreadDeath and\"\n",
                        "                            + \" VirtualMachineError.\");\n",
                        "        }\n",
                        "        try {\n",
                        "            PoolUtils.checkRethrow(new ThreadDeath());\n",
                        "            fail(\"PoolUtils.checkRethrow(Throwable) must rethrow ThreadDeath.\");\n",
                        "        } catch (final ThreadDeath td) {\n",
                        "        } catch (final Throwable t) {\n",
                        "            fail(\n",
                        "                    \"PoolUtils.checkRethrow(Throwable) must rethrow only ThreadDeath and\"\n",
                        "                            + \" VirtualMachineError.\");\n",
                        "        }\n",
                        "        try {\n",
                        "            PoolUtils.checkRethrow(\n",
                        "                    new InternalError()); // InternalError extends VirtualMachineError\n",
                        "            fail(\"PoolUtils.checkRethrow(Throwable) must rethrow VirtualMachineError.\");\n",
                        "        } catch (final VirtualMachineError td) {\n",
                        "        } catch (final Throwable t) {\n",
                        "            fail(\n",
                        "                    \"PoolUtils.checkRethrow(Throwable) must rethrow only ThreadDeath and\"\n",
                        "                            + \" VirtualMachineError.\");\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCheckRethrow_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1227-1234:checkRethrow"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Exception",
                            "Exception()"
                        ],
                        [
                            "library",
                            "Assertions",
                            "fail(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/ThreadDeath",
                            "ThreadDeath()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/InternalError",
                            "InternalError()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCheckRethrow_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "300-319:testCheckMinIdleKeyedObjectPoolKeysNulls_test1_decomposed": {
                    "start": 300,
                    "end": 319,
                    "body": [
                        "    public void testCheckMinIdleKeyedObjectPoolKeysNulls_test1_decomposed()  {\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                final KeyedObjectPool<Object, Object> pool =\n",
                        "                        createProxy1(KeyedObjectPool.class, (List<String>) null)) {\n",
                        "            assertThrows(\n",
                        "                    IllegalArgumentException.class,\n",
                        "                    () -> PoolUtils.checkMinIdle1(pool, (Collection<?>) null, 1, 1),\n",
                        "                    \"PoolUtils.checkMinIdle(KeyedObjectPool,Collection,int,long) must not accept\"\n",
                        "                            + \" null keys.\");\n",
                        "        }\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                final KeyedObjectPool<Object, Object> pool =\n",
                        "                        createProxy1(KeyedObjectPool.class, (List<String>) null)) {\n",
                        "            PoolUtils.checkMinIdle1(pool, (Collection<?>) Collections.emptyList(), 1, 1);\n",
                        "        } catch (final IllegalArgumentException iae) {\n",
                        "            fail(\n",
                        "                    \"PoolUtils.checkMinIdle(KeyedObjectPool,Collection,int,long) must accept empty\"\n",
                        "                            + \" lists.\");\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCheckMinIdleKeyedObjectPoolKeysNulls_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "100-102:createProxy1"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1168-1186:checkMinIdle1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collections",
                            "emptyList()"
                        ],
                        [
                            "library",
                            "Assertions",
                            "fail(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCheckMinIdleKeyedObjectPoolKeysNulls_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "287-297:testCheckMinIdleKeyedObjectPoolKeysNulls_test0_decomposed": {
                    "start": 287,
                    "end": 297,
                    "body": [
                        "    public void testCheckMinIdleKeyedObjectPoolKeysNulls_test0_decomposed()  {\n",
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                final KeyedObjectPool<Object, Object> pool =\n",
                        "                        createProxy1(KeyedObjectPool.class, (List<String>) null)) {\n",
                        "            assertThrows(\n",
                        "                    IllegalArgumentException.class,\n",
                        "                    () -> PoolUtils.checkMinIdle1(pool, (Collection<?>) null, 1, 1),\n",
                        "                    \"PoolUtils.checkMinIdle(KeyedObjectPool,Collection,int,long) must not accept\"\n",
                        "                            + \" null keys.\");\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCheckMinIdleKeyedObjectPoolKeysNulls_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "100-102:createProxy1"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCheckMinIdleKeyedObjectPoolKeysNulls_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "250-284:testCheckMinIdleKeyedObjectPoolKeys_test1_decomposed": {
                    "start": 250,
                    "end": 284,
                    "body": [
                        "    public void testCheckMinIdleKeyedObjectPoolKeys_test1_decomposed() throws Exception {\n",
                        "        AssertionFailedError afe = null;\n",
                        "        int triesLeft = 3;\n",
                        "        do {\n",
                        "            afe = null;\n",
                        "            final List<String> calledMethods = new ArrayList<>();\n",
                        "            try (@SuppressWarnings(\"unchecked\")\n",
                        "                    final KeyedObjectPool<String, Object> pool =\n",
                        "                            createProxy1(KeyedObjectPool.class, calledMethods)) {\n",
                        "                final Collection<String> keys = new ArrayList<>(2);\n",
                        "                keys.add(\"one\");\n",
                        "                keys.add(\"two\");\n",
                        "                final Map<String, TimerTask> tasks =\n",
                        "                        PoolUtils.checkMinIdle0(pool, keys, 1, CHECK_PERIOD);\n",
                        "\n",
                        "                Thread.sleep(CHECK_SLEEP_PERIOD); // will check CHECK_COUNT more times.\n",
                        "                for (final TimerTask task : tasks.values()) {\n",
                        "                    task.cancel();\n",
                        "                }\n",
                        "\n",
                        "                final List<String> expectedMethods = new ArrayList<>();\n",
                        "                for (int i = 0; i < CHECK_COUNT * keys.size(); i++) {\n",
                        "                    expectedMethods.add(\"getNumIdle1\");\n",
                        "                    expectedMethods.add(\"addObject\");\n",
                        "                }\n",
                        "                assertEquals(\n",
                        "                        expectedMethods, calledMethods); // may fail because of the thread scheduler\n",
                        "            } catch (final AssertionFailedError e) {\n",
                        "                afe = e;\n",
                        "            }\n",
                        "        } while (--triesLeft > 0 && afe != null);\n",
                        "        if (afe != null) {\n",
                        "            throw afe;\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCheckMinIdleKeyedObjectPoolKeys_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<String>()"
                        ],
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "100-102:createProxy1"
                        ],
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<String>(int)"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1131-1148:checkMinIdle0"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "add(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Thread",
                            "sleep(long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "values()"
                        ],
                        [
                            "library",
                            "java.base/java/util/TimerTask",
                            "cancel()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "size()"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(java.lang.String)"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCheckMinIdleKeyedObjectPoolKeys_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "216-247:testCheckMinIdleKeyedObjectPoolKeys_test0_decomposed": {
                    "start": 216,
                    "end": 247,
                    "body": [
                        "    public void testCheckMinIdleKeyedObjectPoolKeys_test0_decomposed() throws Exception {\n",
                        "        AssertionFailedError afe = null;\n",
                        "        int triesLeft = 3;\n",
                        "        do {\n",
                        "            afe = null;\n",
                        "            final List<String> calledMethods = new ArrayList<>();\n",
                        "            try (@SuppressWarnings(\"unchecked\")\n",
                        "                    final KeyedObjectPool<String, Object> pool =\n",
                        "                            createProxy1(KeyedObjectPool.class, calledMethods)) {\n",
                        "                final Collection<String> keys = new ArrayList<>(2);\n",
                        "                keys.add(\"one\");\n",
                        "                keys.add(\"two\");\n",
                        "                final Map<String, TimerTask> tasks =\n",
                        "                        PoolUtils.checkMinIdle0(pool, keys, 1, CHECK_PERIOD);\n",
                        "\n",
                        "                Thread.sleep(CHECK_SLEEP_PERIOD); // will check CHECK_COUNT more times.\n",
                        "                for (final TimerTask task : tasks.values()) {\n",
                        "                    task.cancel();\n",
                        "                }\n",
                        "\n",
                        "                final List<String> expectedMethods = new ArrayList<>();\n",
                        "                for (int i = 0; i < CHECK_COUNT * keys.size(); i++) {\n",
                        "                    expectedMethods.add(\"getNumIdle1\");\n",
                        "                    expectedMethods.add(\"addObject\");\n",
                        "                }\n",
                        "                assertEquals(\n",
                        "                        expectedMethods, calledMethods); // may fail because of the thread scheduler\n",
                        "            } catch (final AssertionFailedError e) {\n",
                        "                afe = e;\n",
                        "            }\n",
                        "        } while (--triesLeft > 0 && afe != null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCheckMinIdleKeyedObjectPoolKeys_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<String>()"
                        ],
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "100-102:createProxy1"
                        ],
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<String>(int)"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1131-1148:checkMinIdle0"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "add(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Thread",
                            "sleep(long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "values()"
                        ],
                        [
                            "library",
                            "java.base/java/util/TimerTask",
                            "cancel()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "size()"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(java.lang.String)"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCheckMinIdleKeyedObjectPoolKeys_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "96-98:createProxy0": {
                    "start": 96,
                    "end": 98,
                    "body": [
                        "    private static <T> T createProxy0(final Class<T> clazz, final InvocationHandler handler) {\n",
                        "        return (T) Proxy.newProxyInstance(clazz.getClassLoader(), new Class[] {clazz}, handler);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "SuppressWarnings(\"unchecked\")",
                        "SuppressWarnings(\"unchecked\")"
                    ],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "T",
                            "T"
                        ]
                    ],
                    "signature": "createProxy0(Class<T>, InvocationHandler)",
                    "parameters": [
                        "clazz",
                        "handler"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/reflect/Proxy",
                            "newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getClassLoader()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __createProxy0(clazz: typing.Type[typing.Any], handler: typing.Callable) -> typing.Any:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "175-191:invokeEveryMethod3": {
                    "start": 175,
                    "end": 191,
                    "body": [
                        "    private static <T> List<String> invokeEveryMethod3(final PooledObjectFactory<T> pof)\n",
                        "            throws Exception {\n",
                        "        pof.activateObject(null);\n",
                        "        pof.destroyObject0(null);\n",
                        "        pof.makeObject();\n",
                        "        pof.passivateObject(null);\n",
                        "        pof.validateObject(null);\n",
                        "        pof.toString();\n",
                        "\n",
                        "        return Arrays.asList(\n",
                        "                \"activateObject\",\n",
                        "                \"destroyObject\",\n",
                        "                \"makeObject\",\n",
                        "                \"passivateObject\",\n",
                        "                \"validateObject\",\n",
                        "                \"toString\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "List<String>",
                            "java.util.List<String>"
                        ]
                    ],
                    "signature": "invokeEveryMethod3(PooledObjectFactory<T>)",
                    "parameters": [
                        "pof"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObjectFactory",
                            "activateObject(org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObjectFactory",
                            "destroyObject0(org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObjectFactory",
                            "makeObject()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObjectFactory",
                            "passivateObject(org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObjectFactory",
                            "validateObject(org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "toString()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "asList(java.lang.Object[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __invokeEveryMethod3(pof: PooledObjectFactory[typing.Any]) -> typing.List[str]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "152-173:invokeEveryMethod2": {
                    "start": 152,
                    "end": 173,
                    "body": [
                        "    private static List<String> invokeEveryMethod2(final ObjectPool<Object> op) throws Exception {\n",
                        "        op.addObject();\n",
                        "        op.borrowObject();\n",
                        "        op.clear();\n",
                        "        op.close();\n",
                        "        op.getNumActive();\n",
                        "        op.getNumIdle();\n",
                        "        op.invalidateObject0(new Object());\n",
                        "        op.returnObject(new Object());\n",
                        "        op.toString();\n",
                        "\n",
                        "        return Arrays.asList(\n",
                        "                \"addObject\",\n",
                        "                \"borrowObject\",\n",
                        "                \"clear\",\n",
                        "                \"close\",\n",
                        "                \"getNumActive\",\n",
                        "                \"getNumIdle\",\n",
                        "                \"invalidateObject0\",\n",
                        "                \"returnObject\",\n",
                        "                \"toString\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "List<String>",
                            "java.util.List<String>"
                        ]
                    ],
                    "signature": "invokeEveryMethod2(ObjectPool<Object>)",
                    "parameters": [
                        "op"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "addObject()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "borrowObject()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "clear()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "close()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "getNumActive()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "getNumIdle()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "invalidateObject0(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "Object()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/ObjectPool",
                            "returnObject(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "toString()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "asList(java.lang.Object[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __invokeEveryMethod2(op: ObjectPool[object]) -> typing.List[str]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "134-150:invokeEveryMethod1": {
                    "start": 134,
                    "end": 150,
                    "body": [
                        "    private static <K, V> List<String> invokeEveryMethod1(final KeyedPooledObjectFactory<K, V> kpof)\n",
                        "            throws Exception {\n",
                        "        kpof.activateObject(null, null);\n",
                        "        kpof.destroyObject0(null, null);\n",
                        "        kpof.makeObject(null);\n",
                        "        kpof.passivateObject(null, null);\n",
                        "        kpof.validateObject(null, null);\n",
                        "        kpof.toString();\n",
                        "\n",
                        "        return Arrays.asList(\n",
                        "                \"activateObject\",\n",
                        "                \"destroyObject0\",\n",
                        "                \"makeObject\",\n",
                        "                \"passivateObject\",\n",
                        "                \"validateObject\",\n",
                        "                \"toString\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "List<String>",
                            "java.util.List<String>"
                        ]
                    ],
                    "signature": "invokeEveryMethod1(KeyedPooledObjectFactory<K,V>)",
                    "parameters": [
                        "kpof"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedPooledObjectFactory",
                            "activateObject(java.lang.Object,org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedPooledObjectFactory",
                            "destroyObject0(java.lang.Object,org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedPooledObjectFactory",
                            "makeObject(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedPooledObjectFactory",
                            "passivateObject(java.lang.Object,org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedPooledObjectFactory",
                            "validateObject(java.lang.Object,org.apache.commons.pool2.PooledObject)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "toString()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "asList(java.lang.Object[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __invokeEveryMethod1(kpof: KeyedPooledObjectFactory[typing.Any, typing.Any]) -> typing.List[str]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "104-132:invokeEveryMethod0": {
                    "start": 104,
                    "end": 132,
                    "body": [
                        "    private static List<String> invokeEveryMethod0(final KeyedObjectPool<Object, Object> kop)\n",
                        "            throws Exception {\n",
                        "        kop.addObject(null);\n",
                        "        kop.borrowObject(null);\n",
                        "        kop.clear0();\n",
                        "        kop.clear1(null);\n",
                        "        kop.close();\n",
                        "        kop.getNumActive0();\n",
                        "        kop.getNumActive1(null);\n",
                        "        kop.getNumIdle0();\n",
                        "        kop.getNumIdle1(null);\n",
                        "        kop.invalidateObject0(null, new Object());\n",
                        "        kop.returnObject(null, new Object());\n",
                        "        kop.toString();\n",
                        "\n",
                        "        return Arrays.asList(\n",
                        "                \"addObject\",\n",
                        "                \"borrowObject\",\n",
                        "                \"clear0\",\n",
                        "                \"clear1\",\n",
                        "                \"close\",\n",
                        "                \"getNumActive0\",\n",
                        "                \"getNumActive1\",\n",
                        "                \"getNumIdle0\",\n",
                        "                \"getNumIdle1\",\n",
                        "                \"invalidateObject0\",\n",
                        "                \"returnObject\",\n",
                        "                \"toString\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "List<String>",
                            "java.util.List<String>"
                        ]
                    ],
                    "signature": "invokeEveryMethod0(KeyedObjectPool<Object,Object>)",
                    "parameters": [
                        "kop"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "addObject(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "borrowObject(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "clear0()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "clear1(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "close()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumActive0()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumActive1(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumIdle0()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "getNumIdle1(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "invalidateObject0(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "Object()"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/KeyedObjectPool",
                            "returnObject(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "toString()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "asList(java.lang.Object[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __invokeEveryMethod0(kop: KeyedObjectPool[object, typing.Any]) -> typing.List[str]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "100-102:createProxy1": {
                    "start": 100,
                    "end": 102,
                    "body": [
                        "    private static <T> T createProxy1(final Class<T> clazz, final List<String> logger) {\n",
                        "        return createProxy0(clazz, new MethodCallLogger(logger));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "T",
                            "T"
                        ]
                    ],
                    "signature": "createProxy1(Class<T>, List<String>)",
                    "parameters": [
                        "clazz",
                        "logger"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "TestPoolUtils",
                            "96-98:createProxy0"
                        ],
                        [
                            "commons-pool.src.test.org.apache.commons.pool2.TestPoolUtils",
                            "MethodCallLogger",
                            "52-54:MethodCallLogger"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __createProxy1(clazz: typing.Type[typing.Any], logger: typing.List[str]) -> typing.Any:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "92-93:CHECK_SLEEP_PERIOD": {
                    "start": 92,
                    "end": 93,
                    "body": [
                        "    private static final int CHECK_SLEEP_PERIOD =\n",
                        "            CHECK_PERIOD * (CHECK_COUNT - 1) + CHECK_PERIOD / 2;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "partial_translation": [
                        "    __CHECK_SLEEP_PERIOD: int = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "89-89:CHECK_COUNT": {
                    "start": 89,
                    "end": 89,
                    "body": [
                        "    private static final int CHECK_COUNT = 4;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "partial_translation": [
                        "    __CHECK_COUNT: int = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "86-86:CHECK_PERIOD": {
                    "start": 86,
                    "end": 86,
                    "body": [
                        "    private static final int CHECK_PERIOD = 300;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "partial_translation": [
                        "    __CHECK_PERIOD: int = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class TestPoolUtils(unittest.TestCase):\n\n"
        },
        "new Executable(...) { ... }": {
            "start": 293,
            "end": 293,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "TestPoolUtils",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "291-293:execute": {
                    "start": 291,
                    "end": 293,
                    "body": [
                        "            assertThrows(\n",
                        "                    IllegalArgumentException.class,\n",
                        "                    () -> PoolUtils.checkMinIdle1(pool, (Collection<?>) null, 1, 1),\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1168-1186:checkMinIdle1"
                        ]
                    ],
                    "is_overload": true
                },
                "304-306:execute": {
                    "start": 304,
                    "end": 306,
                    "body": [
                        "            assertThrows(\n",
                        "                    IllegalArgumentException.class,\n",
                        "                    () -> PoolUtils.checkMinIdle1(pool, (Collection<?>) null, 1, 1),\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1168-1186:checkMinIdle1"
                        ]
                    ],
                    "is_overload": true
                },
                "390-392:execute": {
                    "start": 390,
                    "end": 392,
                    "body": [
                        "            assertThrows(\n",
                        "                    IllegalArgumentException.class,\n",
                        "                    () -> PoolUtils.prefill0(pool, (Collection<String>) null, 1),\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1396-1403:prefill0"
                        ]
                    ],
                    "is_overload": true
                },
                "402-404:execute": {
                    "start": 402,
                    "end": 404,
                    "body": [
                        "            assertThrows(\n",
                        "                    IllegalArgumentException.class,\n",
                        "                    () -> PoolUtils.prefill0(pool, (Collection<String>) null, 1),\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1396-1403:prefill0"
                        ]
                    ],
                    "is_overload": true
                },
                "430-432:execute": {
                    "start": 430,
                    "end": 432,
                    "body": [
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.prefill2(null, 1),\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1439-1445:prefill2"
                        ]
                    ],
                    "is_overload": true
                },
                "438-440:execute": {
                    "start": 438,
                    "end": 440,
                    "body": [
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.prefill2(null, 1),\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1439-1445:prefill2"
                        ]
                    ],
                    "is_overload": true
                },
                "459-461:execute": {
                    "start": 459,
                    "end": 461,
                    "body": [
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.synchronizedPool0((KeyedObjectPool<Object, Object>) null),\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1475-1487:synchronizedPool0"
                        ]
                    ],
                    "is_overload": true
                },
                "467-469:execute": {
                    "start": 467,
                    "end": 469,
                    "body": [
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.synchronizedPool0((KeyedObjectPool<Object, Object>) null),\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1475-1487:synchronizedPool0"
                        ]
                    ],
                    "is_overload": true
                },
                "483-485:execute": {
                    "start": 483,
                    "end": 485,
                    "body": [
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.synchronizedPool1((ObjectPool<Object>) null),\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1502-1519:synchronizedPool1"
                        ]
                    ],
                    "is_overload": true
                },
                "491-493:execute": {
                    "start": 491,
                    "end": 493,
                    "body": [
                        "        assertThrows(\n",
                        "                IllegalArgumentException.class,\n",
                        "                () -> PoolUtils.synchronizedPool1((ObjectPool<Object>) null),\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "execute()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.PoolUtils",
                            "PoolUtils",
                            "1502-1519:synchronizedPool1"
                        ]
                    ],
                    "is_overload": true
                }
            },
            "fields": {}
        },
        "new InvocationHandler(...) { ... }": {
            "start": 355,
            "end": 355,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "TestPoolUtils",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "353-355:invoke": {
                    "start": 353,
                    "end": 355,
                    "body": [
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                        final ObjectPool<Object> internalPool =\n",
                        "                                createProxy0(ObjectPool.class, (arg0, arg1, arg2) -> null);\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "invoke(Object, Method, Object[])",
                    "parameters": [
                        "arg0",
                        "arg1",
                        "arg2"
                    ],
                    "calls": [],
                    "is_overload": true
                },
                "367-369:invoke": {
                    "start": 367,
                    "end": 369,
                    "body": [
                        "        try (@SuppressWarnings(\"unchecked\")\n",
                        "                        final KeyedObjectPool<Object, Object> internalPool =\n",
                        "                                createProxy0(KeyedObjectPool.class, (arg0, arg1, arg2) -> null);\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "invoke(Object, Method, Object[])",
                    "parameters": [
                        "arg0",
                        "arg1",
                        "arg2"
                    ],
                    "calls": [],
                    "is_overload": true
                }
            },
            "fields": {}
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import typing\nfrom typing import *",
        "import os",
        "import unittest",
        "from src.main.org.apache.commons.pool2.KeyedObjectPool import *",
        "from src.main.org.apache.commons.pool2.KeyedPooledObjectFactory import *",
        "from src.main.org.apache.commons.pool2.ObjectPool import *",
        "from src.main.org.apache.commons.pool2.PoolUtils import *",
        "from src.main.org.apache.commons.pool2.PooledObject import *",
        "from src.main.org.apache.commons.pool2.PooledObjectFactory import *",
        "# from src.main.org.opentest4j.AssertionFailedError import *",
        "from src.main.org.apache.commons.pool2.impl.DefaultPooledObject import *"
    ]
}