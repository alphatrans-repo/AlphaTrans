{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-validator/src/test/java/org/apache/commons/validator/routines/BigDecimalValidatorTest.java",
    "imports": {
        "21-21:import Locale": {
            "start": 21,
            "end": 21,
            "body": [
                "import java.util.Locale;\n"
            ]
        },
        "20-20:import BigDecimal": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.math.BigDecimal;\n"
            ]
        },
        "18-18:import Test": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.junit.Test;\n"
            ]
        }
    },
    "classes": {
        "BigDecimalValidatorTest": {
            "start": 28,
            "end": 28,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "AbstractNumberValidatorTest"
            ],
            "methods": {
                "1595-1617:testBigDecimalRangeMinMax_test4_decomposed": {
                    "start": 1595,
                    "end": 1617,
                    "body": [
                        "    public void testBigDecimalRangeMinMax_test4_decomposed()  {\n",
                        "        BigDecimalValidator validator =\n",
                        "                new BigDecimalValidator(true, AbstractNumberValidator.STANDARD_FORMAT, true);\n",
                        "        BigDecimal number9 = new BigDecimal(\"9\");\n",
                        "        BigDecimal number10 = new BigDecimal(\"10\");\n",
                        "        BigDecimal number11 = new BigDecimal(\"11\");\n",
                        "        BigDecimal number19 = new BigDecimal(\"19\");\n",
                        "        BigDecimal number20 = new BigDecimal(\"20\");\n",
                        "        BigDecimal number21 = new BigDecimal(\"21\");\n",
                        "        float min = 10;\n",
                        "        float max = 20;\n",
                        "        assertFalse(\"isInRange(A) < min\", validator.isInRange(number9, min, max));\n",
                        "        assertTrue(\"isInRange(A) = min\", validator.isInRange(number10, min, max));\n",
                        "        assertTrue(\"isInRange(A) in range\", validator.isInRange(number11, min, max));\n",
                        "        assertTrue(\"isInRange(A) = max\", validator.isInRange(number20, min, max));\n",
                        "        assertFalse(\"isInRange(A) > max\", validator.isInRange(number21, min, max));\n",
                        "        assertFalse(\"minValue(A) < min\", validator.minValue(number9, min));\n",
                        "        assertTrue(\"minValue(A) = min\", validator.minValue(number10, min));\n",
                        "        assertTrue(\"minValue(A) > min\", validator.minValue(number11, min));\n",
                        "        assertTrue(\"maxValue(A) < max\", validator.maxValue(number19, max));\n",
                        "        assertTrue(\"maxValue(A) = max\", validator.maxValue(number20, max));\n",
                        "        assertFalse(\"maxValue(A) > max\", validator.maxValue(number21, max));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalRangeMinMax_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "83-85:BigDecimalValidator"
                        ],
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(java.lang.String)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "177-179:isInRange"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "188-190:minValue"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "199-201:maxValue"
                        ]
                    ]
                },
                "1573-1592:testBigDecimalRangeMinMax_test3_decomposed": {
                    "start": 1573,
                    "end": 1592,
                    "body": [
                        "    public void testBigDecimalRangeMinMax_test3_decomposed()  {\n",
                        "        BigDecimalValidator validator =\n",
                        "                new BigDecimalValidator(true, AbstractNumberValidator.STANDARD_FORMAT, true);\n",
                        "        BigDecimal number9 = new BigDecimal(\"9\");\n",
                        "        BigDecimal number10 = new BigDecimal(\"10\");\n",
                        "        BigDecimal number11 = new BigDecimal(\"11\");\n",
                        "        BigDecimal number19 = new BigDecimal(\"19\");\n",
                        "        BigDecimal number20 = new BigDecimal(\"20\");\n",
                        "        BigDecimal number21 = new BigDecimal(\"21\");\n",
                        "        float min = 10;\n",
                        "        float max = 20;\n",
                        "        assertFalse(\"isInRange(A) < min\", validator.isInRange(number9, min, max));\n",
                        "        assertTrue(\"isInRange(A) = min\", validator.isInRange(number10, min, max));\n",
                        "        assertTrue(\"isInRange(A) in range\", validator.isInRange(number11, min, max));\n",
                        "        assertTrue(\"isInRange(A) = max\", validator.isInRange(number20, min, max));\n",
                        "        assertFalse(\"isInRange(A) > max\", validator.isInRange(number21, min, max));\n",
                        "        assertFalse(\"minValue(A) < min\", validator.minValue(number9, min));\n",
                        "        assertTrue(\"minValue(A) = min\", validator.minValue(number10, min));\n",
                        "        assertTrue(\"minValue(A) > min\", validator.minValue(number11, min));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalRangeMinMax_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "83-85:BigDecimalValidator"
                        ],
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(java.lang.String)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "177-179:isInRange"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "188-190:minValue"
                        ]
                    ]
                },
                "1554-1570:testBigDecimalRangeMinMax_test2_decomposed": {
                    "start": 1554,
                    "end": 1570,
                    "body": [
                        "    public void testBigDecimalRangeMinMax_test2_decomposed()  {\n",
                        "        BigDecimalValidator validator =\n",
                        "                new BigDecimalValidator(true, AbstractNumberValidator.STANDARD_FORMAT, true);\n",
                        "        BigDecimal number9 = new BigDecimal(\"9\");\n",
                        "        BigDecimal number10 = new BigDecimal(\"10\");\n",
                        "        BigDecimal number11 = new BigDecimal(\"11\");\n",
                        "        BigDecimal number19 = new BigDecimal(\"19\");\n",
                        "        BigDecimal number20 = new BigDecimal(\"20\");\n",
                        "        BigDecimal number21 = new BigDecimal(\"21\");\n",
                        "        float min = 10;\n",
                        "        float max = 20;\n",
                        "        assertFalse(\"isInRange(A) < min\", validator.isInRange(number9, min, max));\n",
                        "        assertTrue(\"isInRange(A) = min\", validator.isInRange(number10, min, max));\n",
                        "        assertTrue(\"isInRange(A) in range\", validator.isInRange(number11, min, max));\n",
                        "        assertTrue(\"isInRange(A) = max\", validator.isInRange(number20, min, max));\n",
                        "        assertFalse(\"isInRange(A) > max\", validator.isInRange(number21, min, max));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalRangeMinMax_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "83-85:BigDecimalValidator"
                        ],
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(java.lang.String)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "177-179:isInRange"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1539-1551:testBigDecimalRangeMinMax_test1_decomposed": {
                    "start": 1539,
                    "end": 1551,
                    "body": [
                        "    public void testBigDecimalRangeMinMax_test1_decomposed()  {\n",
                        "        BigDecimalValidator validator =\n",
                        "                new BigDecimalValidator(true, AbstractNumberValidator.STANDARD_FORMAT, true);\n",
                        "        BigDecimal number9 = new BigDecimal(\"9\");\n",
                        "        BigDecimal number10 = new BigDecimal(\"10\");\n",
                        "        BigDecimal number11 = new BigDecimal(\"11\");\n",
                        "        BigDecimal number19 = new BigDecimal(\"19\");\n",
                        "        BigDecimal number20 = new BigDecimal(\"20\");\n",
                        "        BigDecimal number21 = new BigDecimal(\"21\");\n",
                        "        float min = 10;\n",
                        "        float max = 20;\n",
                        "        assertFalse(\"isInRange(A) < min\", validator.isInRange(number9, min, max));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalRangeMinMax_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "83-85:BigDecimalValidator"
                        ],
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(java.lang.String)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "177-179:isInRange"
                        ]
                    ]
                },
                "1533-1536:testBigDecimalRangeMinMax_test0_decomposed": {
                    "start": 1533,
                    "end": 1536,
                    "body": [
                        "    public void testBigDecimalRangeMinMax_test0_decomposed()  {\n",
                        "        BigDecimalValidator validator =\n",
                        "                new BigDecimalValidator(true, AbstractNumberValidator.STANDARD_FORMAT, true);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalRangeMinMax_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "83-85:BigDecimalValidator"
                        ]
                    ]
                },
                "1462-1530:testBigDecimalValidatorMethods_test31_decomposed": {
                    "start": 1462,
                    "end": 1530,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test31_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                BigDecimalValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", BigDecimalValidator.getInstance().isValid0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", BigDecimalValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\n",
                        "                \"isValid(B) pattern\", BigDecimalValidator.getInstance().isValid1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\n",
                        "                \"isValid(B) both\",\n",
                        "                BigDecimalValidator.getInstance().isValid3(patternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test31_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1394-1459:testBigDecimalValidatorMethods_test30_decomposed": {
                    "start": 1394,
                    "end": 1459,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test30_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                BigDecimalValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", BigDecimalValidator.getInstance().isValid0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", BigDecimalValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\n",
                        "                \"isValid(B) pattern\", BigDecimalValidator.getInstance().isValid1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test30_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1327-1391:testBigDecimalValidatorMethods_test29_decomposed": {
                    "start": 1327,
                    "end": 1391,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test29_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                BigDecimalValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", BigDecimalValidator.getInstance().isValid0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", BigDecimalValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\n",
                        "                \"isValid(B) pattern\", BigDecimalValidator.getInstance().isValid1(XXXX, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test29_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1262-1324:testBigDecimalValidatorMethods_test28_decomposed": {
                    "start": 1262,
                    "end": 1324,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test28_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                BigDecimalValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", BigDecimalValidator.getInstance().isValid0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", BigDecimalValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test28_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1198-1259:testBigDecimalValidatorMethods_test27_decomposed": {
                    "start": 1198,
                    "end": 1259,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test27_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                BigDecimalValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", BigDecimalValidator.getInstance().isValid0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", BigDecimalValidator.getInstance().isValid2(XXXX, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test27_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1135-1195:testBigDecimalValidatorMethods_test26_decomposed": {
                    "start": 1135,
                    "end": 1195,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test26_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                BigDecimalValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", BigDecimalValidator.getInstance().isValid0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test26_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1073-1132:testBigDecimalValidatorMethods_test25_decomposed": {
                    "start": 1073,
                    "end": 1132,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test25_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                BigDecimalValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", BigDecimalValidator.getInstance().isValid0(XXXX));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test25_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1012-1070:testBigDecimalValidatorMethods_test24_decomposed": {
                    "start": 1012,
                    "end": 1070,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test24_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                BigDecimalValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test24_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "952-1009:testBigDecimalValidatorMethods_test23_decomposed": {
                    "start": 952,
                    "end": 1009,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test23_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                BigDecimalValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test23_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "895-949:testBigDecimalValidatorMethods_test22_decomposed": {
                    "start": 895,
                    "end": 949,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test22_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test22_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "839-892:testBigDecimalValidatorMethods_test21_decomposed": {
                    "start": 839,
                    "end": 892,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test21_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) pattern\", BigDecimalValidator.getInstance().validate1(XXXX, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test21_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "785-836:testBigDecimalValidatorMethods_test20_decomposed": {
                    "start": 785,
                    "end": 836,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test20_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test20_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "732-782:testBigDecimalValidatorMethods_test19_decomposed": {
                    "start": 732,
                    "end": 782,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test19_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) locale \", BigDecimalValidator.getInstance().validate2(XXXX, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test19_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "681-729:testBigDecimalValidatorMethods_test18_decomposed": {
                    "start": 681,
                    "end": 729,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test18_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test18_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "631-678:testBigDecimalValidatorMethods_test17_decomposed": {
                    "start": 631,
                    "end": 678,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test17_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", BigDecimalValidator.getInstance().validate0(XXXX));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test17_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "582-628:testBigDecimalValidatorMethods_test16_decomposed": {
                    "start": 582,
                    "end": 628,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test16_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test16_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ]
                    ]
                },
                "534-579:testBigDecimalValidatorMethods_test15_decomposed": {
                    "start": 534,
                    "end": 579,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test15_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test15_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ]
                    ]
                },
                "490-531:testBigDecimalValidatorMethods_test14_decomposed": {
                    "start": 490,
                    "end": 531,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test14_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test14_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ]
                    ]
                },
                "447-487:testBigDecimalValidatorMethods_test13_decomposed": {
                    "start": 447,
                    "end": 487,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test13_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\",\n",
                        "                BigDecimalValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test13_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ]
                    ]
                },
                "407-444:testBigDecimalValidatorMethods_test12_decomposed": {
                    "start": 407,
                    "end": 444,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test12_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test12_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ]
                    ]
                },
                "368-404:testBigDecimalValidatorMethods_test11_decomposed": {
                    "start": 368,
                    "end": 404,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test11_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) locale \",\n",
                        "                BigDecimalValidator.getInstance().isValid2(localeVal, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ]
                    ]
                },
                "332-365:testBigDecimalValidatorMethods_test10_decomposed": {
                    "start": 332,
                    "end": 365,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test10_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ]
                    ]
                },
                "297-329:testBigDecimalValidatorMethods_test9_decomposed": {
                    "start": 297,
                    "end": 329,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test9_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", BigDecimalValidator.getInstance().isValid0(defaultVal));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ]
                    ]
                },
                "263-294:testBigDecimalValidatorMethods_test8_decomposed": {
                    "start": 263,
                    "end": 294,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test8_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ]
                    ]
                },
                "230-260:testBigDecimalValidatorMethods_test7_decomposed": {
                    "start": 230,
                    "end": 260,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test7_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance()\n",
                        "                        .validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "165-167:validate3"
                        ]
                    ]
                },
                "202-227:testBigDecimalValidatorMethods_test6_decomposed": {
                    "start": 202,
                    "end": 227,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test6_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ]
                    ]
                },
                "175-199:testBigDecimalValidatorMethods_test5_decomposed": {
                    "start": 175,
                    "end": 199,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test5_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate1(patternVal, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "140-142:validate1"
                        ]
                    ]
                },
                "152-172:testBigDecimalValidatorMethods_test4_decomposed": {
                    "start": 152,
                    "end": 172,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test4_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ]
                    ]
                },
                "130-149:testBigDecimalValidatorMethods_test3_decomposed": {
                    "start": 130,
                    "end": 149,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test3_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate2(localeVal, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "151-153:validate2"
                        ]
                    ]
                },
                "112-127:testBigDecimalValidatorMethods_test2_decomposed": {
                    "start": 112,
                    "end": 127,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test2_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ]
                    ]
                },
                "95-109:testBigDecimalValidatorMethods_test1_decomposed": {
                    "start": 95,
                    "end": 109,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test1_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                BigDecimalValidator.getInstance().validate0(defaultVal));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "128-130:validate0"
                        ]
                    ]
                },
                "82-92:testBigDecimalValidatorMethods_test0_decomposed": {
                    "start": 82,
                    "end": 92,
                    "body": [
                        "    public void testBigDecimalValidatorMethods_test0_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        BigDecimal expected = new BigDecimal(12345);\n",
                        "        BigDecimalValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBigDecimalValidatorMethods_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "78-80:getInstance"
                        ]
                    ]
                },
                "40-74:setUp": {
                    "start": 40,
                    "end": 74,
                    "body": [
                        "    protected void setUp() throws Exception {\n",
                        "        super.setUp();\n",
                        "\n",
                        "        validator = BigDecimalValidator.BigDecimalValidator1(false);\n",
                        "        strictValidator = BigDecimalValidator.BigDecimalValidator2();\n",
                        "\n",
                        "        testPattern = \"#,###.###\";\n",
                        "\n",
                        "        max = null;\n",
                        "        maxPlusOne = null;\n",
                        "        min = null;\n",
                        "        minMinusOne = null;\n",
                        "\n",
                        "        invalidStrict = new String[] {null, \"\", \"X\", \"X12\", \"12X\", \"1X2\", \"1.234X\"};\n",
                        "\n",
                        "        invalid = new String[] {null, \"\", \"X\", \"X12\"};\n",
                        "\n",
                        "        testNumber = new BigDecimal(\"1234.5\");\n",
                        "        Number testNumber2 = new BigDecimal(\".1\");\n",
                        "        Number testNumber3 = new BigDecimal(\"12345.67899\");\n",
                        "        testZero = new BigDecimal(\"0\");\n",
                        "        validStrict = new String[] {\"0\", \"1234.5\", \"1,234.5\", \".1\", \"12345.678990\"};\n",
                        "        validStrictCompare =\n",
                        "                new Number[] {testZero, testNumber, testNumber, testNumber2, testNumber3};\n",
                        "        valid = new String[] {\"0\", \"1234.5\", \"1,234.5\", \"1,234.5\", \"1234.5X\"};\n",
                        "        validCompare = new Number[] {testZero, testNumber, testNumber, testNumber, testNumber};\n",
                        "\n",
                        "        testStringUS = \"1,234.5\";\n",
                        "        testStringDE = \"1.234,5\";\n",
                        "\n",
                        "        localeValue = testStringDE;\n",
                        "        localePattern = \"#.###,#\";\n",
                        "        testLocale = Locale.GERMANY;\n",
                        "        localeExpected = testNumber;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setUp()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/math/BigDecimal",
                            "BigDecimal(java.lang.String)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.AbstractNumberValidatorTest",
                            "AbstractNumberValidatorTest",
                            "72-76:setUp"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "87-89:BigDecimalValidator1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.BigDecimalValidator",
                            "BigDecimalValidator",
                            "91-93:BigDecimalValidator2"
                        ]
                    ]
                },
                "35-37:BigDecimalValidatorTest": {
                    "start": 35,
                    "end": 37,
                    "body": [
                        "    public BigDecimalValidatorTest(String name) {\n",
                        "        super(name);\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "BigDecimalValidatorTest(String)",
                    "parameters": [
                        "name"
                    ],
                    "calls": [
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.AbstractNumberValidatorTest",
                            "AbstractNumberValidatorTest",
                            "67-69:AbstractNumberValidatorTest"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}