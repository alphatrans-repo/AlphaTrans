{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/coloring/ColoredVertices.java",
    "imports": {
        "27-27:import Map": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "26-26:import List": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "24-24:import ArrayList": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.util.ArrayList;\n"
            ]
        },
        "25-25:import HashMap": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.util.HashMap;\n"
            ]
        },
        "22-22:import static Assertions.checkNotNull": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.utils.Assertions.checkNotNull;\n"
            ]
        }
    },
    "classes": {
        "ColoredVertices": {
            "start": 36,
            "end": 36,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "88-90:getRequiredColors": {
                    "start": 88,
                    "end": 90,
                    "body": [
                        "    public int getRequiredColors() {\n",
                        "        return usedColor.size();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getRequiredColors()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/List",
                            "size()"
                        ]
                    ]
                },
                "77-81:getColor": {
                    "start": 77,
                    "end": 81,
                    "body": [
                        "    public C getColor(V v) {\n",
                        "        v = checkNotNull(v, \"Impossible to get the color for a null Vertex\");\n",
                        "\n",
                        "        return coloredVertices.get(v);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "C",
                            "C"
                        ]
                    ],
                    "signature": "getColor(V)",
                    "parameters": [
                        "v"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "67-69:containsColoredVertex": {
                    "start": 67,
                    "end": 69,
                    "body": [
                        "    public boolean containsColoredVertex(V vertex) {\n",
                        "        return coloredVertices.containsKey(vertex);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "containsColoredVertex(V)",
                    "parameters": [
                        "vertex"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Map",
                            "containsKey(java.lang.Object)"
                        ]
                    ]
                },
                "97-100:removeColor": {
                    "start": 97,
                    "end": 100,
                    "body": [
                        "    void removeColor(V v) {\n",
                        "        C color = coloredVertices.remove(v);\n",
                        "        usedColor.remove(color);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "removeColor(V)",
                    "parameters": [
                        "v"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Map",
                            "remove(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "remove(java.lang.Object)"
                        ]
                    ]
                },
                "51-59:addColor": {
                    "start": 51,
                    "end": 59,
                    "body": [
                        "    void addColor(V v, C color) {\n",
                        "        coloredVertices.put(v, color);\n",
                        "        int idx = usedColor.indexOf(color);\n",
                        "        if (idx == -1) {\n",
                        "            usedColor.add(color);\n",
                        "        } else {\n",
                        "            usedColor.set(idx, color);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "addColor(V, C)",
                    "parameters": [
                        "v",
                        "color"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/List",
                            "indexOf(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "set(int,java.lang.Object)"
                        ]
                    ]
                },
                "43-43:ColoredVertices": {
                    "start": 43,
                    "end": 43,
                    "body": [
                        "    ColoredVertices() {}\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ColoredVertices()",
                    "parameters": [],
                    "calls": []
                }
            },
            "fields": {
                "40-40:usedColor": {
                    "start": 40,
                    "end": 40,
                    "body": [
                        "    private final List<C> usedColor = new ArrayList<C>();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "List<C>",
                            "java.util.List<C>"
                        ]
                    ]
                },
                "38-38:coloredVertices": {
                    "start": 38,
                    "end": 38,
                    "body": [
                        "    private final Map<V, C> coloredVertices = new HashMap<V, C>();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Map<V,C>",
                            "java.util.Map<V,C>"
                        ]
                    ]
                }
            }
        }
    }
}