{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-csv/src/main/java/org/apache/commons/csv/IOUtils.java",
    "imports": {
        "19-19:import IOException": {
            "start": 19,
            "end": 19,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "20-20:import Reader": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.io.Reader;\n"
            ]
        },
        "21-21:import Writer": {
            "start": 21,
            "end": 21,
            "body": [
                "import java.io.Writer;\n"
            ]
        },
        "23-23:import CharBuffer": {
            "start": 23,
            "end": 23,
            "body": [
                "import java.nio.CharBuffer;\n"
            ]
        },
        "22-22:import Buffer": {
            "start": 22,
            "end": 22,
            "body": [
                "import java.nio.Buffer;\n"
            ]
        }
    },
    "classes": {
        "IOUtils": {
            "start": 26,
            "end": 26,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "128-130:rethrow": {
                    "start": 128,
                    "end": 130,
                    "body": [
                        "    static <T extends Throwable> RuntimeException rethrow(final Throwable throwable) throws T {\n",
                        "        throw (T) throwable;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "SuppressWarnings(\"unchecked\")"
                    ],
                    "modifiers": [
                        "static"
                    ],
                    "return_types": [
                        [
                            "RuntimeException",
                            "java.lang.RuntimeException"
                        ]
                    ],
                    "signature": "rethrow(Throwable)",
                    "parameters": [
                        "throwable"
                    ],
                    "calls": []
                },
                "108-117:copyLarge1": {
                    "start": 108,
                    "end": 117,
                    "body": [
                        "    static long copyLarge1(final Reader input, final Writer output, final char[] buffer)\n",
                        "            throws IOException {\n",
                        "        long count = 0;\n",
                        "        int n;\n",
                        "        while (EOF != (n = input.read(buffer))) {\n",
                        "            output.write(buffer, 0, n);\n",
                        "            count += n;\n",
                        "        }\n",
                        "        return count;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "copyLarge1(Reader, Writer, char[])",
                    "parameters": [
                        "input",
                        "output",
                        "buffer"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "read(char[])"
                        ],
                        [
                            "library",
                            "java.base/java/io/Writer",
                            "write(char[],int,int)"
                        ]
                    ]
                },
                "91-93:copyLarge0": {
                    "start": 91,
                    "end": 93,
                    "body": [
                        "    static long copyLarge0(final Reader input, final Writer output) throws IOException {\n",
                        "        return copyLarge1(input, output, new char[DEFAULT_BUFFER_SIZE]);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "copyLarge0(Reader, Writer)",
                    "parameters": [
                        "input",
                        "output"
                    ],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "108-117:copyLarge1"
                        ]
                    ]
                },
                "64-74:copy1": {
                    "start": 64,
                    "end": 74,
                    "body": [
                        "    static long copy1(final Reader input, final Appendable output, final CharBuffer buffer)\n",
                        "            throws IOException {\n",
                        "        long count = 0;\n",
                        "        int n;\n",
                        "        while (EOF != (n = input.read(buffer))) {\n",
                        "            ((Buffer) buffer).flip();\n",
                        "            output.append(buffer, 0, n);\n",
                        "            count += n;\n",
                        "        }\n",
                        "        return count;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "copy1(Reader, Appendable, CharBuffer)",
                    "parameters": [
                        "input",
                        "output",
                        "buffer"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "read(java.nio.CharBuffer)"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "flip()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Appendable",
                            "append(java.lang.CharSequence,int,int)"
                        ]
                    ]
                },
                "47-49:copy0": {
                    "start": 47,
                    "end": 49,
                    "body": [
                        "    static long copy0(final Reader input, final Appendable output) throws IOException {\n",
                        "        return copy1(input, output, CharBuffer.allocate(DEFAULT_BUFFER_SIZE));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "copy0(Reader, Appendable)",
                    "parameters": [
                        "input",
                        "output"
                    ],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "64-74:copy1"
                        ],
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "allocate(int)"
                        ]
                    ]
                },
                "133-133:IOUtils": {
                    "start": 133,
                    "end": 133,
                    "body": [
                        "    private IOUtils() {}\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "IOUtils()",
                    "parameters": [],
                    "calls": []
                }
            },
            "fields": {
                "29-29:DEFAULT_BUFFER_SIZE": {
                    "start": 29,
                    "end": 29,
                    "body": [
                        "    static final int DEFAULT_BUFFER_SIZE = 1024 * 4;\n"
                    ],
                    "modifiers": [
                        "static",
                        "final"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "32-32:EOF": {
                    "start": 32,
                    "end": 32,
                    "body": [
                        "    private static final int EOF = -1;\n"
                    ],
                    "modifiers": [
                        "static",
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                }
            }
        }
    }
}