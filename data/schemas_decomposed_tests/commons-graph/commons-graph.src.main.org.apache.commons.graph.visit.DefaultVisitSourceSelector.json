{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/visit/DefaultVisitSourceSelector.java",
    "imports": {
        "25-25:import Graph": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "22-22:import static Assertions.checkNotNull": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.utils.Assertions.checkNotNull;\n"
            ]
        },
        "23-23:import static Assertions.checkState": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.apache.commons.graph.utils.Assertions.checkState;\n"
            ]
        }
    },
    "classes": {
        "DefaultVisitSourceSelector": {
            "start": 34,
            "end": 35,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [
                "VisitSourceSelector"
            ],
            "extends": [],
            "methods": {
                "44-48:from": {
                    "start": 44,
                    "end": 48,
                    "body": [
                        "    public <S extends V> VisitAlgorithmsSelector<V, E, G> from(S source) {\n",
                        "        source = checkNotNull(source, \"Impossible to visit input graph %s with null source\", graph);\n",
                        "        checkState(graph.containsVertex(source), \"Vertex %s does not exist in the Graph\", source);\n",
                        "        return new DefaultVisitAlgorithmsSelector<V, E, G>(graph, source);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "VisitAlgorithmsSelector<V,E,G>",
                            "VisitAlgorithmsSelector<V,E,G>"
                        ]
                    ],
                    "signature": "from(S)",
                    "parameters": [
                        "source"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "87-92:checkState"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "containsVertex(java.lang.Object)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<V,E,G>(org.apache.commons.graph.Graph,java.lang.Object)"
                        ]
                    ]
                },
                "39-41:DefaultVisitSourceSelector": {
                    "start": 39,
                    "end": 41,
                    "body": [
                        "    public DefaultVisitSourceSelector(G graph) {\n",
                        "        this.graph = graph;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "DefaultVisitSourceSelector(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": []
                }
            },
            "fields": {
                "37-37:graph": {
                    "start": 37,
                    "end": 37,
                    "body": [
                        "    private final G graph;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "G",
                            "G"
                        ]
                    ]
                }
            }
        }
    }
}