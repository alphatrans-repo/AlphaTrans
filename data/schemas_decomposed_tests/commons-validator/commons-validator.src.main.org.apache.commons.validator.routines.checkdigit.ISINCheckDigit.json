{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-validator/src/main/java/org/apache/commons/validator/routines/checkdigit/ISINCheckDigit.java",
    "imports": {},
    "classes": {
        "ISINCheckDigit": {
            "start": 35,
            "end": 35,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "ModulusCheckDigit"
            ],
            "methods": {
                "96-100:weightedValue": {
                    "start": 96,
                    "end": 100,
                    "body": [
                        "    protected int weightedValue(int charValue, int leftPos, int rightPos) {\n",
                        "        int weight = POSITION_WEIGHT[rightPos % 2]; // CHECKSTYLE IGNORE MagicNumber\n",
                        "        int weightedValue = charValue * weight;\n",
                        "        return ModulusCheckDigit.sumDigits(weightedValue);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "weightedValue(int, int, int)",
                    "parameters": [
                        "charValue",
                        "leftPos",
                        "rightPos"
                    ],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit",
                            "ModulusCheckDigit",
                            "181-189:sumDigits"
                        ]
                    ]
                },
                "61-81:calculateModulus": {
                    "start": 61,
                    "end": 81,
                    "body": [
                        "    protected int calculateModulus(String code, boolean includesCheckDigit)\n",
                        "            throws CheckDigitException {\n",
                        "        StringBuilder transformed =\n",
                        "                new StringBuilder(code.length() * 2); // CHECKSTYLE IGNORE MagicNumber\n",
                        "        if (includesCheckDigit) {\n",
                        "            char checkDigit = code.charAt(code.length() - 1); // fetch the last character\n",
                        "            if (!Character.isDigit(checkDigit)) {\n",
                        "                throw CheckDigitException.CheckDigitException1(\n",
                        "                        \"Invalid checkdigit[\" + checkDigit + \"] in \" + code);\n",
                        "            }\n",
                        "        }\n",
                        "        for (int i = 0; i < code.length(); i++) {\n",
                        "            int charValue = Character.getNumericValue(code.charAt(i));\n",
                        "            if (charValue < 0 || charValue > MAX_ALPHANUMERIC_VALUE) {\n",
                        "                throw CheckDigitException.CheckDigitException1(\n",
                        "                        \"Invalid Character[\" + (i + 1) + \"] = '\" + charValue + \"'\");\n",
                        "            }\n",
                        "            transformed.append(charValue);\n",
                        "        }\n",
                        "        return super.calculateModulus(transformed.toString(), includesCheckDigit);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "calculateModulus(String, boolean)",
                    "parameters": [
                        "code",
                        "includesCheckDigit"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "isDigit(char)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.CheckDigitException",
                            "CheckDigitException",
                            "34-36:CheckDigitException1"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "getNumericValue(char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(int)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit",
                            "ModulusCheckDigit",
                            "104-118:calculateModulus"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ]
                },
                "48-50:ISINCheckDigit": {
                    "start": 48,
                    "end": 50,
                    "body": [
                        "    public ISINCheckDigit() {\n",
                        "        super(10); // CHECKSTYLE IGNORE MagicNumber\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ISINCheckDigit()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit",
                            "ModulusCheckDigit",
                            "46-48:ModulusCheckDigit"
                        ]
                    ]
                }
            },
            "fields": {
                "42-42:ISIN_CHECK_DIGIT": {
                    "start": 42,
                    "end": 42,
                    "body": [
                        "    public static final CheckDigit ISIN_CHECK_DIGIT = new ISINCheckDigit();\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "CheckDigit",
                            "CheckDigit"
                        ]
                    ]
                },
                "45-45:POSITION_WEIGHT": {
                    "start": 45,
                    "end": 45,
                    "body": [
                        "    private static final int[] POSITION_WEIGHT = new int[] {2, 1};\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ]
                },
                "39-39:MAX_ALPHANUMERIC_VALUE": {
                    "start": 39,
                    "end": 39,
                    "body": [
                        "    private static final int MAX_ALPHANUMERIC_VALUE = 35; // Character.getNumericValue('Z')\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "37-37:serialVersionUID": {
                    "start": 37,
                    "end": 37,
                    "body": [
                        "    private static final long serialVersionUID = -1239211208101323599L;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                }
            }
        }
    }
}