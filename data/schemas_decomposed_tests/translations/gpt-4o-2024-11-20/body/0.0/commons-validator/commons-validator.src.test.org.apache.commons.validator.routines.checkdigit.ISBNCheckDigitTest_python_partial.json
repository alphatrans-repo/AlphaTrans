{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-validator/src/test/java/org/apache/commons/validator/routines/checkdigit/ISBNCheckDigitTest.java",
    "imports": {
        "18-18:import Test": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.junit.Test;\n"
            ]
        }
    },
    "classes": {
        "ISBNCheckDigitTest": {
            "start": 26,
            "end": 26,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "AbstractCheckDigitTest"
            ],
            "methods": {
                "66-95:testInvalidLength_test1_decomposed": {
                    "start": 66,
                    "end": 95,
                    "body": [
                        "    public void testInvalidLength_test1_decomposed()  {\n",
                        "        assertFalse(\"isValid() Lth 9 \", routine.isValid(\"123456789\"));\n",
                        "        assertFalse(\"isValid() Lth 11\", routine.isValid(\"12345678901\"));\n",
                        "        assertFalse(\"isValid() Lth 12\", routine.isValid(\"123456789012\"));\n",
                        "        assertFalse(\"isValid() Lth 14\", routine.isValid(\"12345678901234\"));\n",
                        "        try {\n",
                        "            routine.calculate(\"12345678\");\n",
                        "            fail(\"calculate() Lth 8 - expected exception\");\n",
                        "        } catch (Exception e) {\n",
                        "            assertEquals(\"calculate() Lth 8\", \"Invalid ISBN Length = 8\", e.getMessage());\n",
                        "        }\n",
                        "        try {\n",
                        "            routine.calculate(\"1234567890\");\n",
                        "            fail(\"calculate() Lth 10 - expected exception\");\n",
                        "        } catch (Exception e) {\n",
                        "            assertEquals(\"calculate() Lth 10\", \"Invalid ISBN Length = 10\", e.getMessage());\n",
                        "        }\n",
                        "        try {\n",
                        "            routine.calculate(\"12345678901\");\n",
                        "            fail(\"calculate() Lth 11 - expected exception\");\n",
                        "        } catch (Exception e) {\n",
                        "            assertEquals(\"calculate() Lth 11\", \"Invalid ISBN Length = 11\", e.getMessage());\n",
                        "        }\n",
                        "        try {\n",
                        "            routine.calculate(\"1234567890123\");\n",
                        "            fail(\"calculate() Lth 13 - expected exception\");\n",
                        "        } catch (Exception e) {\n",
                        "            assertEquals(\"calculate() Lth 13\", \"Invalid ISBN Length = 13\", e.getMessage());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testInvalidLength_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.CheckDigit",
                            "CheckDigit",
                            "63-63:isValid"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.CheckDigit",
                            "CheckDigit",
                            "55-55:calculate"
                        ],
                        [
                            "library",
                            "TestCase",
                            "fail(java.lang.String)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.String,java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Throwable",
                            "getMessage()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testInvalidLength_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "58-63:testInvalidLength_test0_decomposed": {
                    "start": 58,
                    "end": 63,
                    "body": [
                        "    public void testInvalidLength_test0_decomposed()  {\n",
                        "        assertFalse(\"isValid() Lth 9 \", routine.isValid(\"123456789\"));\n",
                        "        assertFalse(\"isValid() Lth 11\", routine.isValid(\"12345678901\"));\n",
                        "        assertFalse(\"isValid() Lth 12\", routine.isValid(\"123456789012\"));\n",
                        "        assertFalse(\"isValid() Lth 14\", routine.isValid(\"12345678901234\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testInvalidLength_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.CheckDigit",
                            "CheckDigit",
                            "63-63:isValid"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testInvalidLength_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "39-53:setUp": {
                    "start": 39,
                    "end": 53,
                    "body": [
                        "    protected void setUp() throws Exception {\n",
                        "        super.setUp();\n",
                        "        routine = ISBNCheckDigit.ISBN_CHECK_DIGIT;\n",
                        "        valid =\n",
                        "                new String[] {\n",
                        "                    \"9780072129519\",\n",
                        "                    \"9780764558313\",\n",
                        "                    \"1930110995\",\n",
                        "                    \"020163385X\",\n",
                        "                    \"1590596277\", // ISBN-10 Ubuntu Book\n",
                        "                    \"9781590596272\" // ISBN-13 Ubuntu Book\n",
                        "                };\n",
                        "        missingMessage = \"ISBN Code is missing\";\n",
                        "        zeroSum = \"000000000000\";\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setUp()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "TestCase",
                            "setUp()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def setUp(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "33-35:ISBNCheckDigitTest": {
                    "start": 33,
                    "end": 35,
                    "body": [
                        "    public ISBNCheckDigitTest(String name) {\n",
                        "        super(name);\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ISBNCheckDigitTest(String)",
                    "parameters": [
                        "name"
                    ],
                    "calls": [
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest",
                            "AbstractCheckDigitTest",
                            "82-84:AbstractCheckDigitTest"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, name: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class ISBNCheckDigitTest(AbstractCheckDigitTest, unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import os",
        "import unittest",
        "from src.test.org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest import *",
        "from src.main.org.apache.commons.validator.routines.checkdigit.CheckDigit import *",
        "from src.main.org.apache.commons.validator.routines.checkdigit.ISBNCheckDigit import *"
    ]
}