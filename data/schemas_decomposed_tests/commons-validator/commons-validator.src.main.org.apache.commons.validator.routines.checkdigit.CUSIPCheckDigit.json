{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-validator/src/main/java/org/apache/commons/validator/routines/checkdigit/CUSIPCheckDigit.java",
    "imports": {},
    "classes": {
        "CUSIPCheckDigit": {
            "start": 34,
            "end": 34,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "ModulusCheckDigit"
            ],
            "methods": {
                "88-92:weightedValue": {
                    "start": 88,
                    "end": 92,
                    "body": [
                        "    protected int weightedValue(int charValue, int leftPos, int rightPos) {\n",
                        "        int weight = POSITION_WEIGHT[rightPos % 2];\n",
                        "        int weightedValue = (charValue * weight);\n",
                        "        return ModulusCheckDigit.sumDigits(weightedValue);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "weightedValue(int, int, int)",
                    "parameters": [
                        "charValue",
                        "leftPos",
                        "rightPos"
                    ],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit",
                            "ModulusCheckDigit",
                            "181-189:sumDigits"
                        ]
                    ]
                },
                "59-74:toInt": {
                    "start": 59,
                    "end": 74,
                    "body": [
                        "    protected int toInt(char character, int leftPos, int rightPos) throws CheckDigitException {\n",
                        "        int charValue = Character.getNumericValue(character);\n",
                        "        final int charMax = rightPos == 1 ? 9 : 35; // CHECKSTYLE IGNORE MagicNumber\n",
                        "        if (charValue < 0 || charValue > charMax) {\n",
                        "            throw CheckDigitException.CheckDigitException1(\n",
                        "                    \"Invalid Character[\"\n",
                        "                            + leftPos\n",
                        "                            + \",\"\n",
                        "                            + rightPos\n",
                        "                            + \"] = '\"\n",
                        "                            + charValue\n",
                        "                            + \"' out of range 0 to \"\n",
                        "                            + charMax);\n",
                        "        }\n",
                        "        return charValue;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "toInt(char, int, int)",
                    "parameters": [
                        "character",
                        "leftPos",
                        "rightPos"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "getNumericValue(char)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.CheckDigitException",
                            "CheckDigitException",
                            "34-36:CheckDigitException1"
                        ]
                    ]
                },
                "45-47:CUSIPCheckDigit": {
                    "start": 45,
                    "end": 47,
                    "body": [
                        "    public CUSIPCheckDigit() {\n",
                        "        super(10); // CHECKSTYLE IGNORE MagicNumber\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "CUSIPCheckDigit()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit",
                            "ModulusCheckDigit",
                            "46-48:ModulusCheckDigit"
                        ]
                    ]
                }
            },
            "fields": {
                "39-39:CUSIP_CHECK_DIGIT": {
                    "start": 39,
                    "end": 39,
                    "body": [
                        "    public static final CheckDigit CUSIP_CHECK_DIGIT = new CUSIPCheckDigit();\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "CheckDigit",
                            "CheckDigit"
                        ]
                    ]
                },
                "42-42:POSITION_WEIGHT": {
                    "start": 42,
                    "end": 42,
                    "body": [
                        "    private static final int[] POSITION_WEIGHT = new int[] {2, 1};\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ]
                },
                "36-36:serialVersionUID": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    private static final long serialVersionUID = 666941918490152456L;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                }
            }
        }
    }
}