{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
    "imports": {
        "23-23:import UnsupportedEncodingException": {
            "start": 23,
            "end": 23,
            "body": [
                "import java.io.UnsupportedEncodingException;\n"
            ]
        },
        "24-24:import ByteBuffer": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.nio.ByteBuffer;\n"
            ]
        },
        "25-25:import StandardCharsets": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.nio.charset.StandardCharsets;\n"
            ]
        },
        "21-21:import Test": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "20-20:import Assert": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.junit.Assert;\n"
            ]
        }
    },
    "classes": {
        "StringUtilsTest": {
            "start": 28,
            "end": 28,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "511-516:testByteBufferUtf8_test2_decomposed": {
                    "start": 511,
                    "end": 516,
                    "body": [
                        "    public void testByteBufferUtf8_test2_decomposed()  {\n",
                        "        Assert.assertNull(\"Should be null safe\", StringUtils.getByteBufferUtf8(null));\n",
                        "        final String text = \"asdhjfhsadiogasdjhagsdygfjasfgsdaksjdhfk\";\n",
                        "        final ByteBuffer bb = StringUtils.getByteBufferUtf8(text);\n",
                        "        Assert.assertArrayEquals(text.getBytes(StandardCharsets.UTF_8), bb.array());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testByteBufferUtf8_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "108-110:getByteBufferUtf8"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(byte[],byte[])"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.nio.charset.Charset)"
                        ],
                        [
                            "library",
                            "java.base/java/nio/ByteBuffer",
                            "array()"
                        ]
                    ]
                },
                "504-508:testByteBufferUtf8_test1_decomposed": {
                    "start": 504,
                    "end": 508,
                    "body": [
                        "    public void testByteBufferUtf8_test1_decomposed()  {\n",
                        "        Assert.assertNull(\"Should be null safe\", StringUtils.getByteBufferUtf8(null));\n",
                        "        final String text = \"asdhjfhsadiogasdjhagsdygfjasfgsdaksjdhfk\";\n",
                        "        final ByteBuffer bb = StringUtils.getByteBufferUtf8(text);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testByteBufferUtf8_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "108-110:getByteBufferUtf8"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "499-501:testByteBufferUtf8_test0_decomposed": {
                    "start": 499,
                    "end": 501,
                    "body": [
                        "    public void testByteBufferUtf8_test0_decomposed()  {\n",
                        "        Assert.assertNull(\"Should be null safe\", StringUtils.getByteBufferUtf8(null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testByteBufferUtf8_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "108-110:getByteBufferUtf8"
                        ]
                    ]
                },
                "491-496:testEqualsCS2_test0_decomposed": {
                    "start": 491,
                    "end": 496,
                    "body": [
                        "    public void testEqualsCS2_test0_decomposed()  {\n",
                        "        Assert.assertTrue(StringUtils.equals(\"abc\", new StringBuilder(\"abc\")));\n",
                        "        Assert.assertFalse(StringUtils.equals(new StringBuilder(\"abc\"), \"abcd\"));\n",
                        "        Assert.assertFalse(StringUtils.equals(\"abcd\", new StringBuilder(\"abc\")));\n",
                        "        Assert.assertFalse(StringUtils.equals(new StringBuilder(\"abc\"), \"ABC\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEqualsCS2_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "66-78:equals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder(java.lang.String)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ]
                    ]
                },
                "481-488:testEqualsCS1_test0_decomposed": {
                    "start": 481,
                    "end": 488,
                    "body": [
                        "    public void testEqualsCS1_test0_decomposed()  {\n",
                        "        Assert.assertFalse(StringUtils.equals(new StringBuilder(\"abc\"), null));\n",
                        "        Assert.assertFalse(StringUtils.equals(null, new StringBuilder(\"abc\")));\n",
                        "        Assert.assertTrue(StringUtils.equals(new StringBuilder(\"abc\"), new StringBuilder(\"abc\")));\n",
                        "        Assert.assertFalse(StringUtils.equals(new StringBuilder(\"abc\"), new StringBuilder(\"abcd\")));\n",
                        "        Assert.assertFalse(StringUtils.equals(new StringBuilder(\"abcd\"), new StringBuilder(\"abc\")));\n",
                        "        Assert.assertFalse(StringUtils.equals(new StringBuilder(\"abc\"), new StringBuilder(\"ABC\")));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEqualsCS1_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "66-78:equals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder(java.lang.String)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ]
                },
                "470-478:testEqualsString_test0_decomposed": {
                    "start": 470,
                    "end": 478,
                    "body": [
                        "    public void testEqualsString_test0_decomposed()  {\n",
                        "        Assert.assertTrue(StringUtils.equals(null, null));\n",
                        "        Assert.assertFalse(StringUtils.equals(\"abc\", null));\n",
                        "        Assert.assertFalse(StringUtils.equals(null, \"abc\"));\n",
                        "        Assert.assertTrue(StringUtils.equals(\"abc\", \"abc\"));\n",
                        "        Assert.assertFalse(StringUtils.equals(\"abc\", \"abcd\"));\n",
                        "        Assert.assertFalse(StringUtils.equals(\"abcd\", \"abc\"));\n",
                        "        Assert.assertFalse(StringUtils.equals(\"abc\", \"ABC\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEqualsString_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "66-78:equals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ]
                    ]
                },
                "461-467:testNewStringUtf8_test2_decomposed": {
                    "start": 461,
                    "end": 467,
                    "body": [
                        "    public void testNewStringUtf8_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-8\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE, charsetName);\n",
                        "        final String actual = StringUtils.newStringUtf8(BYTES_FIXTURE);\n",
                        "        Assert.assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf8_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "396-398:newStringUtf8"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "453-458:testNewStringUtf8_test1_decomposed": {
                    "start": 453,
                    "end": 458,
                    "body": [
                        "    public void testNewStringUtf8_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-8\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE, charsetName);\n",
                        "        final String actual = StringUtils.newStringUtf8(BYTES_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf8_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "396-398:newStringUtf8"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "447-450:testNewStringUtf8_test0_decomposed": {
                    "start": 447,
                    "end": 450,
                    "body": [
                        "    public void testNewStringUtf8_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-8\";\n",
                        "        testNewString(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf8_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "438-444:testNewStringUtf16Le_test2_decomposed": {
                    "start": 438,
                    "end": 444,
                    "body": [
                        "    public void testNewStringUtf16Le_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16LE\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE_16LE, charsetName);\n",
                        "        final String actual = StringUtils.newStringUtf16Le(BYTES_FIXTURE_16LE);\n",
                        "        Assert.assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf16Le_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "381-383:newStringUtf16Le"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "430-435:testNewStringUtf16Le_test1_decomposed": {
                    "start": 430,
                    "end": 435,
                    "body": [
                        "    public void testNewStringUtf16Le_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16LE\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE_16LE, charsetName);\n",
                        "        final String actual = StringUtils.newStringUtf16Le(BYTES_FIXTURE_16LE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf16Le_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "381-383:newStringUtf16Le"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "424-427:testNewStringUtf16Le_test0_decomposed": {
                    "start": 424,
                    "end": 427,
                    "body": [
                        "    public void testNewStringUtf16Le_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16LE\";\n",
                        "        testNewString(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf16Le_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "415-421:testNewStringUtf16Be_test2_decomposed": {
                    "start": 415,
                    "end": 421,
                    "body": [
                        "    public void testNewStringUtf16Be_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16BE\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE_16BE, charsetName);\n",
                        "        final String actual = StringUtils.newStringUtf16Be(BYTES_FIXTURE_16BE);\n",
                        "        Assert.assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf16Be_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "366-368:newStringUtf16Be"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "407-412:testNewStringUtf16Be_test1_decomposed": {
                    "start": 407,
                    "end": 412,
                    "body": [
                        "    public void testNewStringUtf16Be_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16BE\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE_16BE, charsetName);\n",
                        "        final String actual = StringUtils.newStringUtf16Be(BYTES_FIXTURE_16BE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf16Be_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "366-368:newStringUtf16Be"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "401-404:testNewStringUtf16Be_test0_decomposed": {
                    "start": 401,
                    "end": 404,
                    "body": [
                        "    public void testNewStringUtf16Be_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16BE\";\n",
                        "        testNewString(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf16Be_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "392-398:testNewStringUtf16_test2_decomposed": {
                    "start": 392,
                    "end": 398,
                    "body": [
                        "    public void testNewStringUtf16_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE, charsetName);\n",
                        "        final String actual = StringUtils.newStringUtf16(BYTES_FIXTURE);\n",
                        "        Assert.assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf16_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "351-353:newStringUtf16"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "384-389:testNewStringUtf16_test1_decomposed": {
                    "start": 384,
                    "end": 389,
                    "body": [
                        "    public void testNewStringUtf16_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE, charsetName);\n",
                        "        final String actual = StringUtils.newStringUtf16(BYTES_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf16_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "351-353:newStringUtf16"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "378-381:testNewStringUtf16_test0_decomposed": {
                    "start": 378,
                    "end": 381,
                    "body": [
                        "    public void testNewStringUtf16_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16\";\n",
                        "        testNewString(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUtf16_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "369-375:testNewStringUsAscii_test2_decomposed": {
                    "start": 369,
                    "end": 375,
                    "body": [
                        "    public void testNewStringUsAscii_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"US-ASCII\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE, charsetName);\n",
                        "        final String actual = StringUtils.newStringUsAscii(BYTES_FIXTURE);\n",
                        "        Assert.assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUsAscii_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "336-338:newStringUsAscii"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "361-366:testNewStringUsAscii_test1_decomposed": {
                    "start": 361,
                    "end": 366,
                    "body": [
                        "    public void testNewStringUsAscii_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"US-ASCII\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE, charsetName);\n",
                        "        final String actual = StringUtils.newStringUsAscii(BYTES_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUsAscii_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "336-338:newStringUsAscii"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "355-358:testNewStringUsAscii_test0_decomposed": {
                    "start": 355,
                    "end": 358,
                    "body": [
                        "    public void testNewStringUsAscii_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"US-ASCII\";\n",
                        "        testNewString(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringUsAscii_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "346-352:testNewStringIso8859_1_test2_decomposed": {
                    "start": 346,
                    "end": 352,
                    "body": [
                        "    public void testNewStringIso8859_1_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"ISO-8859-1\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE, charsetName);\n",
                        "        final String actual = StringUtils.newStringIso8859_1(BYTES_FIXTURE);\n",
                        "        Assert.assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringIso8859_1_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "321-323:newStringIso8859_1"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "338-343:testNewStringIso8859_1_test1_decomposed": {
                    "start": 338,
                    "end": 343,
                    "body": [
                        "    public void testNewStringIso8859_1_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"ISO-8859-1\";\n",
                        "        testNewString(charsetName);\n",
                        "        final String expected = new String(BYTES_FIXTURE, charsetName);\n",
                        "        final String actual = StringUtils.newStringIso8859_1(BYTES_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringIso8859_1_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "321-323:newStringIso8859_1"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "332-335:testNewStringIso8859_1_test0_decomposed": {
                    "start": 332,
                    "end": 335,
                    "body": [
                        "    public void testNewStringIso8859_1_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"ISO-8859-1\";\n",
                        "        testNewString(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringIso8859_1_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "67-71:testNewString"
                        ]
                    ]
                },
                "322-329:testNewStringNullInput_CODEC229_test5_decomposed": {
                    "start": 322,
                    "end": 329,
                    "body": [
                        "    public void testNewStringNullInput_CODEC229_test5_decomposed()  {\n",
                        "        Assert.assertNull(StringUtils.newStringUtf8(null));\n",
                        "        Assert.assertNull(StringUtils.newStringIso8859_1(null));\n",
                        "        Assert.assertNull(StringUtils.newStringUsAscii(null));\n",
                        "        Assert.assertNull(StringUtils.newStringUtf16(null));\n",
                        "        Assert.assertNull(StringUtils.newStringUtf16Be(null));\n",
                        "        Assert.assertNull(StringUtils.newStringUtf16Le(null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringNullInput_CODEC229_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "396-398:newStringUtf8"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "321-323:newStringIso8859_1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "336-338:newStringUsAscii"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "351-353:newStringUtf16"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "366-368:newStringUtf16Be"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "381-383:newStringUtf16Le"
                        ]
                    ]
                },
                "313-319:testNewStringNullInput_CODEC229_test4_decomposed": {
                    "start": 313,
                    "end": 319,
                    "body": [
                        "    public void testNewStringNullInput_CODEC229_test4_decomposed()  {\n",
                        "        Assert.assertNull(StringUtils.newStringUtf8(null));\n",
                        "        Assert.assertNull(StringUtils.newStringIso8859_1(null));\n",
                        "        Assert.assertNull(StringUtils.newStringUsAscii(null));\n",
                        "        Assert.assertNull(StringUtils.newStringUtf16(null));\n",
                        "        Assert.assertNull(StringUtils.newStringUtf16Be(null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringNullInput_CODEC229_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "396-398:newStringUtf8"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "321-323:newStringIso8859_1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "336-338:newStringUsAscii"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "351-353:newStringUtf16"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "366-368:newStringUtf16Be"
                        ]
                    ]
                },
                "305-310:testNewStringNullInput_CODEC229_test3_decomposed": {
                    "start": 305,
                    "end": 310,
                    "body": [
                        "    public void testNewStringNullInput_CODEC229_test3_decomposed()  {\n",
                        "        Assert.assertNull(StringUtils.newStringUtf8(null));\n",
                        "        Assert.assertNull(StringUtils.newStringIso8859_1(null));\n",
                        "        Assert.assertNull(StringUtils.newStringUsAscii(null));\n",
                        "        Assert.assertNull(StringUtils.newStringUtf16(null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringNullInput_CODEC229_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "396-398:newStringUtf8"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "321-323:newStringIso8859_1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "336-338:newStringUsAscii"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "351-353:newStringUtf16"
                        ]
                    ]
                },
                "298-302:testNewStringNullInput_CODEC229_test2_decomposed": {
                    "start": 298,
                    "end": 302,
                    "body": [
                        "    public void testNewStringNullInput_CODEC229_test2_decomposed()  {\n",
                        "        Assert.assertNull(StringUtils.newStringUtf8(null));\n",
                        "        Assert.assertNull(StringUtils.newStringIso8859_1(null));\n",
                        "        Assert.assertNull(StringUtils.newStringUsAscii(null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringNullInput_CODEC229_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "396-398:newStringUtf8"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "321-323:newStringIso8859_1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "336-338:newStringUsAscii"
                        ]
                    ]
                },
                "292-295:testNewStringNullInput_CODEC229_test1_decomposed": {
                    "start": 292,
                    "end": 295,
                    "body": [
                        "    public void testNewStringNullInput_CODEC229_test1_decomposed()  {\n",
                        "        Assert.assertNull(StringUtils.newStringUtf8(null));\n",
                        "        Assert.assertNull(StringUtils.newStringIso8859_1(null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringNullInput_CODEC229_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "396-398:newStringUtf8"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "321-323:newStringIso8859_1"
                        ]
                    ]
                },
                "287-289:testNewStringNullInput_CODEC229_test0_decomposed": {
                    "start": 287,
                    "end": 289,
                    "body": [
                        "    public void testNewStringNullInput_CODEC229_test0_decomposed()  {\n",
                        "        Assert.assertNull(StringUtils.newStringUtf8(null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringNullInput_CODEC229_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "396-398:newStringUtf8"
                        ]
                    ]
                },
                "282-284:testNewStringNullInput_test0_decomposed": {
                    "start": 282,
                    "end": 284,
                    "body": [
                        "    public void testNewStringNullInput_test0_decomposed()  {\n",
                        "        Assert.assertNull(StringUtils.newString1(null, \"UNKNOWN\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringNullInput_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "298-307:newString1"
                        ]
                    ]
                },
                "273-279:testNewStringBadEnc_test0_decomposed": {
                    "start": 273,
                    "end": 279,
                    "body": [
                        "    public void testNewStringBadEnc_test0_decomposed()  {\n",
                        "        try {\n",
                        "            StringUtils.newString1(BYTES_FIXTURE, \"UNKNOWN\");\n",
                        "            Assert.fail(\"Expected \" + IllegalStateException.class.getName());\n",
                        "        } catch (final IllegalStateException e) {\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewStringBadEnc_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "298-307:newString1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getName()"
                        ]
                    ]
                },
                "268-270:testGetBytesUncheckedNullInput_test0_decomposed": {
                    "start": 268,
                    "end": 270,
                    "body": [
                        "    public void testGetBytesUncheckedNullInput_test0_decomposed()  {\n",
                        "        Assert.assertNull(StringUtils.getBytesUnchecked(null, \"UNKNOWN\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUncheckedNullInput_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "161-170:getBytesUnchecked"
                        ]
                    ]
                },
                "259-265:testGetBytesUncheckedBadName_test0_decomposed": {
                    "start": 259,
                    "end": 265,
                    "body": [
                        "    public void testGetBytesUncheckedBadName_test0_decomposed()  {\n",
                        "        try {\n",
                        "            StringUtils.getBytesUnchecked(STRING_FIXTURE, \"UNKNOWN\");\n",
                        "            Assert.fail(\"Expected \" + IllegalStateException.class.getName());\n",
                        "        } catch (final IllegalStateException e) {\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUncheckedBadName_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "161-170:getBytesUnchecked"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getName()"
                        ]
                    ]
                },
                "250-256:testGetBytesUtf8_test3_decomposed": {
                    "start": 250,
                    "end": 256,
                    "body": [
                        "    public void testGetBytesUtf8_test3_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-8\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUtf8(STRING_FIXTURE);\n",
                        "        Assert.assertArrayEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf8_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "258-260:getBytesUtf8"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(byte[],byte[])"
                        ]
                    ]
                },
                "242-247:testGetBytesUtf8_test2_decomposed": {
                    "start": 242,
                    "end": 247,
                    "body": [
                        "    public void testGetBytesUtf8_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-8\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUtf8(STRING_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf8_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "258-260:getBytesUtf8"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "235-239:testGetBytesUtf8_test1_decomposed": {
                    "start": 235,
                    "end": 239,
                    "body": [
                        "    public void testGetBytesUtf8_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-8\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf8_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "229-232:testGetBytesUtf8_test0_decomposed": {
                    "start": 229,
                    "end": 232,
                    "body": [
                        "    public void testGetBytesUtf8_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-8\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf8_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "220-226:testGetBytesUtf16Le_test3_decomposed": {
                    "start": 220,
                    "end": 226,
                    "body": [
                        "    public void testGetBytesUtf16Le_test3_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16LE\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUtf16Le(STRING_FIXTURE);\n",
                        "        Assert.assertArrayEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16Le_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "240-242:getBytesUtf16Le"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(byte[],byte[])"
                        ]
                    ]
                },
                "212-217:testGetBytesUtf16Le_test2_decomposed": {
                    "start": 212,
                    "end": 217,
                    "body": [
                        "    public void testGetBytesUtf16Le_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16LE\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUtf16Le(STRING_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16Le_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "240-242:getBytesUtf16Le"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "205-209:testGetBytesUtf16Le_test1_decomposed": {
                    "start": 205,
                    "end": 209,
                    "body": [
                        "    public void testGetBytesUtf16Le_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16LE\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16Le_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "199-202:testGetBytesUtf16Le_test0_decomposed": {
                    "start": 199,
                    "end": 202,
                    "body": [
                        "    public void testGetBytesUtf16Le_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16LE\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16Le_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "190-196:testGetBytesUtf16Be_test3_decomposed": {
                    "start": 190,
                    "end": 196,
                    "body": [
                        "    public void testGetBytesUtf16Be_test3_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16BE\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUtf16Be(STRING_FIXTURE);\n",
                        "        Assert.assertArrayEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16Be_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "222-224:getBytesUtf16Be"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(byte[],byte[])"
                        ]
                    ]
                },
                "182-187:testGetBytesUtf16Be_test2_decomposed": {
                    "start": 182,
                    "end": 187,
                    "body": [
                        "    public void testGetBytesUtf16Be_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16BE\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUtf16Be(STRING_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16Be_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "222-224:getBytesUtf16Be"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "175-179:testGetBytesUtf16Be_test1_decomposed": {
                    "start": 175,
                    "end": 179,
                    "body": [
                        "    public void testGetBytesUtf16Be_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16BE\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16Be_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "169-172:testGetBytesUtf16Be_test0_decomposed": {
                    "start": 169,
                    "end": 172,
                    "body": [
                        "    public void testGetBytesUtf16Be_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16BE\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16Be_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "160-166:testGetBytesUtf16_test3_decomposed": {
                    "start": 160,
                    "end": 166,
                    "body": [
                        "    public void testGetBytesUtf16_test3_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUtf16(STRING_FIXTURE);\n",
                        "        Assert.assertArrayEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "204-206:getBytesUtf16"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(byte[],byte[])"
                        ]
                    ]
                },
                "152-157:testGetBytesUtf16_test2_decomposed": {
                    "start": 152,
                    "end": 157,
                    "body": [
                        "    public void testGetBytesUtf16_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUtf16(STRING_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "204-206:getBytesUtf16"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "145-149:testGetBytesUtf16_test1_decomposed": {
                    "start": 145,
                    "end": 149,
                    "body": [
                        "    public void testGetBytesUtf16_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "139-142:testGetBytesUtf16_test0_decomposed": {
                    "start": 139,
                    "end": 142,
                    "body": [
                        "    public void testGetBytesUtf16_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"UTF-16\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUtf16_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "130-136:testGetBytesUsAscii_test3_decomposed": {
                    "start": 130,
                    "end": 136,
                    "body": [
                        "    public void testGetBytesUsAscii_test3_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"US-ASCII\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUsAscii(STRING_FIXTURE);\n",
                        "        Assert.assertArrayEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUsAscii_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "186-188:getBytesUsAscii"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(byte[],byte[])"
                        ]
                    ]
                },
                "122-127:testGetBytesUsAscii_test2_decomposed": {
                    "start": 122,
                    "end": 127,
                    "body": [
                        "    public void testGetBytesUsAscii_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"US-ASCII\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUsAscii(STRING_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUsAscii_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "186-188:getBytesUsAscii"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "115-119:testGetBytesUsAscii_test1_decomposed": {
                    "start": 115,
                    "end": 119,
                    "body": [
                        "    public void testGetBytesUsAscii_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"US-ASCII\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUsAscii_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "109-112:testGetBytesUsAscii_test0_decomposed": {
                    "start": 109,
                    "end": 112,
                    "body": [
                        "    public void testGetBytesUsAscii_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"US-ASCII\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUsAscii_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "100-106:testGetBytesIso8859_1_test3_decomposed": {
                    "start": 100,
                    "end": 106,
                    "body": [
                        "    public void testGetBytesIso8859_1_test3_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"ISO-8859-1\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesIso8859_1(STRING_FIXTURE);\n",
                        "        Assert.assertArrayEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesIso8859_1_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(byte[],byte[])"
                        ]
                    ]
                },
                "92-97:testGetBytesIso8859_1_test2_decomposed": {
                    "start": 92,
                    "end": 97,
                    "body": [
                        "    public void testGetBytesIso8859_1_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"ISO-8859-1\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesIso8859_1(STRING_FIXTURE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesIso8859_1_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "141-143:getBytesIso8859_1"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "85-89:testGetBytesIso8859_1_test1_decomposed": {
                    "start": 85,
                    "end": 89,
                    "body": [
                        "    public void testGetBytesIso8859_1_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"ISO-8859-1\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesIso8859_1_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "79-82:testGetBytesIso8859_1_test0_decomposed": {
                    "start": 79,
                    "end": 82,
                    "body": [
                        "    public void testGetBytesIso8859_1_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        final String charsetName = \"ISO-8859-1\";\n",
                        "        testGetBytesUnchecked(charsetName);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesIso8859_1_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.binary.StringUtilsTest",
                            "StringUtilsTest",
                            "46-51:testGetBytesUnchecked"
                        ]
                    ]
                },
                "74-76:testConstructor_test0_decomposed": {
                    "start": 74,
                    "end": 76,
                    "body": [
                        "    public void testConstructor_test0_decomposed()  {\n",
                        "        new StringUtils();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testConstructor_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "StringUtils"
                        ]
                    ]
                },
                "67-71:testNewString": {
                    "start": 67,
                    "end": 71,
                    "body": [
                        "    private void testNewString(final String charsetName) throws UnsupportedEncodingException {\n",
                        "        final String expected = new String(BYTES_FIXTURE, charsetName);\n",
                        "        final String actual = StringUtils.newString1(BYTES_FIXTURE, charsetName);\n",
                        "        Assert.assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNewString(String)",
                    "parameters": [
                        "charsetName"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(byte[],java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "298-307:newString1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "46-51:testGetBytesUnchecked": {
                    "start": 46,
                    "end": 51,
                    "body": [
                        "    private void testGetBytesUnchecked(final String charsetName)\n",
                        "            throws UnsupportedEncodingException {\n",
                        "        final byte[] expected = STRING_FIXTURE.getBytes(charsetName);\n",
                        "        final byte[] actual = StringUtils.getBytesUnchecked(STRING_FIXTURE, charsetName);\n",
                        "        Assert.assertArrayEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testGetBytesUnchecked(String)",
                    "parameters": [
                        "charsetName"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "161-170:getBytesUnchecked"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(byte[],byte[])"
                        ]
                    ]
                }
            },
            "fields": {
                "36-36:STRING_FIXTURE": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    private static final String STRING_FIXTURE = \"ABC\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "34-34:BYTES_FIXTURE_16LE": {
                    "start": 34,
                    "end": 34,
                    "body": [
                        "    private static final byte[] BYTES_FIXTURE_16LE = {'a', 0, 'b', 0, 'c', 0};\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "byte[]",
                            "byte[]"
                        ]
                    ]
                },
                "32-32:BYTES_FIXTURE_16BE": {
                    "start": 32,
                    "end": 32,
                    "body": [
                        "    private static final byte[] BYTES_FIXTURE_16BE = {0, 'a', 0, 'b', 0, 'c'};\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "byte[]",
                            "byte[]"
                        ]
                    ]
                },
                "30-30:BYTES_FIXTURE": {
                    "start": 30,
                    "end": 30,
                    "body": [
                        "    private static final byte[] BYTES_FIXTURE = {'a', 'b', 'c'};\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "byte[]",
                            "byte[]"
                        ]
                    ]
                }
            }
        }
    }
}