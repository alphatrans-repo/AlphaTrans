{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/test/java/org/apache/commons/graph/builder/GraphBuilderTestCase.java",
    "imports": {
        "27-27:import UndirectedMutableGraph": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "28-28:import Test": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "26-26:import BaseLabeledWeightedEdge": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.graph.model.BaseLabeledWeightedEdge;\n"
            ]
        },
        "25-25:import BaseLabeledVertex": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.apache.commons.graph.model.BaseLabeledVertex;\n"
            ]
        },
        "23-23:import static Assert.assertEquals": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        },
        "22-22:import static CommonsGraph.newUndirectedMutableGraph": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.CommonsGraph.newUndirectedMutableGraph;\n"
            ]
        }
    },
    "classes": {
        "GraphBuilderTestCase": {
            "start": 30,
            "end": 30,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>(...) { ... }",
                "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>(...) { ... }"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "216-280:testVerifyProducedGraphesAreEquals_test10_decomposed": {
                    "start": 216,
                    "end": 280,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test10_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        BaseLabeledVertex d = new BaseLabeledVertex(\"d\");\n",
                        "        BaseLabeledVertex e = new BaseLabeledVertex(\"e\");\n",
                        "        BaseLabeledVertex goal = new BaseLabeledVertex(\"goal\");\n",
                        "        expected.addVertex(start);\n",
                        "        expected.addVertex(a);\n",
                        "        expected.addVertex(b);\n",
                        "        expected.addVertex(c);\n",
                        "        expected.addVertex(d);\n",
                        "        expected.addVertex(e);\n",
                        "        expected.addVertex(goal);\n",
                        "        expected.addEdge(start, new BaseLabeledWeightedEdge<Double>(\"start <-> a\", 1.5D), a);\n",
                        "        expected.addEdge(start, new BaseLabeledWeightedEdge<Double>(\"start <-> d\", 2D), d);\n",
                        "        expected.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a <-> b\", 2D), b);\n",
                        "        expected.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b <-> c\", 3D), c);\n",
                        "        expected.addEdge(c, new BaseLabeledWeightedEdge<Double>(\"c <-> goal\", 3D), goal);\n",
                        "        expected.addEdge(d, new BaseLabeledWeightedEdge<Double>(\"d <-> e\", 3D), e);\n",
                        "        expected.addEdge(e, new BaseLabeledWeightedEdge<Double>(\"e <-> goal\", 2D), goal);\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<\n",
                        "                                BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex start = addVertex(new BaseLabeledVertex(\"start\"));\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"a\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"b\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"c\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"d\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"e\"));\n",
                        "                                BaseLabeledVertex goal = addVertex(new BaseLabeledVertex(\"goal\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"start <-> a\", 1.5D))\n",
                        "                                        .from(start)\n",
                        "                                        .to(a);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"start <-> d\", 2D))\n",
                        "                                        .from(start)\n",
                        "                                        .to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"a <-> b\", 2D))\n",
                        "                                        .from(a)\n",
                        "                                        .to(b);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"b <-> c\", 3D))\n",
                        "                                        .from(b)\n",
                        "                                        .to(c);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"c <-> goal\", 3D))\n",
                        "                                        .from(c)\n",
                        "                                        .to(goal);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"d <-> e\", 3D))\n",
                        "                                        .from(d)\n",
                        "                                        .to(e);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"e <-> goal\", 2D))\n",
                        "                                        .from(e)\n",
                        "                                        .to(goal);\n",
                        "                            }\n",
                        "                        });\n",
                        "        assertEquals(expected, actual);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "150-213:testVerifyProducedGraphesAreEquals_test9_decomposed": {
                    "start": 150,
                    "end": 213,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test9_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        BaseLabeledVertex d = new BaseLabeledVertex(\"d\");\n",
                        "        BaseLabeledVertex e = new BaseLabeledVertex(\"e\");\n",
                        "        BaseLabeledVertex goal = new BaseLabeledVertex(\"goal\");\n",
                        "        expected.addVertex(start);\n",
                        "        expected.addVertex(a);\n",
                        "        expected.addVertex(b);\n",
                        "        expected.addVertex(c);\n",
                        "        expected.addVertex(d);\n",
                        "        expected.addVertex(e);\n",
                        "        expected.addVertex(goal);\n",
                        "        expected.addEdge(start, new BaseLabeledWeightedEdge<Double>(\"start <-> a\", 1.5D), a);\n",
                        "        expected.addEdge(start, new BaseLabeledWeightedEdge<Double>(\"start <-> d\", 2D), d);\n",
                        "        expected.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a <-> b\", 2D), b);\n",
                        "        expected.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b <-> c\", 3D), c);\n",
                        "        expected.addEdge(c, new BaseLabeledWeightedEdge<Double>(\"c <-> goal\", 3D), goal);\n",
                        "        expected.addEdge(d, new BaseLabeledWeightedEdge<Double>(\"d <-> e\", 3D), e);\n",
                        "        expected.addEdge(e, new BaseLabeledWeightedEdge<Double>(\"e <-> goal\", 2D), goal);\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<\n",
                        "                                BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>() {\n",
                        "\n",
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex start = addVertex(new BaseLabeledVertex(\"start\"));\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"a\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"b\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"c\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"d\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"e\"));\n",
                        "                                BaseLabeledVertex goal = addVertex(new BaseLabeledVertex(\"goal\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"start <-> a\", 1.5D))\n",
                        "                                        .from(start)\n",
                        "                                        .to(a);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"start <-> d\", 2D))\n",
                        "                                        .from(start)\n",
                        "                                        .to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"a <-> b\", 2D))\n",
                        "                                        .from(a)\n",
                        "                                        .to(b);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"b <-> c\", 3D))\n",
                        "                                        .from(b)\n",
                        "                                        .to(c);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"c <-> goal\", 3D))\n",
                        "                                        .from(c)\n",
                        "                                        .to(goal);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"d <-> e\", 3D))\n",
                        "                                        .from(d)\n",
                        "                                        .to(e);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"e <-> goal\", 2D))\n",
                        "                                        .from(e)\n",
                        "                                        .to(goal);\n",
                        "                            }\n",
                        "                        });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "201-204:newUndirectedMutableGraph"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ]
                    ]
                },
                "123-147:testVerifyProducedGraphesAreEquals_test8_decomposed": {
                    "start": 123,
                    "end": 147,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test8_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        BaseLabeledVertex d = new BaseLabeledVertex(\"d\");\n",
                        "        BaseLabeledVertex e = new BaseLabeledVertex(\"e\");\n",
                        "        BaseLabeledVertex goal = new BaseLabeledVertex(\"goal\");\n",
                        "        expected.addVertex(start);\n",
                        "        expected.addVertex(a);\n",
                        "        expected.addVertex(b);\n",
                        "        expected.addVertex(c);\n",
                        "        expected.addVertex(d);\n",
                        "        expected.addVertex(e);\n",
                        "        expected.addVertex(goal);\n",
                        "        expected.addEdge(start, new BaseLabeledWeightedEdge<Double>(\"start <-> a\", 1.5D), a);\n",
                        "        expected.addEdge(start, new BaseLabeledWeightedEdge<Double>(\"start <-> d\", 2D), d);\n",
                        "        expected.addEdge(a, new BaseLabeledWeightedEdge<Double>(\"a <-> b\", 2D), b);\n",
                        "        expected.addEdge(b, new BaseLabeledWeightedEdge<Double>(\"b <-> c\", 3D), c);\n",
                        "        expected.addEdge(c, new BaseLabeledWeightedEdge<Double>(\"c <-> goal\", 3D), goal);\n",
                        "        expected.addEdge(d, new BaseLabeledWeightedEdge<Double>(\"d <-> e\", 3D), e);\n",
                        "        expected.addEdge(e, new BaseLabeledWeightedEdge<Double>(\"e <-> goal\", 2D), goal);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge(org.apache.commons.graph.model.BaseLabeledVertex,org.apache.commons.graph.model.BaseLabeledWeightedEdge,org.apache.commons.graph.model.BaseLabeledVertex)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>(java.lang.String,java.lang.Double)"
                        ]
                    ]
                },
                "103-120:testVerifyProducedGraphesAreEquals_test7_decomposed": {
                    "start": 103,
                    "end": 120,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test7_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        BaseLabeledVertex d = new BaseLabeledVertex(\"d\");\n",
                        "        BaseLabeledVertex e = new BaseLabeledVertex(\"e\");\n",
                        "        BaseLabeledVertex goal = new BaseLabeledVertex(\"goal\");\n",
                        "        expected.addVertex(start);\n",
                        "        expected.addVertex(a);\n",
                        "        expected.addVertex(b);\n",
                        "        expected.addVertex(c);\n",
                        "        expected.addVertex(d);\n",
                        "        expected.addVertex(e);\n",
                        "        expected.addVertex(goal);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex(org.apache.commons.graph.model.BaseLabeledVertex)"
                        ]
                    ]
                },
                "90-100:testVerifyProducedGraphesAreEquals_test6_decomposed": {
                    "start": 90,
                    "end": 100,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test6_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        BaseLabeledVertex d = new BaseLabeledVertex(\"d\");\n",
                        "        BaseLabeledVertex e = new BaseLabeledVertex(\"e\");\n",
                        "        BaseLabeledVertex goal = new BaseLabeledVertex(\"goal\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "78-87:testVerifyProducedGraphesAreEquals_test5_decomposed": {
                    "start": 78,
                    "end": 87,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test5_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        BaseLabeledVertex d = new BaseLabeledVertex(\"d\");\n",
                        "        BaseLabeledVertex e = new BaseLabeledVertex(\"e\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "67-75:testVerifyProducedGraphesAreEquals_test4_decomposed": {
                    "start": 67,
                    "end": 75,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test4_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "        BaseLabeledVertex d = new BaseLabeledVertex(\"d\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "57-64:testVerifyProducedGraphesAreEquals_test3_decomposed": {
                    "start": 57,
                    "end": 64,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test3_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "        BaseLabeledVertex c = new BaseLabeledVertex(\"c\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "48-54:testVerifyProducedGraphesAreEquals_test2_decomposed": {
                    "start": 48,
                    "end": 54,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test2_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "        BaseLabeledVertex b = new BaseLabeledVertex(\"b\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "40-45:testVerifyProducedGraphesAreEquals_test1_decomposed": {
                    "start": 40,
                    "end": 45,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test1_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "        BaseLabeledVertex a = new BaseLabeledVertex(\"a\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                },
                "33-37:testVerifyProducedGraphesAreEquals_test0_decomposed": {
                    "start": 33,
                    "end": 37,
                    "body": [
                        "    public void testVerifyProducedGraphesAreEquals_test0_decomposed()  {\n",
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> expected =\n",
                        "                new UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>();\n",
                        "        BaseLabeledVertex start = new BaseLabeledVertex(\"start\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVerifyProducedGraphesAreEquals_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>()"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ]
                    ]
                }
            },
            "fields": {}
        },
        "new AbstractGraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>(...) { ... }": {
            "start": 176,
            "end": 177,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "GraphBuilderTestCase",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "179-211:connect0": {
                    "start": 179,
                    "end": 211,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex start = addVertex(new BaseLabeledVertex(\"start\"));\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"a\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"b\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"c\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"d\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"e\"));\n",
                        "                                BaseLabeledVertex goal = addVertex(new BaseLabeledVertex(\"goal\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"start <-> a\", 1.5D))\n",
                        "                                        .from(start)\n",
                        "                                        .to(a);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"start <-> d\", 2D))\n",
                        "                                        .from(start)\n",
                        "                                        .to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"a <-> b\", 2D))\n",
                        "                                        .from(a)\n",
                        "                                        .to(b);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"b <-> c\", 3D))\n",
                        "                                        .from(b)\n",
                        "                                        .to(c);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"c <-> goal\", 3D))\n",
                        "                                        .from(c)\n",
                        "                                        .to(goal);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"d <-> e\", 3D))\n",
                        "                                        .from(d)\n",
                        "                                        .to(e);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"e <-> goal\", 2D))\n",
                        "                                        .from(e)\n",
                        "                                        .to(goal);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>"
                        ]
                    ]
                },
                "245-277:connect0": {
                    "start": 245,
                    "end": 277,
                    "body": [
                        "                            public void connect0() {\n",
                        "                                BaseLabeledVertex start = addVertex(new BaseLabeledVertex(\"start\"));\n",
                        "                                BaseLabeledVertex a = addVertex(new BaseLabeledVertex(\"a\"));\n",
                        "                                BaseLabeledVertex b = addVertex(new BaseLabeledVertex(\"b\"));\n",
                        "                                BaseLabeledVertex c = addVertex(new BaseLabeledVertex(\"c\"));\n",
                        "                                BaseLabeledVertex d = addVertex(new BaseLabeledVertex(\"d\"));\n",
                        "                                BaseLabeledVertex e = addVertex(new BaseLabeledVertex(\"e\"));\n",
                        "                                BaseLabeledVertex goal = addVertex(new BaseLabeledVertex(\"goal\"));\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"start <-> a\", 1.5D))\n",
                        "                                        .from(start)\n",
                        "                                        .to(a);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"start <-> d\", 2D))\n",
                        "                                        .from(start)\n",
                        "                                        .to(d);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"a <-> b\", 2D))\n",
                        "                                        .from(a)\n",
                        "                                        .to(b);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"b <-> c\", 3D))\n",
                        "                                        .from(b)\n",
                        "                                        .to(c);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"c <-> goal\", 3D))\n",
                        "                                        .from(c)\n",
                        "                                        .to(goal);\n",
                        "\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"d <-> e\", 3D))\n",
                        "                                        .from(d)\n",
                        "                                        .to(e);\n",
                        "                                addEdge(new BaseLabeledWeightedEdge<Double>(\"e <-> goal\", 2D))\n",
                        "                                        .from(e)\n",
                        "                                        .to(goal);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "connect0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addVertex"
                        ],
                        [
                            "commons-graph.src.test.org.apache.commons.graph.model.BaseLabeledVertex",
                            "BaseLabeledVertex",
                            "35-37:BaseLabeledVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/TailVertexConnector",
                            "to"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/HeadVertexConnector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/AbstractGraphConnection",
                            "addEdge"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseLabeledWeightedEdge",
                            "BaseLabeledWeightedEdge<Double>"
                        ]
                    ]
                },
                "174-177:": {
                    "start": 174,
                    "end": 177,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<\n",
                        "                                BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "240-243:": {
                    "start": 240,
                    "end": 243,
                    "body": [
                        "        UndirectedMutableGraph<BaseLabeledVertex, BaseLabeledWeightedEdge<Double>> actual =\n",
                        "                newUndirectedMutableGraph(\n",
                        "                        new AbstractGraphConnection<\n",
                        "                                BaseLabeledVertex, BaseLabeledWeightedEdge<Double>>() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                }
            },
            "fields": {}
        }
    }
}