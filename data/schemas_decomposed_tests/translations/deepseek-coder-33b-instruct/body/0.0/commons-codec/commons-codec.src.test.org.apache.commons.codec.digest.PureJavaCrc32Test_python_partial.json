{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java",
    "imports": {
        "22-22:import FileNotFoundException": {
            "start": 22,
            "end": 22,
            "body": [
                "import java.io.FileNotFoundException;\n"
            ]
        },
        "23-23:import FileOutputStream": {
            "start": 23,
            "end": 23,
            "body": [
                "import java.io.FileOutputStream;\n"
            ]
        },
        "24-24:import PrintStream": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.io.PrintStream;\n"
            ]
        },
        "25-25:import Constructor": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.lang.reflect.Constructor;\n"
            ]
        },
        "28-28:import List": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "29-29:import Properties": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.util.Properties;\n"
            ]
        },
        "30-30:import Random": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.util.Random;\n"
            ]
        },
        "26-26:import StandardCharsets": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.nio.charset.StandardCharsets;\n"
            ]
        },
        "27-27:import ArrayList": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.util.ArrayList;\n"
            ]
        },
        "31-31:import CRC32": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.util.zip.CRC32;\n"
            ]
        },
        "32-32:import Checksum": {
            "start": 32,
            "end": 32,
            "body": [
                "import java.util.zip.Checksum;\n"
            ]
        },
        "20-20:import Test": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "19-19:import Assert": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.junit.Assert;\n"
            ]
        }
    },
    "classes": {
        "PureJavaCrc32Test": {
            "start": 42,
            "end": 42,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "PerformanceTest",
                "Table"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "446-461:testCorrectness_test7_decomposed": {
                    "start": 446,
                    "end": 461,
                    "body": [
                        "    public void testCorrectness_test7_decomposed() throws Exception {\n",
                        "        checkSame();\n",
                        "        theirs.update(104);\n",
                        "        ours.update1(104);\n",
                        "        checkSame();\n",
                        "        checkOnBytes(new byte[] {40, 60, 97, -70}, false);\n",
                        "        \"hello world!\".getBytes(StandardCharsets.UTF_8);\n",
                        "        checkOnBytes(\"hello world!\".getBytes(StandardCharsets.UTF_8), false);\n",
                        "        final Random random1 = new Random();\n",
                        "        final Random random2 = new Random();\n",
                        "        for (int i = 0; i < 10000; i++) {\n",
                        "            final byte randomBytes[] = new byte[random1.nextInt(2048)];\n",
                        "            random2.nextBytes(randomBytes);\n",
                        "            checkOnBytes(randomBytes, false);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCorrectness_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Random",
                            "Random()"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "89-91:checkSame"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "update(int)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "113-115:update1"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "48-87:checkOnBytes"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.nio.charset.Charset)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Random",
                            "nextInt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Random",
                            "nextBytes(byte[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCorrectness_test7_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "435-443:testCorrectness_test6_decomposed": {
                    "start": 435,
                    "end": 443,
                    "body": [
                        "    public void testCorrectness_test6_decomposed() throws Exception {\n",
                        "        checkSame();\n",
                        "        theirs.update(104);\n",
                        "        ours.update1(104);\n",
                        "        checkSame();\n",
                        "        checkOnBytes(new byte[] {40, 60, 97, -70}, false);\n",
                        "        \"hello world!\".getBytes(StandardCharsets.UTF_8);\n",
                        "        checkOnBytes(\"hello world!\".getBytes(StandardCharsets.UTF_8), false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCorrectness_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "89-91:checkSame"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "update(int)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "113-115:update1"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "48-87:checkOnBytes"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.nio.charset.Charset)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCorrectness_test6_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "425-432:testCorrectness_test5_decomposed": {
                    "start": 425,
                    "end": 432,
                    "body": [
                        "    public void testCorrectness_test5_decomposed() throws Exception {\n",
                        "        checkSame();\n",
                        "        theirs.update(104);\n",
                        "        ours.update1(104);\n",
                        "        checkSame();\n",
                        "        checkOnBytes(new byte[] {40, 60, 97, -70}, false);\n",
                        "        \"hello world!\".getBytes(StandardCharsets.UTF_8);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCorrectness_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "89-91:checkSame"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "update(int)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "113-115:update1"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "48-87:checkOnBytes"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "getBytes(java.nio.charset.Charset)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCorrectness_test5_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "416-422:testCorrectness_test4_decomposed": {
                    "start": 416,
                    "end": 422,
                    "body": [
                        "    public void testCorrectness_test4_decomposed() throws Exception {\n",
                        "        checkSame();\n",
                        "        theirs.update(104);\n",
                        "        ours.update1(104);\n",
                        "        checkSame();\n",
                        "        checkOnBytes(new byte[] {40, 60, 97, -70}, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCorrectness_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "89-91:checkSame"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "update(int)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "113-115:update1"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "48-87:checkOnBytes"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCorrectness_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "408-413:testCorrectness_test3_decomposed": {
                    "start": 408,
                    "end": 413,
                    "body": [
                        "    public void testCorrectness_test3_decomposed() throws Exception {\n",
                        "        checkSame();\n",
                        "        theirs.update(104);\n",
                        "        ours.update1(104);\n",
                        "        checkSame();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCorrectness_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "89-91:checkSame"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "update(int)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "113-115:update1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCorrectness_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "401-405:testCorrectness_test2_decomposed": {
                    "start": 401,
                    "end": 405,
                    "body": [
                        "    public void testCorrectness_test2_decomposed() throws Exception {\n",
                        "        checkSame();\n",
                        "        theirs.update(104);\n",
                        "        ours.update1(104);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCorrectness_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "89-91:checkSame"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "update(int)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "113-115:update1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCorrectness_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "395-398:testCorrectness_test1_decomposed": {
                    "start": 395,
                    "end": 398,
                    "body": [
                        "    public void testCorrectness_test1_decomposed() throws Exception {\n",
                        "        checkSame();\n",
                        "        theirs.update(104);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCorrectness_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "89-91:checkSame"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "update(int)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCorrectness_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "390-392:testCorrectness_test0_decomposed": {
                    "start": 390,
                    "end": 392,
                    "body": [
                        "    public void testCorrectness_test0_decomposed() throws Exception {\n",
                        "        checkSame();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testCorrectness_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "89-91:checkSame"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testCorrectness_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "89-91:checkSame": {
                    "start": 89,
                    "end": 91,
                    "body": [
                        "    private void checkSame() {\n",
                        "        Assert.assertEquals(theirs.getValue(), ours.getValue());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkSame()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "getValue()"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "51-53:getValue"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __checkSame(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "48-87:checkOnBytes": {
                    "start": 48,
                    "end": 87,
                    "body": [
                        "    private void checkOnBytes(final byte[] bytes, final boolean print) {\n",
                        "        theirs.reset();\n",
                        "        ours.reset();\n",
                        "        checkSame();\n",
                        "\n",
                        "        for (final byte b : bytes) {\n",
                        "            ours.update1(b);\n",
                        "            theirs.update(b);\n",
                        "            checkSame();\n",
                        "        }\n",
                        "\n",
                        "        if (print) {\n",
                        "            System.out.println(\n",
                        "                    \"theirs:\\t\"\n",
                        "                            + Long.toHexString(theirs.getValue())\n",
                        "                            + \"\\nours:\\t\"\n",
                        "                            + Long.toHexString(ours.getValue()));\n",
                        "        }\n",
                        "\n",
                        "        theirs.reset();\n",
                        "        ours.reset();\n",
                        "\n",
                        "        ours.update0(bytes, 0, bytes.length);\n",
                        "        theirs.update(bytes, 0, bytes.length);\n",
                        "        if (print) {\n",
                        "            System.out.println(\n",
                        "                    \"theirs:\\t\"\n",
                        "                            + Long.toHexString(theirs.getValue())\n",
                        "                            + \"\\nours:\\t\"\n",
                        "                            + Long.toHexString(ours.getValue()));\n",
                        "        }\n",
                        "\n",
                        "        checkSame();\n",
                        "\n",
                        "        if (bytes.length >= 10) {\n",
                        "            ours.update0(bytes, 5, 5);\n",
                        "            theirs.update(bytes, 5, 5);\n",
                        "            checkSame();\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "checkOnBytes(byte[], boolean)",
                    "parameters": [
                        "bytes",
                        "print"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "reset()"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "56-58:reset"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PureJavaCrc32Test",
                            "89-91:checkSame"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "113-115:update1"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "update(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "toHexString(long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "getValue()"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "51-53:getValue"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.digest.PureJavaCrc32",
                            "PureJavaCrc32",
                            "67-108:update0"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/CRC32",
                            "update(byte[],int,int)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __checkOnBytes(self, bytes_: typing.List[int], print_: bool) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "44-44:ours": {
                    "start": 44,
                    "end": 44,
                    "body": [
                        "    private final PureJavaCrc32 ours = new PureJavaCrc32();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "PureJavaCrc32",
                            "PureJavaCrc32"
                        ]
                    ],
                    "partial_translation": [
                        "    __ours: PureJavaCrc32 = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "43-43:theirs": {
                    "start": 43,
                    "end": 43,
                    "body": [
                        "    private final CRC32 theirs = new CRC32();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "CRC32",
                            "java.util.zip.CRC32"
                        ]
                    ],
                    "partial_translation": [
                        "    __theirs: typing.Any = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class PureJavaCrc32Test(unittest.TestCase):\n\n"
        },
        "Table": {
            "start": 97,
            "end": 97,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PureJavaCrc32Test",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "149-170:toString": {
                    "start": 149,
                    "end": 170,
                    "body": [
                        "        public String toString() {\n",
                        "            final StringBuilder b = new StringBuilder();\n",
                        "\n",
                        "            final String tableFormat =\n",
                        "                    String.format(\"T%d_\", Integer.numberOfTrailingZeros(tables[0].length)) + \"%d\";\n",
                        "            final String startFormat =\n",
                        "                    \"  private static final int \" + tableFormat + \"_start = %d*256;\";\n",
                        "\n",
                        "            for (int j = 0; j < tables.length; j++) {\n",
                        "                b.append(String.format(startFormat, j, j));\n",
                        "                b.append(\"\\n\");\n",
                        "            }\n",
                        "\n",
                        "            b.append(\"  private static final int[] T = new int[] {\");\n",
                        "            for (final String s : toStrings(tableFormat)) {\n",
                        "                b.append(\"\\n\");\n",
                        "                b.append(s);\n",
                        "            }\n",
                        "            b.setCharAt(b.length() - 2, '\\n');\n",
                        "            b.append(\" };\\n\");\n",
                        "            return b.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "format(java.lang.String,java.lang.Object[])"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "numberOfTrailingZeros(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "Table",
                            "131-146:toStrings"
                        ],
                        [
                            "library",
                            "java.base/java/lang/AbstractStringBuilder",
                            "setCharAt(int,char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/AbstractStringBuilder",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def toString(self) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "173-189:main": {
                    "start": 173,
                    "end": 189,
                    "body": [
                        "        public static void main(final String[] args) throws FileNotFoundException {\n",
                        "            if (args.length != 1) {\n",
                        "                System.err.println(\"Usage: \" + Table.class.getName() + \" <polynomial>\");\n",
                        "                System.exit(1);\n",
                        "            }\n",
                        "            final long polynomial = Long.parseLong(args[0], 16);\n",
                        "\n",
                        "            final int i = 8;\n",
                        "            final Table t = new Table(i, 16, polynomial);\n",
                        "            final String s = t.toString();\n",
                        "            System.out.println(s);\n",
                        "\n",
                        "            try (final PrintStream out =\n",
                        "                    new PrintStream(new FileOutputStream(\"table\" + i + \".txt\"), true)) {\n",
                        "                out.println(s);\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "main(String[])",
                    "parameters": [
                        "args"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "parseLong(java.lang.String,int)"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "Table",
                            "100-129:Table"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "Table",
                            "149-170:toString"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getName()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/System",
                            "exit(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "PrintStream(java.io.OutputStream,boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/io/FileOutputStream",
                            "FileOutputStream(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def main(args: typing.List[typing.List[str]]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "100-129:Table": {
                    "start": 100,
                    "end": 129,
                    "body": [
                        "        private Table(final int nBits, final int nTables, final long polynomial) {\n",
                        "            tables = new int[nTables][];\n",
                        "            final int size = 1 << nBits;\n",
                        "            for (int i = 0; i < tables.length; i++) {\n",
                        "                tables[i] = new int[size];\n",
                        "            }\n",
                        "\n",
                        "            final int[] first = tables[0];\n",
                        "            for (int i = 0; i < first.length; i++) {\n",
                        "                int crc = i;\n",
                        "                for (int j = 0; j < nBits; j++) {\n",
                        "                    if ((crc & 1) == 1) {\n",
                        "                        crc >>>= 1;\n",
                        "                        crc ^= polynomial;\n",
                        "                    } else {\n",
                        "                        crc >>>= 1;\n",
                        "                    }\n",
                        "                }\n",
                        "                first[i] = crc;\n",
                        "            }\n",
                        "\n",
                        "            final int mask = first.length - 1;\n",
                        "            for (int j = 1; j < tables.length; j++) {\n",
                        "                final int[] previous = tables[j - 1];\n",
                        "                final int[] current = tables[j];\n",
                        "                for (int i = 0; i < current.length; i++) {\n",
                        "                    current[i] = (previous[i] >>> nBits) ^ first[previous[i] & mask];\n",
                        "                }\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "Table(int, int, long)",
                    "parameters": [
                        "nBits",
                        "nTables",
                        "polynomial"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, nBits: int, nTables: int, polynomial: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "131-146:toStrings": {
                    "start": 131,
                    "end": 146,
                    "body": [
                        "        String[] toStrings(final String nameformat) {\n",
                        "            final String[] s = new String[tables.length];\n",
                        "            for (int j = 0; j < tables.length; j++) {\n",
                        "                final int[] t = tables[j];\n",
                        "                final StringBuilder b = new StringBuilder();\n",
                        "                b.append(String.format(\"    /* \" + nameformat + \" */\", j));\n",
                        "                for (int i = 0; i < t.length; ) {\n",
                        "                    b.append(\"\\n    \");\n",
                        "                    for (int k = 0; k < 4; k++) {\n",
                        "                        b.append(String.format(\"0x%08X, \", t[i++]));\n",
                        "                    }\n",
                        "                }\n",
                        "                s[j] = b.toString();\n",
                        "            }\n",
                        "            return s;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "String[]",
                            "java.lang.String[]"
                        ]
                    ],
                    "signature": "toStrings(String)",
                    "parameters": [
                        "nameformat"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "format(java.lang.String,java.lang.Object[])"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def toStrings(self, nameformat: str) -> typing.List[typing.List[str]]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "98-98:tables": {
                    "start": 98,
                    "end": 98,
                    "body": [
                        "        private final int[][] tables;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "int[][]",
                            "int[][]"
                        ]
                    ],
                    "partial_translation": [
                        "    __tables: typing.List[typing.List[int]] = None",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class Table:\n\n"
        },
        "new Thread(...) { ... }": {
            "start": 317,
            "end": 317,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PerformanceTest",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "321-332:run": {
                    "start": 321,
                    "end": 332,
                    "body": [
                        "                                public void run() {\n",
                        "                                    final long st = System.nanoTime();\n",
                        "                                    crc.reset();\n",
                        "                                    for (int trialIndex = 0; trialIndex < trials; trialIndex++) {\n",
                        "                                        crc.update(bytes, 0, size);\n",
                        "                                    }\n",
                        "                                    final long et = System.nanoTime();\n",
                        "                                    final double secondsElapsed = (et - st) / 1000000000.0d;\n",
                        "                                    results[index] =\n",
                        "                                            new BenchResult(\n",
                        "                                                    crc.getValue(), mbProcessed / secondsElapsed);\n",
                        "                                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "run()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/System",
                            "nanoTime"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/Checksum",
                            "reset"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/Checksum",
                            "update"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "BenchResult",
                            "362-365:BenchResult"
                        ],
                        [
                            "library",
                            "java.base/java/util/zip/Checksum",
                            "getValue"
                        ]
                    ],
                    "is_overload": false
                },
                "316-317:": {
                    "start": 316,
                    "end": 317,
                    "body": [
                        "                    threads[i] =\n",
                        "                            new Thread() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false
                }
            },
            "fields": {
                "318-318:crc": {
                    "start": 318,
                    "end": 318,
                    "body": [
                        "                                final Checksum crc = ctor.newInstance();\n"
                    ],
                    "modifiers": [
                        "final"
                    ],
                    "types": [
                        [
                            "Checksum",
                            "java.util.zip.Checksum"
                        ]
                    ]
                }
            }
        },
        "PerformanceTest": {
            "start": 201,
            "end": 201,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PureJavaCrc32Test",
            "nests": [
                "BenchResult",
                "new Thread(...) { ... }"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "213-216:main": {
                    "start": 213,
                    "end": 216,
                    "body": [
                        "        public static void main(final String args[]) throws Exception {\n",
                        "            printSystemProperties(System.out);\n",
                        "            doBench0(CRCS, System.out);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "main(String[])",
                    "parameters": [
                        "args"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PerformanceTest",
                            "368-386:printSystemProperties"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PerformanceTest",
                            "223-239:doBench0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def main(args: typing.List[typing.List[str]]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "368-386:printSystemProperties": {
                    "start": 368,
                    "end": 386,
                    "body": [
                        "        private static void printSystemProperties(final PrintStream out) {\n",
                        "            final String[] names = {\n",
                        "                \"java.version\",\n",
                        "                \"java.runtime.name\",\n",
                        "                \"java.runtime.version\",\n",
                        "                \"java.vm.version\",\n",
                        "                \"java.vm.vendor\",\n",
                        "                \"java.vm.name\",\n",
                        "                \"java.vm.specification.version\",\n",
                        "                \"java.specification.version\",\n",
                        "                \"os.arch\",\n",
                        "                \"os.name\",\n",
                        "                \"os.version\"\n",
                        "            };\n",
                        "            final Properties p = System.getProperties();\n",
                        "            for (final String n : names) {\n",
                        "                out.println(n + \" = \" + p.getProperty(n));\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printSystemProperties(PrintStream)",
                    "parameters": [
                        "out"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/System",
                            "getProperties()"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Properties",
                            "getProperty(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __printSystemProperties(out: typing.IO) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "299-353:doBench2": {
                    "start": 299,
                    "end": 353,
                    "body": [
                        "        private static BenchResult doBench2(\n",
                        "                final Class<? extends Checksum> clazz,\n",
                        "                final int numThreads,\n",
                        "                final byte[] bytes,\n",
                        "                final int size)\n",
                        "                throws Exception {\n",
                        "\n",
                        "            final Thread[] threads = new Thread[numThreads];\n",
                        "            final BenchResult[] results = new BenchResult[threads.length];\n",
                        "\n",
                        "            {\n",
                        "                final int trials = BYTES_PER_SIZE / size;\n",
                        "                final double mbProcessed = trials * size / 1024.0 / 1024.0;\n",
                        "                final Constructor<? extends Checksum> ctor = clazz.getConstructor();\n",
                        "\n",
                        "                for (int i = 0; i < threads.length; i++) {\n",
                        "                    final int index = i;\n",
                        "                    threads[i] =\n",
                        "                            new Thread() {\n",
                        "                                final Checksum crc = ctor.newInstance();\n",
                        "\n",
                        "                                @Override\n",
                        "                                public void run() {\n",
                        "                                    final long st = System.nanoTime();\n",
                        "                                    crc.reset();\n",
                        "                                    for (int trialIndex = 0; trialIndex < trials; trialIndex++) {\n",
                        "                                        crc.update(bytes, 0, size);\n",
                        "                                    }\n",
                        "                                    final long et = System.nanoTime();\n",
                        "                                    final double secondsElapsed = (et - st) / 1000000000.0d;\n",
                        "                                    results[index] =\n",
                        "                                            new BenchResult(\n",
                        "                                                    crc.getValue(), mbProcessed / secondsElapsed);\n",
                        "                                }\n",
                        "                            };\n",
                        "                }\n",
                        "            }\n",
                        "\n",
                        "            for (final Thread thread : threads) {\n",
                        "                thread.start();\n",
                        "            }\n",
                        "            for (final Thread thread : threads) {\n",
                        "                thread.join();\n",
                        "            }\n",
                        "\n",
                        "            final long expected = results[0].value;\n",
                        "            double sum = results[0].mbps;\n",
                        "            for (int i = 1; i < results.length; i++) {\n",
                        "                if (results[i].value != expected) {\n",
                        "                    throw new AssertionError(clazz.getSimpleName() + \" results not matched.\");\n",
                        "                }\n",
                        "                sum += results[i].mbps;\n",
                        "            }\n",
                        "            return new BenchResult(expected, sum / results.length);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "BenchResult",
                            "BenchResult"
                        ]
                    ],
                    "signature": "doBench2(Class<? extends Checksum>, int, byte[], int)",
                    "parameters": [
                        "clazz",
                        "numThreads",
                        "bytes",
                        "size"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getConstructor(java.lang.Class[])"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Thread",
                            "start()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Thread",
                            "join()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/AssertionError",
                            "AssertionError(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getSimpleName()"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "BenchResult",
                            "362-365:BenchResult"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __doBench2(clazz: typing.Type[typing.Any], numThreads: int, bytes_: typing.List[int], size: int) -> BenchResult:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "241-297:doBench1": {
                    "start": 241,
                    "end": 297,
                    "body": [
                        "        private static void doBench1(\n",
                        "                final List<Class<? extends Checksum>> crcs,\n",
                        "                final byte[] bytes,\n",
                        "                final int size,\n",
                        "                final PrintStream out)\n",
                        "                throws Exception {\n",
                        "            final String numBytesStr = \" #Bytes \";\n",
                        "            final String numThreadsStr = \"#T\";\n",
                        "            final String diffStr = \"% diff\";\n",
                        "\n",
                        "            out.print('|');\n",
                        "            printCell(numBytesStr, 0, out);\n",
                        "            printCell(numThreadsStr, 0, out);\n",
                        "            for (int i = 0; i < crcs.size(); i++) {\n",
                        "                final Class<? extends Checksum> c = crcs.get(i);\n",
                        "                out.print('|');\n",
                        "                printCell(c.getSimpleName(), 8, out);\n",
                        "                for (int j = 0; j < i; j++) {\n",
                        "                    printCell(diffStr, diffStr.length(), out);\n",
                        "                }\n",
                        "            }\n",
                        "            out.printf(\"\\n\");\n",
                        "\n",
                        "            for (int numThreads = 1; numThreads <= 16; numThreads <<= 1) {\n",
                        "                out.printf(\"|\");\n",
                        "                printCell(String.valueOf(size), numBytesStr.length(), out);\n",
                        "                printCell(String.valueOf(numThreads), numThreadsStr.length(), out);\n",
                        "\n",
                        "                BenchResult expected = null;\n",
                        "                final List<BenchResult> previous = new ArrayList<>();\n",
                        "                for (final Class<? extends Checksum> c : crcs) {\n",
                        "                    System.gc();\n",
                        "\n",
                        "                    final BenchResult result = doBench2(c, numThreads, bytes, size);\n",
                        "                    printCell(\n",
                        "                            String.format(\"%9.1f\", result.mbps),\n",
                        "                            c.getSimpleName().length() + 1,\n",
                        "                            out);\n",
                        "\n",
                        "                    if (c == zip) {\n",
                        "                        expected = result;\n",
                        "                    } else if (expected == null) {\n",
                        "                        throw new RuntimeException(\n",
                        "                                \"The first class is \" + c.getName() + \" but not \" + zip.getName());\n",
                        "                    } else if (result.value != expected.value) {\n",
                        "                        throw new RuntimeException(c + \" has bugs!\");\n",
                        "                    }\n",
                        "\n",
                        "                    for (final BenchResult p : previous) {\n",
                        "                        final double diff = (result.mbps - p.mbps) / p.mbps * 100;\n",
                        "                        printCell(String.format(\"%5.1f%%\", diff), diffStr.length(), out);\n",
                        "                    }\n",
                        "                    previous.add(result);\n",
                        "                }\n",
                        "                out.printf(\"\\n\");\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "doBench1(List<Class<? extends Checksum>>, byte[], int, PrintStream)",
                    "parameters": [
                        "crcs",
                        "bytes",
                        "size",
                        "out"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "print(char)"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PerformanceTest",
                            "218-221:printCell"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "size()"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "get(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getSimpleName()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "printf(java.lang.String,java.lang.Object[])"
                        ],
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<BenchResult>()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "valueOf(int)"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PerformanceTest",
                            "299-353:doBench2"
                        ],
                        [
                            "library",
                            "java.base/java/lang/System",
                            "gc()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "format(java.lang.String,java.lang.Object[])"
                        ],
                        [
                            "library",
                            "java.base/java/lang/RuntimeException",
                            "RuntimeException(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getName()"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest.BenchResult)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __doBench1(crcs: typing.List[typing.Type[typing.Any]], bytes_: typing.List[int], size: int, out: typing.IO) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "223-239:doBench0": {
                    "start": 223,
                    "end": 239,
                    "body": [
                        "        private static void doBench0(\n",
                        "                final List<Class<? extends Checksum>> crcs, final PrintStream out)\n",
                        "                throws Exception {\n",
                        "            final byte[] bytes = new byte[MAX_LEN];\n",
                        "            new Random().nextBytes(bytes);\n",
                        "\n",
                        "            out.printf(\"\\nPerformance Table (The unit is MB/sec; #T = #Theads)\\n\");\n",
                        "\n",
                        "            for (final Class<? extends Checksum> c : crcs) {\n",
                        "                doBench2(c, 1, bytes, 2);\n",
                        "                doBench2(c, 1, bytes, 2101);\n",
                        "            }\n",
                        "\n",
                        "            for (int size = 32; size <= MAX_LEN; size <<= 1) {\n",
                        "                doBench1(crcs, bytes, size, out);\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "doBench0(List<Class<? extends Checksum>>, PrintStream)",
                    "parameters": [
                        "crcs",
                        "out"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Random",
                            "nextBytes(byte[])"
                        ],
                        [
                            "library",
                            "java.base/java/util/Random",
                            "Random()"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "printf(java.lang.String,java.lang.Object[])"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PerformanceTest",
                            "299-353:doBench2"
                        ],
                        [
                            "commons-codec.src.test.org.apache.commons.codec.digest.PureJavaCrc32Test",
                            "PerformanceTest",
                            "241-297:doBench1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __doBench0(crcs: typing.List[typing.Type[typing.Any]], out: typing.IO) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "218-221:printCell": {
                    "start": 218,
                    "end": 221,
                    "body": [
                        "        private static void printCell(final String s, final int width, final PrintStream out) {\n",
                        "            final int w = s.length() > width ? s.length() : width;\n",
                        "            out.printf(\" %\" + w + \"s |\", s);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printCell(String, int, PrintStream)",
                    "parameters": [
                        "s",
                        "width",
                        "out"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "printf(java.lang.String,java.lang.Object[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def __printCell(s: str, width: int, out: typing.IO) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "206-206:CRCS": {
                    "start": 206,
                    "end": 206,
                    "body": [
                        "        static final List<Class<? extends Checksum>> CRCS = new ArrayList<>();\n"
                    ],
                    "modifiers": [
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "List<Class<? extends Checksum>>",
                            "java.util.List<Class<? extends Checksum>>"
                        ]
                    ],
                    "partial_translation": [
                        "    CRCS: typing.List[typing.Type[typing.Any]] = []",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "205-205:zip": {
                    "start": 205,
                    "end": 205,
                    "body": [
                        "        static final Class<? extends Checksum> zip = CRC32.class;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "Class<? extends Checksum>",
                            "java.lang.Class<? extends Checksum>"
                        ]
                    ],
                    "partial_translation": [
                        "    zip: typing.Type[typing.Any] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "203-203:BYTES_PER_SIZE": {
                    "start": 203,
                    "end": 203,
                    "body": [
                        "        public static final int BYTES_PER_SIZE = MAX_LEN * 4;\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "partial_translation": [
                        "    BYTES_PER_SIZE: int = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "202-202:MAX_LEN": {
                    "start": 202,
                    "end": 202,
                    "body": [
                        "        public static final int MAX_LEN = 32 * 1024 * 1024; // up to 32MB chunks\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "partial_translation": [
                        "    MAX_LEN: int = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "static_initializers": {
                "208-211:run_static_init": {
                    "start": 208,
                    "end": 211,
                    "body": [
                        "        static {\n",
                        "            CRCS.add(zip);\n",
                        "            CRCS.add(PureJavaCrc32.class);\n",
                        "        }\n"
                    ],
                    "partial_translation": [],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class PerformanceTest:\n\n"
        },
        "BenchResult": {
            "start": 355,
            "end": 355,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "PerformanceTest",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "362-365:BenchResult": {
                    "start": 362,
                    "end": 365,
                    "body": [
                        "            BenchResult(final long value, final double mbps) {\n",
                        "                this.value = value;\n",
                        "                this.mbps = mbps;\n",
                        "            }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "BenchResult(long, double)",
                    "parameters": [
                        "value",
                        "mbps"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, value: int, mbps: float) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "360-360:mbps": {
                    "start": 360,
                    "end": 360,
                    "body": [
                        "            final double mbps;\n"
                    ],
                    "modifiers": [
                        "final"
                    ],
                    "types": [
                        [
                            "double",
                            "double"
                        ]
                    ],
                    "partial_translation": [
                        "    mbps: float = 0.0",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "357-357:value": {
                    "start": 357,
                    "end": 357,
                    "body": [
                        "            final long value;\n"
                    ],
                    "modifiers": [
                        "final"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "partial_translation": [
                        "    value: int = 0",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class BenchResult:\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import typing\nfrom typing import *",
        "import os",
        "import unittest",
        "from src.main.org.apache.commons.codec.digest.PureJavaCrc32 import *"
    ]
}