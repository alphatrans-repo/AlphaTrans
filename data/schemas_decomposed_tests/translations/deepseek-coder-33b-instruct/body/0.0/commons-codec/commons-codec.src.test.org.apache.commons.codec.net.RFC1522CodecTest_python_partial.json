{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
    "imports": {
        "24-24:import DecoderException": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.codec.DecoderException;\n"
            ]
        },
        "25-25:import Test": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "23-23:import CharEncoding": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.apache.commons.codec.CharEncoding;\n"
            ]
        },
        "21-21:import static Assert.fail": {
            "start": 21,
            "end": 21,
            "body": [
                "import static org.junit.Assert.fail;\n"
            ]
        },
        "20-20:import static Assert.assertNull": {
            "start": 20,
            "end": 20,
            "body": [
                "import static org.junit.Assert.assertNull;\n"
            ]
        }
    },
    "classes": {
        "RFC1522TestCodec": {
            "start": 30,
            "end": 30,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "RFC1522CodecTest",
            "nests": [],
            "implements": [],
            "extends": [
                "RFC1522Codec"
            ],
            "methods": {
                "43-45:getEncoding": {
                    "start": 43,
                    "end": 45,
                    "body": [
                        "        protected String getEncoding() {\n",
                        "            return \"T\";\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getEncoding()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _getEncoding(self) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "38-40:doEncoding": {
                    "start": 38,
                    "end": 40,
                    "body": [
                        "        protected byte[] doEncoding(final byte[] bytes) {\n",
                        "            return bytes;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "byte[]",
                            "byte[]"
                        ]
                    ],
                    "signature": "doEncoding(byte[])",
                    "parameters": [
                        "bytes"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _doEncoding(self, bytes_: typing.List[int]) -> typing.List[int]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "33-35:doDecoding": {
                    "start": 33,
                    "end": 35,
                    "body": [
                        "        protected byte[] doDecoding(final byte[] bytes) {\n",
                        "            return bytes;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "byte[]",
                            "byte[]"
                        ]
                    ],
                    "signature": "doDecoding(byte[])",
                    "parameters": [
                        "bytes"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _doDecoding(self, bytes_: typing.List[int]) -> typing.List[int]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class RFC1522TestCodec(RFC1522Codec):\n\n"
        },
        "RFC1522CodecTest": {
            "start": 28,
            "end": 28,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "RFC1522TestCodec"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "78-91:testDecodeInvalid_test0_decomposed": {
                    "start": 78,
                    "end": 91,
                    "body": [
                        "    public void testDecodeInvalid_test0_decomposed() throws Exception {\n",
                        "        assertExpectedDecoderException(\"whatever\");\n",
                        "        assertExpectedDecoderException(\"=?\");\n",
                        "        assertExpectedDecoderException(\"?=\");\n",
                        "        assertExpectedDecoderException(\"==\");\n",
                        "        assertExpectedDecoderException(\"=??=\");\n",
                        "        assertExpectedDecoderException(\"=?stuff?=\");\n",
                        "        assertExpectedDecoderException(\"=?UTF-8??=\");\n",
                        "        assertExpectedDecoderException(\"=?UTF-8?stuff?=\");\n",
                        "        assertExpectedDecoderException(\"=?UTF-8?T?stuff\");\n",
                        "        assertExpectedDecoderException(\"=??T?stuff?=\");\n",
                        "        assertExpectedDecoderException(\"=?UTF-8??stuff?=\");\n",
                        "        assertExpectedDecoderException(\"=?UTF-8?W?stuff?=\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDecodeInvalid_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.RFC1522CodecTest",
                            "RFC1522CodecTest",
                            "50-57:assertExpectedDecoderException"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testDecodeInvalid_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "71-75:testNullInput_test2_decomposed": {
                    "start": 71,
                    "end": 75,
                    "body": [
                        "    public void testNullInput_test2_decomposed() throws Exception {\n",
                        "        final RFC1522TestCodec testcodec = new RFC1522TestCodec();\n",
                        "        assertNull(testcodec.decodeText(null));\n",
                        "        assertNull(testcodec.encodeText1(null, CharEncoding.UTF_8));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullInput_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.RFC1522CodecTest",
                            "RFC1522TestCodec",
                            "RFC1522TestCodec"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.RFC1522Codec",
                            "RFC1522Codec",
                            "120-153:decodeText"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.RFC1522Codec",
                            "RFC1522Codec",
                            "99-105:encodeText1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullInput_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "65-68:testNullInput_test1_decomposed": {
                    "start": 65,
                    "end": 68,
                    "body": [
                        "    public void testNullInput_test1_decomposed() throws Exception {\n",
                        "        final RFC1522TestCodec testcodec = new RFC1522TestCodec();\n",
                        "        assertNull(testcodec.decodeText(null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullInput_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.RFC1522CodecTest",
                            "RFC1522TestCodec",
                            "RFC1522TestCodec"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.RFC1522Codec",
                            "RFC1522Codec",
                            "120-153:decodeText"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullInput_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "60-62:testNullInput_test0_decomposed": {
                    "start": 60,
                    "end": 62,
                    "body": [
                        "    public void testNullInput_test0_decomposed() throws Exception {\n",
                        "        final RFC1522TestCodec testcodec = new RFC1522TestCodec();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullInput_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.RFC1522CodecTest",
                            "RFC1522TestCodec",
                            "RFC1522TestCodec"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testNullInput_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "50-57:assertExpectedDecoderException": {
                    "start": 50,
                    "end": 57,
                    "body": [
                        "    private void assertExpectedDecoderException(final String s) throws Exception {\n",
                        "        final RFC1522TestCodec testcodec = new RFC1522TestCodec();\n",
                        "        try {\n",
                        "            testcodec.decodeText(s);\n",
                        "            fail(\"DecoderException should have been thrown\");\n",
                        "        } catch (final DecoderException e) {\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "assertExpectedDecoderException(String)",
                    "parameters": [
                        "s"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.RFC1522CodecTest",
                            "RFC1522TestCodec",
                            "RFC1522TestCodec"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.RFC1522Codec",
                            "RFC1522Codec",
                            "120-153:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __assertExpectedDecoderException(self, s: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class RFC1522CodecTest(unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import typing\nfrom typing import *",
        "import os",
        "import unittest",
        "from src.main.org.apache.commons.codec.CharEncoding import *",
        "from src.main.org.apache.commons.codec.DecoderException import *",
        "from src.main.org.apache.commons.codec.net.RFC1522Codec import *"
    ]
}