{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/collections/FibonacciHeapNode.java",
    "imports": {},
    "classes": {
        "FibonacciHeapNode": {
            "start": 27,
            "end": 27,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "201-203:toString": {
                    "start": 201,
                    "end": 203,
                    "body": [
                        "    public String toString() {\n",
                        "        return element.toString();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "toString()"
                        ]
                    ]
                },
                "195-197:setRight": {
                    "start": 195,
                    "end": 197,
                    "body": [
                        "    public void setRight(FibonacciHeapNode<E> right) {\n",
                        "        this.right = right;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setRight(FibonacciHeapNode)",
                    "parameters": [
                        "right"
                    ],
                    "calls": []
                },
                "186-188:setParent": {
                    "start": 186,
                    "end": 188,
                    "body": [
                        "    public void setParent(FibonacciHeapNode<E> parent) {\n",
                        "        this.parent = parent;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setParent(FibonacciHeapNode)",
                    "parameters": [
                        "parent"
                    ],
                    "calls": []
                },
                "177-179:setMarked": {
                    "start": 177,
                    "end": 179,
                    "body": [
                        "    public void setMarked(boolean marked) {\n",
                        "        this.marked = marked;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setMarked(boolean)",
                    "parameters": [
                        "marked"
                    ],
                    "calls": []
                },
                "168-170:setLeft": {
                    "start": 168,
                    "end": 170,
                    "body": [
                        "    public void setLeft(FibonacciHeapNode<E> left) {\n",
                        "        this.left = left;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setLeft(FibonacciHeapNode)",
                    "parameters": [
                        "left"
                    ],
                    "calls": []
                },
                "159-161:setChild": {
                    "start": 159,
                    "end": 161,
                    "body": [
                        "    public void setChild(FibonacciHeapNode<E> child) {\n",
                        "        this.child = child;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setChild(FibonacciHeapNode)",
                    "parameters": [
                        "child"
                    ],
                    "calls": []
                },
                "150-152:isMarked": {
                    "start": 150,
                    "end": 152,
                    "body": [
                        "    public boolean isMarked() {\n",
                        "        return marked;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isMarked()",
                    "parameters": [],
                    "calls": []
                },
                "141-143:incraeseDegree": {
                    "start": 141,
                    "end": 143,
                    "body": [
                        "    public void incraeseDegree() {\n",
                        "        degree++;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "incraeseDegree()",
                    "parameters": [],
                    "calls": []
                },
                "132-134:getRight": {
                    "start": 132,
                    "end": 134,
                    "body": [
                        "    public FibonacciHeapNode<E> getRight() {\n",
                        "        return right;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "FibonacciHeapNode",
                            "FibonacciHeapNode"
                        ]
                    ],
                    "signature": "getRight()",
                    "parameters": [],
                    "calls": []
                },
                "123-125:getParent": {
                    "start": 123,
                    "end": 125,
                    "body": [
                        "    public FibonacciHeapNode<E> getParent() {\n",
                        "        return parent;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "FibonacciHeapNode",
                            "FibonacciHeapNode"
                        ]
                    ],
                    "signature": "getParent()",
                    "parameters": [],
                    "calls": []
                },
                "114-116:getLeft": {
                    "start": 114,
                    "end": 116,
                    "body": [
                        "    public FibonacciHeapNode<E> getLeft() {\n",
                        "        return left;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "FibonacciHeapNode",
                            "FibonacciHeapNode"
                        ]
                    ],
                    "signature": "getLeft()",
                    "parameters": [],
                    "calls": []
                },
                "105-107:getElement": {
                    "start": 105,
                    "end": 107,
                    "body": [
                        "    public E getElement() {\n",
                        "        return element;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "E",
                            "E"
                        ]
                    ],
                    "signature": "getElement()",
                    "parameters": [],
                    "calls": []
                },
                "96-98:getDegree": {
                    "start": 96,
                    "end": 98,
                    "body": [
                        "    public int getDegree() {\n",
                        "        return degree;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getDegree()",
                    "parameters": [],
                    "calls": []
                },
                "85-87:getChild": {
                    "start": 85,
                    "end": 87,
                    "body": [
                        "    public FibonacciHeapNode<E> getChild() {\n",
                        "        return child;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "FibonacciHeapNode",
                            "FibonacciHeapNode"
                        ]
                    ],
                    "signature": "getChild()",
                    "parameters": [],
                    "calls": []
                },
                "76-78:decraeseDegree": {
                    "start": 76,
                    "end": 78,
                    "body": [
                        "    public void decraeseDegree() {\n",
                        "        degree--;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "decraeseDegree()",
                    "parameters": [],
                    "calls": []
                },
                "60-69:FibonacciHeapNode": {
                    "start": 60,
                    "end": 69,
                    "body": [
                        "    public FibonacciHeapNode(E element) {\n",
                        "        degree = 0;\n",
                        "        setParent(null);\n",
                        "        setChild(null);\n",
                        "        setLeft(this);\n",
                        "        setRight(this);\n",
                        "        setMarked(false);\n",
                        "\n",
                        "        this.element = element;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "FibonacciHeapNode(E)",
                    "parameters": [
                        "element"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.FibonacciHeapNode",
                            "FibonacciHeapNode",
                            "186-188:setParent"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.FibonacciHeapNode",
                            "FibonacciHeapNode",
                            "159-161:setChild"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.FibonacciHeapNode",
                            "FibonacciHeapNode",
                            "168-170:setLeft"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.FibonacciHeapNode",
                            "FibonacciHeapNode",
                            "195-197:setRight"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.FibonacciHeapNode",
                            "FibonacciHeapNode",
                            "177-179:setMarked"
                        ]
                    ]
                }
            },
            "fields": {
                "53-53:marked": {
                    "start": 53,
                    "end": 53,
                    "body": [
                        "    private boolean marked;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ]
                },
                "47-47:degree": {
                    "start": 47,
                    "end": 47,
                    "body": [
                        "    private int degree;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "42-42:child": {
                    "start": 42,
                    "end": 42,
                    "body": [
                        "    private FibonacciHeapNode<E> child;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "FibonacciHeapNode",
                            "FibonacciHeapNode"
                        ]
                    ]
                },
                "39-39:right": {
                    "start": 39,
                    "end": 39,
                    "body": [
                        "    private FibonacciHeapNode<E> right = this;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "FibonacciHeapNode",
                            "FibonacciHeapNode"
                        ]
                    ]
                },
                "36-36:left": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    private FibonacciHeapNode<E> left = this;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "FibonacciHeapNode",
                            "FibonacciHeapNode"
                        ]
                    ]
                },
                "33-33:parent": {
                    "start": 33,
                    "end": 33,
                    "body": [
                        "    private FibonacciHeapNode<E> parent;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "FibonacciHeapNode",
                            "FibonacciHeapNode"
                        ]
                    ]
                },
                "30-30:element": {
                    "start": 30,
                    "end": 30,
                    "body": [
                        "    private final E element;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "E",
                            "E"
                        ]
                    ]
                }
            }
        }
    }
}