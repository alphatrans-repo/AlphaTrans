{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/JavaFastPFOR/src/main/java/me/lemire/integercompression/differential/Delta.java",
    "imports": {},
    "classes": {
        "Delta": {
            "start": 16,
            "end": 16,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "129-148:fastinverseDelta1": {
                    "start": 129,
                    "end": 148,
                    "body": [
                        "        public static int fastinverseDelta1(int[] data, int start, int length,\n",
                        "                                            int init) {\n",
                        "                data[start] += init;\n",
                        "                int sz0 = length / 4 * 4;\n",
                        "                int i = 1;\n",
                        "                if (sz0 >= 4) {\n",
                        "                        int a = data[start];\n",
                        "                        for (; i < sz0 - 4; i += 4) {\n",
                        "                                a = data[start + i] += a;\n",
                        "                                a = data[start + i + 1] += a;\n",
                        "                                a = data[start + i + 2] += a;\n",
                        "                                a = data[start + i + 3] += a;\n",
                        "                        }\n",
                        "                }\n",
                        "\n",
                        "                for (; i != length; ++i) {\n",
                        "                        data[start + i] += data[start + i - 1];\n",
                        "                }\n",
                        "                return data[start + length - 1];\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "fastinverseDelta1(int[], int, int, int)",
                    "parameters": [
                        "data",
                        "start",
                        "length",
                        "init"
                    ],
                    "calls": []
                },
                "97-113:fastinverseDelta0": {
                    "start": 97,
                    "end": 113,
                    "body": [
                        "        public static void fastinverseDelta0(int[] data) {\n",
                        "                int sz0 = data.length / 4 * 4;\n",
                        "                int i = 1;\n",
                        "                if (sz0 >= 4) {\n",
                        "                        int a = data[0];\n",
                        "                        for (; i < sz0 - 4; i += 4) {\n",
                        "                                a = data[i] += a;\n",
                        "                                a = data[i + 1] += a;\n",
                        "                                a = data[i + 2] += a;\n",
                        "                                a = data[i + 3] += a;\n",
                        "                        }\n",
                        "                }\n",
                        "\n",
                        "                for (; i != data.length; ++i) {\n",
                        "                        data[i] += data[i - 1];\n",
                        "                }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fastinverseDelta0(int[])",
                    "parameters": [
                        "data"
                    ],
                    "calls": []
                },
                "84-88:inverseDelta": {
                    "start": 84,
                    "end": 88,
                    "body": [
                        "        public static void inverseDelta(int[] data) {\n",
                        "                for (int i = 1; i < data.length; ++i) {\n",
                        "                        data[i] += data[i - 1];\n",
                        "                }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "inverseDelta(int[])",
                    "parameters": [
                        "data"
                    ],
                    "calls": []
                },
                "68-75:delta2": {
                    "start": 68,
                    "end": 75,
                    "body": [
                        "        public static int delta2(int[] data, int start, int length, int init,\n",
                        "                                 int[] out) {\n",
                        "                for (int i = length - 1; i > 0; --i) {\n",
                        "                        out[i] = data[start + i] - data[start + i - 1];\n",
                        "                }\n",
                        "                out[0] = data[start] - init;\n",
                        "                return data[start + length - 1];\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "delta2(int[], int, int, int, int[])",
                    "parameters": [
                        "data",
                        "start",
                        "length",
                        "init",
                        "out"
                    ],
                    "calls": []
                },
                "43-50:delta1": {
                    "start": 43,
                    "end": 50,
                    "body": [
                        "        public static int delta1(int[] data, int start, int length, int init) {\n",
                        "                final int nextinit = data[start + length - 1];\n",
                        "                for (int i = length - 1; i > 0; --i) {\n",
                        "                        data[start + i] -= data[start + i - 1];\n",
                        "                }\n",
                        "                data[start] -= init;\n",
                        "                return nextinit;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "delta1(int[], int, int, int)",
                    "parameters": [
                        "data",
                        "start",
                        "length",
                        "init"
                    ],
                    "calls": []
                },
                "24-28:delta0": {
                    "start": 24,
                    "end": 28,
                    "body": [
                        "        public static void delta0(int[] data) {\n",
                        "                for (int i = data.length - 1; i > 0; --i) {\n",
                        "                        data[i] -= data[i - 1];\n",
                        "                }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "delta0(int[])",
                    "parameters": [
                        "data"
                    ],
                    "calls": []
                }
            },
            "fields": {}
        }
    }
}