{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-cli/src/main/java/org/apache/commons/cli/HelpFormatter.java",
    "imports": {
        "20-20:import BufferedReader": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.io.BufferedReader;\n"
            ]
        },
        "21-21:import IOException": {
            "start": 21,
            "end": 21,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "23-23:import Serializable": {
            "start": 23,
            "end": 23,
            "body": [
                "import java.io.Serializable;\n"
            ]
        },
        "22-22:import PrintWriter": {
            "start": 22,
            "end": 22,
            "body": [
                "import java.io.PrintWriter;\n"
            ]
        },
        "24-24:import StringReader": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.io.StringReader;\n"
            ]
        },
        "31-31:import List": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "27-27:import Collection": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.util.Collection;\n"
            ]
        },
        "30-30:import Iterator": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.util.Iterator;\n"
            ]
        },
        "29-29:import Comparator": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.util.Comparator;\n"
            ]
        },
        "25-25:import ArrayList": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.util.ArrayList;\n"
            ]
        },
        "26-26:import Arrays": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.util.Arrays;\n"
            ]
        },
        "28-28:import Collections": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.util.Collections;\n"
            ]
        }
    },
    "classes": {
        "OptionComparator": {
            "start": 67,
            "end": 67,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "HelpFormatter",
            "nests": [],
            "implements": [
                "Serializable",
                "Comparator<Option>"
            ],
            "extends": [],
            "methods": {
                "81-83:compare": {
                    "start": 81,
                    "end": 83,
                    "body": [
                        "        public int compare(final Option opt1, final Option opt2) {\n",
                        "            return opt1.getKey().compareToIgnoreCase(opt2.getKey());\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "compare(Option, Option)",
                    "parameters": [
                        "opt1",
                        "opt2"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "compareToIgnoreCase(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "562-564:getKey"
                        ]
                    ]
                }
            },
            "fields": {
                "69-69:serialVersionUID": {
                    "start": 69,
                    "end": 69,
                    "body": [
                        "        private static final long serialVersionUID = 5305467873966684014L;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                }
            }
        },
        "HelpFormatter": {
            "start": 64,
            "end": 64,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "OptionComparator"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "957-959:setWidth": {
                    "start": 957,
                    "end": 959,
                    "body": [
                        "    public void setWidth(final int width) {\n",
                        "        this.defaultWidth = width;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setWidth(int)",
                    "parameters": [
                        "width"
                    ],
                    "calls": []
                },
                "948-950:setSyntaxPrefix": {
                    "start": 948,
                    "end": 950,
                    "body": [
                        "    public void setSyntaxPrefix(final String prefix) {\n",
                        "        this.defaultSyntaxPrefix = prefix;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setSyntaxPrefix(String)",
                    "parameters": [
                        "prefix"
                    ],
                    "calls": []
                },
                "939-941:setOptPrefix": {
                    "start": 939,
                    "end": 941,
                    "body": [
                        "    public void setOptPrefix(final String prefix) {\n",
                        "        this.defaultOptPrefix = prefix;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setOptPrefix(String)",
                    "parameters": [
                        "prefix"
                    ],
                    "calls": []
                },
                "930-932:setOptionComparator": {
                    "start": 930,
                    "end": 932,
                    "body": [
                        "    public void setOptionComparator(final Comparator<Option> comparator) {\n",
                        "        this.optionComparator = comparator;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setOptionComparator(Comparator<Option>)",
                    "parameters": [
                        "comparator"
                    ],
                    "calls": []
                },
                "919-921:setNewLine": {
                    "start": 919,
                    "end": 921,
                    "body": [
                        "    public void setNewLine(final String newline) {\n",
                        "        this.defaultNewLine = newline;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setNewLine(String)",
                    "parameters": [
                        "newline"
                    ],
                    "calls": []
                },
                "910-912:setLongOptSeparator": {
                    "start": 910,
                    "end": 912,
                    "body": [
                        "    public void setLongOptSeparator(final String longOptSeparator) {\n",
                        "        this.longOptSeparator = longOptSeparator;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setLongOptSeparator(String)",
                    "parameters": [
                        "longOptSeparator"
                    ],
                    "calls": []
                },
                "899-901:setLongOptPrefix": {
                    "start": 899,
                    "end": 901,
                    "body": [
                        "    public void setLongOptPrefix(final String prefix) {\n",
                        "        this.defaultLongOptPrefix = prefix;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setLongOptPrefix(String)",
                    "parameters": [
                        "prefix"
                    ],
                    "calls": []
                },
                "890-892:setLeftPadding": {
                    "start": 890,
                    "end": 892,
                    "body": [
                        "    public void setLeftPadding(final int padding) {\n",
                        "        this.defaultLeftPad = padding;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setLeftPadding(int)",
                    "parameters": [
                        "padding"
                    ],
                    "calls": []
                },
                "881-883:setDescPadding": {
                    "start": 881,
                    "end": 883,
                    "body": [
                        "    public void setDescPadding(final int padding) {\n",
                        "        this.defaultDescPad = padding;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setDescPadding(int)",
                    "parameters": [
                        "padding"
                    ],
                    "calls": []
                },
                "872-874:setArgName": {
                    "start": 872,
                    "end": 874,
                    "body": [
                        "    public void setArgName(final String name) {\n",
                        "        this.defaultArgName = name;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setArgName(String)",
                    "parameters": [
                        "name"
                    ],
                    "calls": []
                },
                "853-865:rtrim": {
                    "start": 853,
                    "end": 865,
                    "body": [
                        "    protected String rtrim(final String s) {\n",
                        "        if (s == null || s.isEmpty()) {\n",
                        "            return s;\n",
                        "        }\n",
                        "\n",
                        "        int pos = s.length();\n",
                        "\n",
                        "        while (pos > 0 && Character.isWhitespace(s.charAt(pos - 1))) {\n",
                        "            --pos;\n",
                        "        }\n",
                        "\n",
                        "        return s.substring(0, pos);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "rtrim(String)",
                    "parameters": [
                        "s"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "isEmpty()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "isWhitespace(char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "substring(int,int)"
                        ]
                    ]
                },
                "783-816:renderWrappedText": {
                    "start": 783,
                    "end": 816,
                    "body": [
                        "    protected StringBuffer renderWrappedText(\n",
                        "            final StringBuffer sb, final int width, int nextLineTabStop, String text) {\n",
                        "        int pos = findWrapPos(text, width, 0);\n",
                        "\n",
                        "        if (pos == -1) {\n",
                        "            sb.append(rtrim(text));\n",
                        "\n",
                        "            return sb;\n",
                        "        }\n",
                        "        sb.append(rtrim(text.substring(0, pos))).append(getNewLine());\n",
                        "\n",
                        "        if (nextLineTabStop >= width) {\n",
                        "            nextLineTabStop = 1;\n",
                        "        }\n",
                        "\n",
                        "        final String padding = createPadding(nextLineTabStop);\n",
                        "\n",
                        "        while (true) {\n",
                        "            text = padding + text.substring(pos).trim();\n",
                        "            pos = findWrapPos(text, width, 0);\n",
                        "\n",
                        "            if (pos == -1) {\n",
                        "                sb.append(text);\n",
                        "\n",
                        "                return sb;\n",
                        "            }\n",
                        "\n",
                        "            if (text.length() > width && pos == nextLineTabStop - 1) {\n",
                        "                pos = width;\n",
                        "            }\n",
                        "\n",
                        "            sb.append(rtrim(text.substring(0, pos))).append(getNewLine());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "StringBuffer",
                            "java.lang.StringBuffer"
                        ]
                    ],
                    "signature": "renderWrappedText(StringBuffer, int, int, String)",
                    "parameters": [
                        "sb",
                        "width",
                        "nextLineTabStop",
                        "text"
                    ],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "275-304:findWrapPos"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "256-261:createPadding"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "append(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "853-865:rtrim"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "357-359:getNewLine"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "substring(int,int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "trim()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "substring(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ]
                    ]
                },
                "696-772:renderOptions": {
                    "start": 696,
                    "end": 772,
                    "body": [
                        "    protected StringBuffer renderOptions(\n",
                        "            final StringBuffer sb,\n",
                        "            final int width,\n",
                        "            final Options options,\n",
                        "            final int leftPad,\n",
                        "            final int descPad) {\n",
                        "        final String lpad = createPadding(leftPad);\n",
                        "        final String dpad = createPadding(descPad);\n",
                        "\n",
                        "        int max = 0;\n",
                        "        final List<StringBuffer> prefixList = new ArrayList<>();\n",
                        "\n",
                        "        final List<Option> optList = options.helpOptions();\n",
                        "\n",
                        "        if (getOptionComparator() != null) {\n",
                        "            Collections.sort(optList, getOptionComparator());\n",
                        "        }\n",
                        "\n",
                        "        for (final Option option : optList) {\n",
                        "            final StringBuffer optBuf = new StringBuffer();\n",
                        "\n",
                        "            if (option.getOpt() == null) {\n",
                        "                optBuf.append(lpad)\n",
                        "                        .append(\"   \")\n",
                        "                        .append(getLongOptPrefix())\n",
                        "                        .append(option.getLongOpt());\n",
                        "            } else {\n",
                        "                optBuf.append(lpad).append(getOptPrefix()).append(option.getOpt());\n",
                        "\n",
                        "                if (option.hasLongOpt()) {\n",
                        "                    optBuf.append(',').append(getLongOptPrefix()).append(option.getLongOpt());\n",
                        "                }\n",
                        "            }\n",
                        "\n",
                        "            if (option.hasArg()) {\n",
                        "                final String argName = option.getArgName();\n",
                        "                if (argName != null && argName.isEmpty()) {\n",
                        "                    optBuf.append(' ');\n",
                        "                } else {\n",
                        "                    optBuf.append(option.hasLongOpt() ? longOptSeparator : \" \");\n",
                        "                    optBuf.append(\"<\")\n",
                        "                            .append(argName != null ? option.getArgName() : getArgName())\n",
                        "                            .append(\">\");\n",
                        "                }\n",
                        "            }\n",
                        "\n",
                        "            prefixList.add(optBuf);\n",
                        "            max = optBuf.length() > max ? optBuf.length() : max;\n",
                        "        }\n",
                        "\n",
                        "        int x = 0;\n",
                        "\n",
                        "        for (final Iterator<Option> it = optList.iterator(); it.hasNext(); ) {\n",
                        "            final Option option = it.next();\n",
                        "            final StringBuilder optBuf = new StringBuilder(prefixList.get(x++).toString());\n",
                        "\n",
                        "            if (optBuf.length() < max) {\n",
                        "                optBuf.append(createPadding(max - optBuf.length()));\n",
                        "            }\n",
                        "\n",
                        "            optBuf.append(dpad);\n",
                        "\n",
                        "            final int nextLineTabStop = max + descPad;\n",
                        "\n",
                        "            if (option.getDescription() != null) {\n",
                        "                optBuf.append(option.getDescription());\n",
                        "            }\n",
                        "\n",
                        "            renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());\n",
                        "\n",
                        "            if (it.hasNext()) {\n",
                        "                sb.append(getNewLine());\n",
                        "            }\n",
                        "        }\n",
                        "\n",
                        "        return sb;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "StringBuffer",
                            "java.lang.StringBuffer"
                        ]
                    ],
                    "signature": "renderOptions(StringBuffer, int, Options, int, int)",
                    "parameters": [
                        "sb",
                        "width",
                        "options",
                        "leftPad",
                        "descPad"
                    ],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "256-261:createPadding"
                        ],
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<StringBuffer>()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Options",
                            "Options",
                            "307-309:helpOptions"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "368-370:getOptionComparator"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collections",
                            "sort(java.util.List,java.util.Comparator)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "StringBuffer()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "583-585:getOpt"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "append(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "571-573:getLongOpt"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "338-340:getLongOptPrefix"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "377-379:getOptPrefix"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "694-696:hasLongOpt"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "append(char)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "662-664:hasArg"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "519-521:getArgName"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "isEmpty()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "311-313:getArgName"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(java.lang.StringBuffer)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "iterator()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "toString()"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "get(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/AbstractStringBuilder",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "543-545:getDescription"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "783-816:renderWrappedText"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "357-359:getNewLine"
                        ]
                    ]
                },
                "682-684:printWrapped1": {
                    "start": 682,
                    "end": 684,
                    "body": [
                        "    public void printWrapped1(final PrintWriter pw, final int width, final String text) {\n",
                        "        printWrapped0(pw, width, 0, text);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printWrapped1(PrintWriter, int, String)",
                    "parameters": [
                        "pw",
                        "width",
                        "text"
                    ],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "667-673:printWrapped0"
                        ]
                    ]
                },
                "667-673:printWrapped0": {
                    "start": 667,
                    "end": 673,
                    "body": [
                        "    public void printWrapped0(\n",
                        "            final PrintWriter pw, final int width, final int nextLineTabStop, final String text) {\n",
                        "        final StringBuffer sb = new StringBuffer(text.length());\n",
                        "\n",
                        "        renderWrappedTextBlock(sb, width, nextLineTabStop, text);\n",
                        "        pw.println(sb.toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printWrapped0(PrintWriter, int, int, String)",
                    "parameters": [
                        "pw",
                        "width",
                        "nextLineTabStop",
                        "text"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "StringBuffer(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "827-845:renderWrappedTextBlock"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintWriter",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "toString()"
                        ]
                    ]
                },
                "625-657:printUsage1": {
                    "start": 625,
                    "end": 657,
                    "body": [
                        "    public void printUsage1(\n",
                        "            final PrintWriter pw, final int width, final String app, final Options options) {\n",
                        "        final StringBuffer buff = new StringBuffer(getSyntaxPrefix()).append(app).append(\" \");\n",
                        "\n",
                        "        final Collection<OptionGroup> processedGroups = new ArrayList<>();\n",
                        "\n",
                        "        final List<Option> optList = new ArrayList<>(options.getOptions());\n",
                        "        if (getOptionComparator() != null) {\n",
                        "            Collections.sort(optList, getOptionComparator());\n",
                        "        }\n",
                        "        for (final Iterator<Option> it = optList.iterator(); it.hasNext(); ) {\n",
                        "            final Option option = it.next();\n",
                        "\n",
                        "            final OptionGroup group = options.getOptionGroup(option);\n",
                        "\n",
                        "            if (group != null) {\n",
                        "                if (!processedGroups.contains(group)) {\n",
                        "                    processedGroups.add(group);\n",
                        "\n",
                        "                    appendOptionGroup(buff, group);\n",
                        "                }\n",
                        "\n",
                        "            } else {\n",
                        "                appendOption(buff, option, option.isRequired());\n",
                        "            }\n",
                        "\n",
                        "            if (it.hasNext()) {\n",
                        "                buff.append(\" \");\n",
                        "            }\n",
                        "        }\n",
                        "\n",
                        "        printWrapped0(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printUsage1(PrintWriter, int, String, Options)",
                    "parameters": [
                        "pw",
                        "width",
                        "app",
                        "options"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "StringBuffer(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "386-388:getSyntaxPrefix"
                        ],
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<OptionGroup>()"
                        ],
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<Option>(java.util.Collection)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Options",
                            "Options",
                            "251-253:getOptions"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "368-370:getOptionComparator"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collections",
                            "sort(java.util.List,java.util.Comparator)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "iterator()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Options",
                            "Options",
                            "233-235:getOptionGroup"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "contains(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "add(org.apache.commons.cli.OptionGroup)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "228-248:appendOptionGroup"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "195-217:appendOption"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "729-731:isRequired"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "667-673:printWrapped0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "toString()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "indexOf(int)"
                        ]
                    ]
                },
                "610-615:printUsage0": {
                    "start": 610,
                    "end": 615,
                    "body": [
                        "    public void printUsage0(final PrintWriter pw, final int width, final String cmdLineSyntax) {\n",
                        "        final int argPos = cmdLineSyntax.indexOf(' ') + 1;\n",
                        "\n",
                        "        printWrapped0(\n",
                        "                pw, width, getSyntaxPrefix().length() + argPos, getSyntaxPrefix() + cmdLineSyntax);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printUsage0(PrintWriter, int, String)",
                    "parameters": [
                        "pw",
                        "width",
                        "cmdLineSyntax"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "indexOf(int)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "667-673:printWrapped0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "386-388:getSyntaxPrefix"
                        ]
                    ]
                },
                "591-601:printOptions": {
                    "start": 591,
                    "end": 601,
                    "body": [
                        "    public void printOptions(\n",
                        "            final PrintWriter pw,\n",
                        "            final int width,\n",
                        "            final Options options,\n",
                        "            final int leftPad,\n",
                        "            final int descPad) {\n",
                        "        final StringBuffer sb = new StringBuffer();\n",
                        "\n",
                        "        renderOptions(sb, width, options, leftPad, descPad);\n",
                        "        pw.println(sb.toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printOptions(PrintWriter, int, Options, int, int)",
                    "parameters": [
                        "pw",
                        "width",
                        "options",
                        "leftPad",
                        "descPad"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "StringBuffer()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "696-772:renderOptions"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintWriter",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "toString()"
                        ]
                    ]
                },
                "572-579:printHelp7": {
                    "start": 572,
                    "end": 579,
                    "body": [
                        "    public void printHelp7(\n",
                        "            final String cmdLineSyntax,\n",
                        "            final String header,\n",
                        "            final Options options,\n",
                        "            final String footer,\n",
                        "            final boolean autoUsage) {\n",
                        "        printHelp1(getWidth(), cmdLineSyntax, header, options, footer, autoUsage);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printHelp7(String, String, Options, String, boolean)",
                    "parameters": [
                        "cmdLineSyntax",
                        "header",
                        "options",
                        "footer",
                        "autoUsage"
                    ],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "429-449:printHelp1"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "395-397:getWidth"
                        ]
                    ]
                },
                "554-560:printHelp6": {
                    "start": 554,
                    "end": 560,
                    "body": [
                        "    public void printHelp6(\n",
                        "            final String cmdLineSyntax,\n",
                        "            final String header,\n",
                        "            final Options options,\n",
                        "            final String footer) {\n",
                        "        printHelp7(cmdLineSyntax, header, options, footer, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printHelp6(String, String, Options, String)",
                    "parameters": [
                        "cmdLineSyntax",
                        "header",
                        "options",
                        "footer"
                    ],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "572-579:printHelp7"
                        ]
                    ]
                },
                "540-543:printHelp5": {
                    "start": 540,
                    "end": 543,
                    "body": [
                        "    public void printHelp5(\n",
                        "            final String cmdLineSyntax, final Options options, final boolean autoUsage) {\n",
                        "        printHelp1(getWidth(), cmdLineSyntax, null, options, null, autoUsage);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printHelp5(String, Options, boolean)",
                    "parameters": [
                        "cmdLineSyntax",
                        "options",
                        "autoUsage"
                    ],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "429-449:printHelp1"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "395-397:getWidth"
                        ]
                    ]
                },
                "528-530:printHelp4": {
                    "start": 528,
                    "end": 530,
                    "body": [
                        "    public void printHelp4(final String cmdLineSyntax, final Options options) {\n",
                        "        printHelp1(getWidth(), cmdLineSyntax, null, options, null, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printHelp4(String, Options)",
                    "parameters": [
                        "cmdLineSyntax",
                        "options"
                    ],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "429-449:printHelp1"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "395-397:getWidth"
                        ]
                    ]
                },
                "490-519:printHelp3": {
                    "start": 490,
                    "end": 519,
                    "body": [
                        "    public void printHelp3(\n",
                        "            final PrintWriter pw,\n",
                        "            final int width,\n",
                        "            final String cmdLineSyntax,\n",
                        "            final String header,\n",
                        "            final Options options,\n",
                        "            final int leftPad,\n",
                        "            final int descPad,\n",
                        "            final String footer,\n",
                        "            final boolean autoUsage) {\n",
                        "        if (cmdLineSyntax == null || cmdLineSyntax.isEmpty()) {\n",
                        "            throw new IllegalArgumentException(\"cmdLineSyntax not provided\");\n",
                        "        }\n",
                        "\n",
                        "        if (autoUsage) {\n",
                        "            printUsage1(pw, width, cmdLineSyntax, options);\n",
                        "        } else {\n",
                        "            printUsage0(pw, width, cmdLineSyntax);\n",
                        "        }\n",
                        "\n",
                        "        if (header != null && !header.isEmpty()) {\n",
                        "            printWrapped1(pw, width, header);\n",
                        "        }\n",
                        "\n",
                        "        printOptions(pw, width, options, leftPad, descPad);\n",
                        "\n",
                        "        if (footer != null && !footer.isEmpty()) {\n",
                        "            printWrapped1(pw, width, footer);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printHelp3(PrintWriter, int, String, String, Options, int, int, String, boolean)",
                    "parameters": [
                        "pw",
                        "width",
                        "cmdLineSyntax",
                        "header",
                        "options",
                        "leftPad",
                        "descPad",
                        "footer",
                        "autoUsage"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "isEmpty()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "625-657:printUsage1"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "610-615:printUsage0"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "682-684:printWrapped1"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "591-601:printOptions"
                        ]
                    ]
                },
                "464-474:printHelp2": {
                    "start": 464,
                    "end": 474,
                    "body": [
                        "    public void printHelp2(\n",
                        "            final PrintWriter pw,\n",
                        "            final int width,\n",
                        "            final String cmdLineSyntax,\n",
                        "            final String header,\n",
                        "            final Options options,\n",
                        "            final int leftPad,\n",
                        "            final int descPad,\n",
                        "            final String footer) {\n",
                        "        printHelp3(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printHelp2(PrintWriter, int, String, String, Options, int, int, String)",
                    "parameters": [
                        "pw",
                        "width",
                        "cmdLineSyntax",
                        "header",
                        "options",
                        "leftPad",
                        "descPad",
                        "footer"
                    ],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "490-519:printHelp3"
                        ]
                    ]
                },
                "429-449:printHelp1": {
                    "start": 429,
                    "end": 449,
                    "body": [
                        "    public void printHelp1(\n",
                        "            final int width,\n",
                        "            final String cmdLineSyntax,\n",
                        "            final String header,\n",
                        "            final Options options,\n",
                        "            final String footer,\n",
                        "            final boolean autoUsage) {\n",
                        "        final PrintWriter pw = new PrintWriter(System.out);\n",
                        "\n",
                        "        printHelp3(\n",
                        "                pw,\n",
                        "                width,\n",
                        "                cmdLineSyntax,\n",
                        "                header,\n",
                        "                options,\n",
                        "                getLeftPadding(),\n",
                        "                getDescPadding(),\n",
                        "                footer,\n",
                        "                autoUsage);\n",
                        "        pw.flush();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printHelp1(int, String, String, Options, String, boolean)",
                    "parameters": [
                        "width",
                        "cmdLineSyntax",
                        "header",
                        "options",
                        "footer",
                        "autoUsage"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PrintWriter",
                            "PrintWriter(java.io.OutputStream)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "490-519:printHelp3"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "329-331:getLeftPadding"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "320-322:getDescPadding"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintWriter",
                            "flush()"
                        ]
                    ]
                },
                "409-416:printHelp0": {
                    "start": 409,
                    "end": 416,
                    "body": [
                        "    public void printHelp0(\n",
                        "            final int width,\n",
                        "            final String cmdLineSyntax,\n",
                        "            final String header,\n",
                        "            final Options options,\n",
                        "            final String footer) {\n",
                        "        printHelp1(width, cmdLineSyntax, header, options, footer, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "printHelp0(int, String, String, Options, String)",
                    "parameters": [
                        "width",
                        "cmdLineSyntax",
                        "header",
                        "options",
                        "footer"
                    ],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "429-449:printHelp1"
                        ]
                    ]
                },
                "395-397:getWidth": {
                    "start": 395,
                    "end": 397,
                    "body": [
                        "    public int getWidth() {\n",
                        "        return defaultWidth;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getWidth()",
                    "parameters": [],
                    "calls": []
                },
                "386-388:getSyntaxPrefix": {
                    "start": 386,
                    "end": 388,
                    "body": [
                        "    public String getSyntaxPrefix() {\n",
                        "        return defaultSyntaxPrefix;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getSyntaxPrefix()",
                    "parameters": [],
                    "calls": []
                },
                "377-379:getOptPrefix": {
                    "start": 377,
                    "end": 379,
                    "body": [
                        "    public String getOptPrefix() {\n",
                        "        return defaultOptPrefix;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getOptPrefix()",
                    "parameters": [],
                    "calls": []
                },
                "368-370:getOptionComparator": {
                    "start": 368,
                    "end": 370,
                    "body": [
                        "    public Comparator<Option> getOptionComparator() {\n",
                        "        return optionComparator;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Comparator<Option>",
                            "java.util.Comparator<Option>"
                        ]
                    ],
                    "signature": "getOptionComparator()",
                    "parameters": [],
                    "calls": []
                },
                "357-359:getNewLine": {
                    "start": 357,
                    "end": 359,
                    "body": [
                        "    public String getNewLine() {\n",
                        "        return defaultNewLine;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getNewLine()",
                    "parameters": [],
                    "calls": []
                },
                "348-350:getLongOptSeparator": {
                    "start": 348,
                    "end": 350,
                    "body": [
                        "    public String getLongOptSeparator() {\n",
                        "        return longOptSeparator;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getLongOptSeparator()",
                    "parameters": [],
                    "calls": []
                },
                "338-340:getLongOptPrefix": {
                    "start": 338,
                    "end": 340,
                    "body": [
                        "    public String getLongOptPrefix() {\n",
                        "        return defaultLongOptPrefix;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getLongOptPrefix()",
                    "parameters": [],
                    "calls": []
                },
                "329-331:getLeftPadding": {
                    "start": 329,
                    "end": 331,
                    "body": [
                        "    public int getLeftPadding() {\n",
                        "        return defaultLeftPad;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getLeftPadding()",
                    "parameters": [],
                    "calls": []
                },
                "320-322:getDescPadding": {
                    "start": 320,
                    "end": 322,
                    "body": [
                        "    public int getDescPadding() {\n",
                        "        return defaultDescPad;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getDescPadding()",
                    "parameters": [],
                    "calls": []
                },
                "311-313:getArgName": {
                    "start": 311,
                    "end": 313,
                    "body": [
                        "    public String getArgName() {\n",
                        "        return defaultArgName;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getArgName()",
                    "parameters": [],
                    "calls": []
                },
                "275-304:findWrapPos": {
                    "start": 275,
                    "end": 304,
                    "body": [
                        "    protected int findWrapPos(final String text, final int width, final int startPos) {\n",
                        "        int pos = text.indexOf('\\n', startPos);\n",
                        "        if (pos != -1 && pos <= width) {\n",
                        "            return pos + 1;\n",
                        "        }\n",
                        "\n",
                        "        pos = text.indexOf('\\t', startPos);\n",
                        "        if (pos != -1 && pos <= width) {\n",
                        "            return pos + 1;\n",
                        "        }\n",
                        "\n",
                        "        if (startPos + width >= text.length()) {\n",
                        "            return -1;\n",
                        "        }\n",
                        "\n",
                        "        for (pos = startPos + width; pos >= startPos; --pos) {\n",
                        "            final char c = text.charAt(pos);\n",
                        "            if (c == ' ' || c == '\\n' || c == '\\r') {\n",
                        "                break;\n",
                        "            }\n",
                        "        }\n",
                        "\n",
                        "        if (pos > startPos) {\n",
                        "            return pos;\n",
                        "        }\n",
                        "\n",
                        "        pos = startPos + width;\n",
                        "\n",
                        "        return pos == text.length() ? -1 : pos;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "findWrapPos(String, int, int)",
                    "parameters": [
                        "text",
                        "width",
                        "startPos"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "indexOf(int,int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "charAt(int)"
                        ]
                    ]
                },
                "256-261:createPadding": {
                    "start": 256,
                    "end": 261,
                    "body": [
                        "    protected String createPadding(final int len) {\n",
                        "        final char[] padding = new char[len];\n",
                        "        Arrays.fill(padding, ' ');\n",
                        "\n",
                        "        return new String(padding);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "createPadding(int)",
                    "parameters": [
                        "len"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "fill(char[],char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "String(char[])"
                        ]
                    ]
                },
                "827-845:renderWrappedTextBlock": {
                    "start": 827,
                    "end": 845,
                    "body": [
                        "    private Appendable renderWrappedTextBlock(\n",
                        "            final StringBuffer sb, final int width, final int nextLineTabStop, final String text) {\n",
                        "        try {\n",
                        "            final BufferedReader in = new BufferedReader(new StringReader(text));\n",
                        "            String line;\n",
                        "            boolean firstLine = true;\n",
                        "            while ((line = in.readLine()) != null) {\n",
                        "                if (!firstLine) {\n",
                        "                    sb.append(getNewLine());\n",
                        "                } else {\n",
                        "                    firstLine = false;\n",
                        "                }\n",
                        "                renderWrappedText(sb, width, nextLineTabStop, line);\n",
                        "            }\n",
                        "        } catch (final IOException e) { // NOPMD\n",
                        "        }\n",
                        "\n",
                        "        return sb;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "Appendable",
                            "java.lang.Appendable"
                        ]
                    ],
                    "signature": "renderWrappedTextBlock(StringBuffer, int, int, String)",
                    "parameters": [
                        "sb",
                        "width",
                        "nextLineTabStop",
                        "text"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/BufferedReader",
                            "BufferedReader(java.io.Reader)"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/io/BufferedReader",
                            "readLine()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "append(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "357-359:getNewLine"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "783-816:renderWrappedText"
                        ]
                    ]
                },
                "228-248:appendOptionGroup": {
                    "start": 228,
                    "end": 248,
                    "body": [
                        "    private void appendOptionGroup(final StringBuffer buff, final OptionGroup group) {\n",
                        "        if (!group.isRequired()) {\n",
                        "            buff.append(\"[\");\n",
                        "        }\n",
                        "\n",
                        "        final List<Option> optList = new ArrayList<>(group.getOptions());\n",
                        "        if (getOptionComparator() != null) {\n",
                        "            Collections.sort(optList, getOptionComparator());\n",
                        "        }\n",
                        "        for (final Iterator<Option> it = optList.iterator(); it.hasNext(); ) {\n",
                        "            appendOption(buff, it.next(), true);\n",
                        "\n",
                        "            if (it.hasNext()) {\n",
                        "                buff.append(\" | \");\n",
                        "            }\n",
                        "        }\n",
                        "\n",
                        "        if (!group.isRequired()) {\n",
                        "            buff.append(\"]\");\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "appendOptionGroup(StringBuffer, OptionGroup)",
                    "parameters": [
                        "buff",
                        "group"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<Option>(java.util.Collection)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.OptionGroup",
                            "OptionGroup",
                            "62-64:getOptions"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.OptionGroup",
                            "OptionGroup",
                            "78-80:isRequired"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "append(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "368-370:getOptionComparator"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collections",
                            "sort(java.util.List,java.util.Comparator)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "iterator()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "195-217:appendOption"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ]
                    ]
                },
                "195-217:appendOption": {
                    "start": 195,
                    "end": 217,
                    "body": [
                        "    private void appendOption(\n",
                        "            final StringBuffer buff, final Option option, final boolean required) {\n",
                        "        if (!required) {\n",
                        "            buff.append(\"[\");\n",
                        "        }\n",
                        "\n",
                        "        if (option.getOpt() != null) {\n",
                        "            buff.append(\"-\").append(option.getOpt());\n",
                        "        } else {\n",
                        "            buff.append(\"--\").append(option.getLongOpt());\n",
                        "        }\n",
                        "\n",
                        "        if (option.hasArg() && (option.getArgName() == null || !option.getArgName().isEmpty())) {\n",
                        "            buff.append(option.getOpt() == null ? longOptSeparator : \" \");\n",
                        "            buff.append(\"<\")\n",
                        "                    .append(option.getArgName() != null ? option.getArgName() : getArgName())\n",
                        "                    .append(\">\");\n",
                        "        }\n",
                        "\n",
                        "        if (!required) {\n",
                        "            buff.append(\"]\");\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "appendOption(StringBuffer, Option, boolean)",
                    "parameters": [
                        "buff",
                        "option",
                        "required"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "append(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "583-585:getOpt"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "571-573:getLongOpt"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "662-664:hasArg"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Option",
                            "Option",
                            "519-521:getArgName"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "isEmpty()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.HelpFormatter",
                            "HelpFormatter",
                            "311-313:getArgName"
                        ]
                    ]
                }
            },
            "fields": {
                "183-183:optionComparator": {
                    "start": 183,
                    "end": 183,
                    "body": [
                        "    protected Comparator<Option> optionComparator = new OptionComparator();\n"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "types": [
                        [
                            "Comparator<Option>",
                            "java.util.Comparator<Option>"
                        ]
                    ]
                },
                "176-176:defaultArgName": {
                    "start": 176,
                    "end": 176,
                    "body": [
                        "    @Deprecated public String defaultArgName = DEFAULT_ARG_NAME;\n"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "168-168:defaultLongOptPrefix": {
                    "start": 168,
                    "end": 168,
                    "body": [
                        "    @Deprecated public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;\n"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "160-160:defaultOptPrefix": {
                    "start": 160,
                    "end": 160,
                    "body": [
                        "    @Deprecated public String defaultOptPrefix = DEFAULT_OPT_PREFIX;\n"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "152-152:defaultNewLine": {
                    "start": 152,
                    "end": 152,
                    "body": [
                        "    @Deprecated public String defaultNewLine = System.getProperty(\"line.separator\");\n"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "144-144:defaultSyntaxPrefix": {
                    "start": 144,
                    "end": 144,
                    "body": [
                        "    @Deprecated public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;\n"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "136-136:defaultDescPad": {
                    "start": 136,
                    "end": 136,
                    "body": [
                        "    @Deprecated public int defaultDescPad = DEFAULT_DESC_PAD;\n"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "128-128:defaultLeftPad": {
                    "start": 128,
                    "end": 128,
                    "body": [
                        "    @Deprecated public int defaultLeftPad = DEFAULT_LEFT_PAD;\n"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "120-120:defaultWidth": {
                    "start": 120,
                    "end": 120,
                    "body": [
                        "    @Deprecated public int defaultWidth = DEFAULT_WIDTH;\n"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "112-112:DEFAULT_ARG_NAME": {
                    "start": 112,
                    "end": 112,
                    "body": [
                        "    public static final String DEFAULT_ARG_NAME = \"arg\";\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "109-109:DEFAULT_LONG_OPT_SEPARATOR": {
                    "start": 109,
                    "end": 109,
                    "body": [
                        "    public static final String DEFAULT_LONG_OPT_SEPARATOR = \" \";\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "102-102:DEFAULT_LONG_OPT_PREFIX": {
                    "start": 102,
                    "end": 102,
                    "body": [
                        "    public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "99-99:DEFAULT_OPT_PREFIX": {
                    "start": 99,
                    "end": 99,
                    "body": [
                        "    public static final String DEFAULT_OPT_PREFIX = \"-\";\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "96-96:DEFAULT_SYNTAX_PREFIX": {
                    "start": 96,
                    "end": 96,
                    "body": [
                        "    public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "93-93:DEFAULT_DESC_PAD": {
                    "start": 93,
                    "end": 93,
                    "body": [
                        "    public static final int DEFAULT_DESC_PAD = 3;\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "90-90:DEFAULT_LEFT_PAD": {
                    "start": 90,
                    "end": 90,
                    "body": [
                        "    public static final int DEFAULT_LEFT_PAD = 1;\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "87-87:DEFAULT_WIDTH": {
                    "start": 87,
                    "end": 87,
                    "body": [
                        "    public static final int DEFAULT_WIDTH = 74;\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "186-186:longOptSeparator": {
                    "start": 186,
                    "end": 186,
                    "body": [
                        "    private String longOptSeparator = DEFAULT_LONG_OPT_SEPARATOR;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                }
            }
        }
    }
}