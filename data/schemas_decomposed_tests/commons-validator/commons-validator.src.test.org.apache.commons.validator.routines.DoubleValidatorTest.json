{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-validator/src/test/java/org/apache/commons/validator/routines/DoubleValidatorTest.java",
    "imports": {
        "20-20:import Locale": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.util.Locale;\n"
            ]
        },
        "18-18:import Test": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.junit.Test;\n"
            ]
        }
    },
    "classes": {
        "DoubleValidatorTest": {
            "start": 27,
            "end": 27,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "AbstractNumberValidatorTest"
            ],
            "methods": {
                "1451-1470:testDoubleRangeMinMax_test4_decomposed": {
                    "start": 1451,
                    "end": 1470,
                    "body": [
                        "    public void testDoubleRangeMinMax_test4_decomposed()  {\n",
                        "        DoubleValidator validator = (DoubleValidator) strictValidator;\n",
                        "        Double number9 = validator.validate1(\"9\", \"#\");\n",
                        "        Double number10 = validator.validate1(\"10\", \"#\");\n",
                        "        Double number11 = validator.validate1(\"11\", \"#\");\n",
                        "        Double number19 = validator.validate1(\"19\", \"#\");\n",
                        "        Double number20 = validator.validate1(\"20\", \"#\");\n",
                        "        Double number21 = validator.validate1(\"21\", \"#\");\n",
                        "        assertFalse(\"isInRange() < min\", validator.isInRange1(number9, 10, 20));\n",
                        "        assertTrue(\"isInRange() = min\", validator.isInRange1(number10, 10, 20));\n",
                        "        assertTrue(\"isInRange() in range\", validator.isInRange1(number11, 10, 20));\n",
                        "        assertTrue(\"isInRange() = max\", validator.isInRange1(number20, 10, 20));\n",
                        "        assertFalse(\"isInRange() > max\", validator.isInRange1(number21, 10, 20));\n",
                        "        assertFalse(\"minValue() < min\", validator.minValue1(number9, 10));\n",
                        "        assertTrue(\"minValue() = min\", validator.minValue1(number10, 10));\n",
                        "        assertTrue(\"minValue() > min\", validator.minValue1(number11, 10));\n",
                        "        assertTrue(\"maxValue() < max\", validator.maxValue1(number19, 20));\n",
                        "        assertTrue(\"maxValue() = max\", validator.maxValue1(number20, 20));\n",
                        "        assertFalse(\"maxValue() > max\", validator.maxValue1(number21, 20));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleRangeMinMax_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "172-174:isInRange1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "194-196:minValue1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "216-218:maxValue1"
                        ]
                    ]
                },
                "1432-1448:testDoubleRangeMinMax_test3_decomposed": {
                    "start": 1432,
                    "end": 1448,
                    "body": [
                        "    public void testDoubleRangeMinMax_test3_decomposed()  {\n",
                        "        DoubleValidator validator = (DoubleValidator) strictValidator;\n",
                        "        Double number9 = validator.validate1(\"9\", \"#\");\n",
                        "        Double number10 = validator.validate1(\"10\", \"#\");\n",
                        "        Double number11 = validator.validate1(\"11\", \"#\");\n",
                        "        Double number19 = validator.validate1(\"19\", \"#\");\n",
                        "        Double number20 = validator.validate1(\"20\", \"#\");\n",
                        "        Double number21 = validator.validate1(\"21\", \"#\");\n",
                        "        assertFalse(\"isInRange() < min\", validator.isInRange1(number9, 10, 20));\n",
                        "        assertTrue(\"isInRange() = min\", validator.isInRange1(number10, 10, 20));\n",
                        "        assertTrue(\"isInRange() in range\", validator.isInRange1(number11, 10, 20));\n",
                        "        assertTrue(\"isInRange() = max\", validator.isInRange1(number20, 10, 20));\n",
                        "        assertFalse(\"isInRange() > max\", validator.isInRange1(number21, 10, 20));\n",
                        "        assertFalse(\"minValue() < min\", validator.minValue1(number9, 10));\n",
                        "        assertTrue(\"minValue() = min\", validator.minValue1(number10, 10));\n",
                        "        assertTrue(\"minValue() > min\", validator.minValue1(number11, 10));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleRangeMinMax_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "172-174:isInRange1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "194-196:minValue1"
                        ]
                    ]
                },
                "1416-1429:testDoubleRangeMinMax_test2_decomposed": {
                    "start": 1416,
                    "end": 1429,
                    "body": [
                        "    public void testDoubleRangeMinMax_test2_decomposed()  {\n",
                        "        DoubleValidator validator = (DoubleValidator) strictValidator;\n",
                        "        Double number9 = validator.validate1(\"9\", \"#\");\n",
                        "        Double number10 = validator.validate1(\"10\", \"#\");\n",
                        "        Double number11 = validator.validate1(\"11\", \"#\");\n",
                        "        Double number19 = validator.validate1(\"19\", \"#\");\n",
                        "        Double number20 = validator.validate1(\"20\", \"#\");\n",
                        "        Double number21 = validator.validate1(\"21\", \"#\");\n",
                        "        assertFalse(\"isInRange() < min\", validator.isInRange1(number9, 10, 20));\n",
                        "        assertTrue(\"isInRange() = min\", validator.isInRange1(number10, 10, 20));\n",
                        "        assertTrue(\"isInRange() in range\", validator.isInRange1(number11, 10, 20));\n",
                        "        assertTrue(\"isInRange() = max\", validator.isInRange1(number20, 10, 20));\n",
                        "        assertFalse(\"isInRange() > max\", validator.isInRange1(number21, 10, 20));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleRangeMinMax_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "172-174:isInRange1"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1405-1413:testDoubleRangeMinMax_test1_decomposed": {
                    "start": 1405,
                    "end": 1413,
                    "body": [
                        "    public void testDoubleRangeMinMax_test1_decomposed()  {\n",
                        "        DoubleValidator validator = (DoubleValidator) strictValidator;\n",
                        "        Double number9 = validator.validate1(\"9\", \"#\");\n",
                        "        Double number10 = validator.validate1(\"10\", \"#\");\n",
                        "        Double number11 = validator.validate1(\"11\", \"#\");\n",
                        "        Double number19 = validator.validate1(\"19\", \"#\");\n",
                        "        Double number20 = validator.validate1(\"20\", \"#\");\n",
                        "        Double number21 = validator.validate1(\"21\", \"#\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleRangeMinMax_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ]
                    ]
                },
                "1399-1402:testDoubleRangeMinMax_test0_decomposed": {
                    "start": 1399,
                    "end": 1402,
                    "body": [
                        "    public void testDoubleRangeMinMax_test0_decomposed()  {\n",
                        "        DoubleValidator validator = (DoubleValidator) strictValidator;\n",
                        "        Double number9 = validator.validate1(\"9\", \"#\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleRangeMinMax_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ]
                    ]
                },
                "1336-1396:testDoubleValidatorMethods_test31_decomposed": {
                    "start": 1336,
                    "end": 1396,
                    "body": [
                        "    public void testDoubleValidatorMethods_test31_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                DoubleValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", DoubleValidator.getInstance().isValid0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", DoubleValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) pattern\", DoubleValidator.getInstance().isValid1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\n",
                        "                \"isValid(B) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(patternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test31_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1276-1333:testDoubleValidatorMethods_test30_decomposed": {
                    "start": 1276,
                    "end": 1333,
                    "body": [
                        "    public void testDoubleValidatorMethods_test30_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                DoubleValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", DoubleValidator.getInstance().isValid0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", DoubleValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) pattern\", DoubleValidator.getInstance().isValid1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test30_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1217-1273:testDoubleValidatorMethods_test29_decomposed": {
                    "start": 1217,
                    "end": 1273,
                    "body": [
                        "    public void testDoubleValidatorMethods_test29_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                DoubleValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", DoubleValidator.getInstance().isValid0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", DoubleValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) pattern\", DoubleValidator.getInstance().isValid1(XXXX, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test29_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1159-1214:testDoubleValidatorMethods_test28_decomposed": {
                    "start": 1159,
                    "end": 1214,
                    "body": [
                        "    public void testDoubleValidatorMethods_test28_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                DoubleValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", DoubleValidator.getInstance().isValid0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", DoubleValidator.getInstance().isValid2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test28_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1102-1156:testDoubleValidatorMethods_test27_decomposed": {
                    "start": 1102,
                    "end": 1156,
                    "body": [
                        "    public void testDoubleValidatorMethods_test27_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                DoubleValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", DoubleValidator.getInstance().isValid0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) locale \", DoubleValidator.getInstance().isValid2(XXXX, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test27_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "1046-1099:testDoubleValidatorMethods_test26_decomposed": {
                    "start": 1046,
                    "end": 1099,
                    "body": [
                        "    public void testDoubleValidatorMethods_test26_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                DoubleValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", DoubleValidator.getInstance().isValid0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test26_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "991-1043:testDoubleValidatorMethods_test25_decomposed": {
                    "start": 991,
                    "end": 1043,
                    "body": [
                        "    public void testDoubleValidatorMethods_test25_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                DoubleValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertFalse(\"isValid(B) default\", DoubleValidator.getInstance().isValid0(XXXX));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test25_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "937-988:testDoubleValidatorMethods_test24_decomposed": {
                    "start": 937,
                    "end": 988,
                    "body": [
                        "    public void testDoubleValidatorMethods_test24_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                DoubleValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test24_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "884-934:testDoubleValidatorMethods_test23_decomposed": {
                    "start": 884,
                    "end": 934,
                    "body": [
                        "    public void testDoubleValidatorMethods_test23_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\n",
                        "                \"validate(B) both\",\n",
                        "                DoubleValidator.getInstance().validate3(patternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test23_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "834-881:testDoubleValidatorMethods_test22_decomposed": {
                    "start": 834,
                    "end": 881,
                    "body": [
                        "    public void testDoubleValidatorMethods_test22_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test22_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "785-831:testDoubleValidatorMethods_test21_decomposed": {
                    "start": 785,
                    "end": 831,
                    "body": [
                        "    public void testDoubleValidatorMethods_test21_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) pattern\", DoubleValidator.getInstance().validate1(XXXX, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test21_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "737-782:testDoubleValidatorMethods_test20_decomposed": {
                    "start": 737,
                    "end": 782,
                    "body": [
                        "    public void testDoubleValidatorMethods_test20_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test20_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "690-734:testDoubleValidatorMethods_test19_decomposed": {
                    "start": 690,
                    "end": 734,
                    "body": [
                        "    public void testDoubleValidatorMethods_test19_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) locale \", DoubleValidator.getInstance().validate2(XXXX, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test19_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "644-687:testDoubleValidatorMethods_test18_decomposed": {
                    "start": 644,
                    "end": 687,
                    "body": [
                        "    public void testDoubleValidatorMethods_test18_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test18_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "599-641:testDoubleValidatorMethods_test17_decomposed": {
                    "start": 599,
                    "end": 641,
                    "body": [
                        "    public void testDoubleValidatorMethods_test17_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertNull(\"validate(B) default\", DoubleValidator.getInstance().validate0(XXXX));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test17_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "555-596:testDoubleValidatorMethods_test16_decomposed": {
                    "start": 555,
                    "end": 596,
                    "body": [
                        "    public void testDoubleValidatorMethods_test16_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test16_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ]
                    ]
                },
                "512-552:testDoubleValidatorMethods_test15_decomposed": {
                    "start": 512,
                    "end": 552,
                    "body": [
                        "    public void testDoubleValidatorMethods_test15_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) both\",\n",
                        "                DoubleValidator.getInstance().isValid3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test15_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractNumberValidator",
                            "AbstractNumberValidator",
                            "93-96:isValid3"
                        ]
                    ]
                },
                "472-509:testDoubleValidatorMethods_test14_decomposed": {
                    "start": 472,
                    "end": 509,
                    "body": [
                        "    public void testDoubleValidatorMethods_test14_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test14_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ]
                    ]
                },
                "433-469:testDoubleValidatorMethods_test13_decomposed": {
                    "start": 433,
                    "end": 469,
                    "body": [
                        "    public void testDoubleValidatorMethods_test13_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\n",
                        "                \"isValid(A) pattern\", DoubleValidator.getInstance().isValid1(patternVal, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test13_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "79-81:isValid1"
                        ]
                    ]
                },
                "396-430:testDoubleValidatorMethods_test12_decomposed": {
                    "start": 396,
                    "end": 430,
                    "body": [
                        "    public void testDoubleValidatorMethods_test12_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test12_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ]
                    ]
                },
                "360-393:testDoubleValidatorMethods_test11_decomposed": {
                    "start": 360,
                    "end": 393,
                    "body": [
                        "    public void testDoubleValidatorMethods_test11_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) locale \", DoubleValidator.getInstance().isValid2(localeVal, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "90-92:isValid2"
                        ]
                    ]
                },
                "325-357:testDoubleValidatorMethods_test10_decomposed": {
                    "start": 325,
                    "end": 357,
                    "body": [
                        "    public void testDoubleValidatorMethods_test10_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ]
                    ]
                },
                "291-322:testDoubleValidatorMethods_test9_decomposed": {
                    "start": 291,
                    "end": 322,
                    "body": [
                        "    public void testDoubleValidatorMethods_test9_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertTrue(\"isValid(A) default\", DoubleValidator.getInstance().isValid0(defaultVal));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.AbstractFormatValidator",
                            "AbstractFormatValidator",
                            "68-70:isValid0"
                        ]
                    ]
                },
                "258-288:testDoubleValidatorMethods_test8_decomposed": {
                    "start": 258,
                    "end": 288,
                    "body": [
                        "    public void testDoubleValidatorMethods_test8_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ]
                    ]
                },
                "226-255:testDoubleValidatorMethods_test7_decomposed": {
                    "start": 226,
                    "end": 255,
                    "body": [
                        "    public void testDoubleValidatorMethods_test7_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) both\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate3(germanPatternVal, pattern, Locale.GERMAN));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "148-150:validate3"
                        ]
                    ]
                },
                "198-223:testDoubleValidatorMethods_test6_decomposed": {
                    "start": 198,
                    "end": 223,
                    "body": [
                        "    public void testDoubleValidatorMethods_test6_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ]
                    ]
                },
                "171-195:testDoubleValidatorMethods_test5_decomposed": {
                    "start": 171,
                    "end": 195,
                    "body": [
                        "    public void testDoubleValidatorMethods_test5_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) pattern\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate1(patternVal, pattern));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "123-125:validate1"
                        ]
                    ]
                },
                "148-168:testDoubleValidatorMethods_test4_decomposed": {
                    "start": 148,
                    "end": 168,
                    "body": [
                        "    public void testDoubleValidatorMethods_test4_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ]
                    ]
                },
                "126-145:testDoubleValidatorMethods_test3_decomposed": {
                    "start": 126,
                    "end": 145,
                    "body": [
                        "    public void testDoubleValidatorMethods_test3_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) locale \",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate2(localeVal, locale));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "134-136:validate2"
                        ]
                    ]
                },
                "108-123:testDoubleValidatorMethods_test2_decomposed": {
                    "start": 108,
                    "end": 123,
                    "body": [
                        "    public void testDoubleValidatorMethods_test2_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ]
                    ]
                },
                "91-105:testDoubleValidatorMethods_test1_decomposed": {
                    "start": 91,
                    "end": 105,
                    "body": [
                        "    public void testDoubleValidatorMethods_test1_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "        assertEquals(\n",
                        "                \"validate(A) default\",\n",
                        "                expected,\n",
                        "                DoubleValidator.getInstance().validate0(defaultVal));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ],
                        [
                            "library",
                            "TestCase",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "112-114:validate0"
                        ]
                    ]
                },
                "78-88:testDoubleValidatorMethods_test0_decomposed": {
                    "start": 78,
                    "end": 88,
                    "body": [
                        "    public void testDoubleValidatorMethods_test0_decomposed()  {\n",
                        "        Locale locale = Locale.GERMAN;\n",
                        "        String pattern = \"0,00,00\";\n",
                        "        String patternVal = \"1,23,45\";\n",
                        "        String germanPatternVal = \"1.23.45\";\n",
                        "        String localeVal = \"12.345\";\n",
                        "        String defaultVal = \"12,345\";\n",
                        "        String XXXX = \"XXXX\";\n",
                        "        Double expected = Double.valueOf(12345);\n",
                        "        DoubleValidator.getInstance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDoubleValidatorMethods_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "74-76:getInstance"
                        ]
                    ]
                },
                "39-70:setUp": {
                    "start": 39,
                    "end": 70,
                    "body": [
                        "    protected void setUp() throws Exception {\n",
                        "        super.setUp();\n",
                        "\n",
                        "        validator = new DoubleValidator(false, 0);\n",
                        "        strictValidator = DoubleValidator.DoubleValidator1();\n",
                        "\n",
                        "        testPattern = \"#,###.#\";\n",
                        "\n",
                        "        max = null;\n",
                        "        maxPlusOne = null;\n",
                        "        min = null;\n",
                        "        minMinusOne = null;\n",
                        "\n",
                        "        invalidStrict = new String[] {null, \"\", \"X\", \"X12\", \"12X\", \"1X2\"};\n",
                        "\n",
                        "        invalid = new String[] {null, \"\", \"X\", \"X12\"};\n",
                        "\n",
                        "        testNumber = Double.valueOf(1234.5);\n",
                        "        testZero = Double.valueOf(0);\n",
                        "        validStrict = new String[] {\"0\", \"1234.5\", \"1,234.5\"};\n",
                        "        validStrictCompare = new Number[] {testZero, testNumber, testNumber};\n",
                        "        valid = new String[] {\"0\", \"1234.5\", \"1,234.5\", \"1,234.5\", \"1234.5X\"};\n",
                        "        validCompare = new Number[] {testZero, testNumber, testNumber, testNumber, testNumber};\n",
                        "\n",
                        "        testStringUS = \"1,234.5\";\n",
                        "        testStringDE = \"1.234,5\";\n",
                        "\n",
                        "        localeValue = testStringDE;\n",
                        "        localePattern = \"#.###,#\";\n",
                        "        testLocale = Locale.GERMANY;\n",
                        "        localeExpected = testNumber;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setUp()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.AbstractNumberValidatorTest",
                            "AbstractNumberValidatorTest",
                            "72-76:setUp"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "79-81:DoubleValidator"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DoubleValidator",
                            "DoubleValidator",
                            "83-85:DoubleValidator1"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ]
                    ]
                },
                "34-36:DoubleValidatorTest": {
                    "start": 34,
                    "end": 36,
                    "body": [
                        "    public DoubleValidatorTest(String name) {\n",
                        "        super(name);\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "DoubleValidatorTest(String)",
                    "parameters": [
                        "name"
                    ],
                    "calls": [
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.AbstractNumberValidatorTest",
                            "AbstractNumberValidatorTest",
                            "67-69:AbstractNumberValidatorTest"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}