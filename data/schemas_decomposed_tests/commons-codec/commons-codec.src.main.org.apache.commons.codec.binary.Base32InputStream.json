{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
    "imports": {
        "22-22:import InputStream": {
            "start": 22,
            "end": 22,
            "body": [
                "import java.io.InputStream;\n"
            ]
        },
        "20-20:import CodecPolicy": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.codec.CodecPolicy;\n"
            ]
        }
    },
    "classes": {
        "Base32InputStream": {
            "start": 56,
            "end": 56,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "BaseNCodecInputStream"
            ],
            "methods": {
                "117-128:Base32InputStream": {
                    "start": 117,
                    "end": 128,
                    "body": [
                        "    public Base32InputStream(\n",
                        "            final InputStream input,\n",
                        "            final boolean doEncode,\n",
                        "            final int lineLength,\n",
                        "            final byte[] lineSeparator,\n",
                        "            final CodecPolicy decodingPolicy) {\n",
                        "        super(\n",
                        "                input,\n",
                        "                new Base32(\n",
                        "                        lineLength, lineSeparator, false, BaseNCodec.PAD_DEFAULT, decodingPolicy),\n",
                        "                doEncode);\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "Base32InputStream(InputStream, boolean, int, byte[], CodecPolicy)",
                    "parameters": [
                        "input",
                        "doEncode",
                        "lineLength",
                        "lineSeparator",
                        "decodingPolicy"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "400-441:Base32"
                        ]
                    ]
                },
                "93-100:Base32InputStream2": {
                    "start": 93,
                    "end": 100,
                    "body": [
                        "    public static BaseNCodecInputStream Base32InputStream2(\n",
                        "            final InputStream input,\n",
                        "            final boolean doEncode,\n",
                        "            final int lineLength,\n",
                        "            final byte[] lineSeparator) {\n",
                        "        return new BaseNCodecInputStream(\n",
                        "                input, Base32.Base325(lineLength, lineSeparator), doEncode);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "BaseNCodecInputStream",
                            "BaseNCodecInputStream"
                        ]
                    ],
                    "signature": "Base32InputStream2(InputStream, boolean, int, byte[])",
                    "parameters": [
                        "input",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "331-333:Base325"
                        ]
                    ]
                },
                "75-78:Base32InputStream1": {
                    "start": 75,
                    "end": 78,
                    "body": [
                        "    public static BaseNCodecInputStream Base32InputStream1(\n",
                        "            final InputStream in, final boolean doEncode) {\n",
                        "        return new BaseNCodecInputStream(in, Base32.Base321(false), doEncode);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "BaseNCodecInputStream",
                            "BaseNCodecInputStream"
                        ]
                    ],
                    "signature": "Base32InputStream1(InputStream, boolean)",
                    "parameters": [
                        "in",
                        "doEncode"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "276-278:Base321"
                        ]
                    ]
                },
                "64-66:Base32InputStream0": {
                    "start": 64,
                    "end": 66,
                    "body": [
                        "    public static BaseNCodecInputStream Base32InputStream0(final InputStream in) {\n",
                        "        return Base32InputStream1(in, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "BaseNCodecInputStream",
                            "BaseNCodecInputStream"
                        ]
                    ],
                    "signature": "Base32InputStream0(InputStream)",
                    "parameters": [
                        "in"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32InputStream",
                            "Base32InputStream",
                            "75-78:Base32InputStream1"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}