{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-csv/src/test/java/org/apache/commons/csv/issues/JiraCsv249Test.java",
    "imports": {
        "28-28:import IOException": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "29-29:import StringReader": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.io.StringReader;\n"
            ]
        },
        "30-30:import StringWriter": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.io.StringWriter;\n"
            ]
        },
        "31-31:import List": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "22-22:import CSVFormat": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.csv.CSVFormat;\n"
            ]
        },
        "24-24:import CSVPrinter": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.csv.CSVPrinter;\n"
            ]
        },
        "23-23:import CSVParser": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.apache.commons.csv.CSVParser;\n"
            ]
        },
        "26-26:import Test": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.junit.jupiter.api.Test;\n"
            ]
        },
        "25-25:import CSVRecord": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.apache.commons.csv.CSVRecord;\n"
            ]
        },
        "20-20:import static Assertions.assertEquals": {
            "start": 20,
            "end": 20,
            "body": [
                "import static org.junit.jupiter.api.Assertions.assertEquals;\n"
            ]
        }
    },
    "classes": {
        "JiraCsv249Test": {
            "start": 33,
            "end": 33,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "new Consumer<CSVRecord>(...) { ... }"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "93-111:testJiraCsv249_test6_decomposed": {
                    "start": 93,
                    "end": 111,
                    "body": [
                        "    public void testJiraCsv249_test6_decomposed() throws IOException {\n",
                        "        CSVFormat.DEFAULT.builder();\n",
                        "        CSVFormat.DEFAULT.builder().setEscape0('\\\\');\n",
                        "        final CSVFormat csvFormat = CSVFormat.DEFAULT.builder().setEscape0('\\\\').build();\n",
                        "        final StringWriter stringWriter = new StringWriter();\n",
                        "        try (CSVPrinter printer = new CSVPrinter(stringWriter, csvFormat)) {\n",
                        "            printer.printRecord1(\"foo \\\\\", \"bar\");\n",
                        "        }\n",
                        "        final StringReader stringReader = new StringReader(stringWriter.toString());\n",
                        "        final List<CSVRecord> records;\n",
                        "        try (CSVParser parser = CSVParser.CSVParser1(stringReader, csvFormat)) {\n",
                        "            records = parser.getRecords();\n",
                        "        }\n",
                        "        records.forEach(\n",
                        "                record -> {\n",
                        "                    assertEquals(\"foo \\\\\", record.get1(0));\n",
                        "                    assertEquals(\"bar\", record.get1(1));\n",
                        "                });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testJiraCsv249_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "378-381:setEscape0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1425-1427:builder"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "StringWriter()"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "toString()"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "257-259:printRecord1"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "377-380:CSVParser1"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "596-598:getRecords"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Iterable",
                            "forEach(java.util.function.Consumer)"
                        ]
                    ]
                },
                "77-90:testJiraCsv249_test5_decomposed": {
                    "start": 77,
                    "end": 90,
                    "body": [
                        "    public void testJiraCsv249_test5_decomposed() throws IOException {\n",
                        "        CSVFormat.DEFAULT.builder();\n",
                        "        CSVFormat.DEFAULT.builder().setEscape0('\\\\');\n",
                        "        final CSVFormat csvFormat = CSVFormat.DEFAULT.builder().setEscape0('\\\\').build();\n",
                        "        final StringWriter stringWriter = new StringWriter();\n",
                        "        try (CSVPrinter printer = new CSVPrinter(stringWriter, csvFormat)) {\n",
                        "            printer.printRecord1(\"foo \\\\\", \"bar\");\n",
                        "        }\n",
                        "        final StringReader stringReader = new StringReader(stringWriter.toString());\n",
                        "        final List<CSVRecord> records;\n",
                        "        try (CSVParser parser = CSVParser.CSVParser1(stringReader, csvFormat)) {\n",
                        "            records = parser.getRecords();\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testJiraCsv249_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "378-381:setEscape0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1425-1427:builder"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "StringWriter()"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "toString()"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "257-259:printRecord1"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "377-380:CSVParser1"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "596-598:getRecords"
                        ]
                    ]
                },
                "65-74:testJiraCsv249_test4_decomposed": {
                    "start": 65,
                    "end": 74,
                    "body": [
                        "    public void testJiraCsv249_test4_decomposed() throws IOException {\n",
                        "        CSVFormat.DEFAULT.builder();\n",
                        "        CSVFormat.DEFAULT.builder().setEscape0('\\\\');\n",
                        "        final CSVFormat csvFormat = CSVFormat.DEFAULT.builder().setEscape0('\\\\').build();\n",
                        "        final StringWriter stringWriter = new StringWriter();\n",
                        "        try (CSVPrinter printer = new CSVPrinter(stringWriter, csvFormat)) {\n",
                        "            printer.printRecord1(\"foo \\\\\", \"bar\");\n",
                        "        }\n",
                        "        final StringReader stringReader = new StringReader(stringWriter.toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testJiraCsv249_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "378-381:setEscape0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1425-1427:builder"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "StringWriter()"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "toString()"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "257-259:printRecord1"
                        ]
                    ]
                },
                "54-62:testJiraCsv249_test3_decomposed": {
                    "start": 54,
                    "end": 62,
                    "body": [
                        "    public void testJiraCsv249_test3_decomposed() throws IOException {\n",
                        "        CSVFormat.DEFAULT.builder();\n",
                        "        CSVFormat.DEFAULT.builder().setEscape0('\\\\');\n",
                        "        final CSVFormat csvFormat = CSVFormat.DEFAULT.builder().setEscape0('\\\\').build();\n",
                        "        final StringWriter stringWriter = new StringWriter();\n",
                        "        try (CSVPrinter printer = new CSVPrinter(stringWriter, csvFormat)) {\n",
                        "            printer.printRecord1(\"foo \\\\\", \"bar\");\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testJiraCsv249_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "378-381:setEscape0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1425-1427:builder"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "StringWriter()"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "257-259:printRecord1"
                        ]
                    ]
                },
                "47-51:testJiraCsv249_test2_decomposed": {
                    "start": 47,
                    "end": 51,
                    "body": [
                        "    public void testJiraCsv249_test2_decomposed() throws IOException {\n",
                        "        CSVFormat.DEFAULT.builder();\n",
                        "        CSVFormat.DEFAULT.builder().setEscape0('\\\\');\n",
                        "        final CSVFormat csvFormat = CSVFormat.DEFAULT.builder().setEscape0('\\\\').build();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testJiraCsv249_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "378-381:setEscape0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1425-1427:builder"
                        ]
                    ]
                },
                "41-44:testJiraCsv249_test1_decomposed": {
                    "start": 41,
                    "end": 44,
                    "body": [
                        "    public void testJiraCsv249_test1_decomposed() throws IOException {\n",
                        "        CSVFormat.DEFAULT.builder();\n",
                        "        CSVFormat.DEFAULT.builder().setEscape0('\\\\');\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testJiraCsv249_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1425-1427:builder"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "378-381:setEscape0"
                        ]
                    ]
                },
                "36-38:testJiraCsv249_test0_decomposed": {
                    "start": 36,
                    "end": 38,
                    "body": [
                        "    public void testJiraCsv249_test0_decomposed() throws IOException {\n",
                        "        CSVFormat.DEFAULT.builder();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testJiraCsv249_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1425-1427:builder"
                        ]
                    ]
                }
            },
            "fields": {}
        },
        "new Consumer<CSVRecord>(...) { ... }": {
            "start": 107,
            "end": 110,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "JiraCsv249Test",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "106-110:accept": {
                    "start": 106,
                    "end": 110,
                    "body": [
                        "        records.forEach(\n",
                        "                record -> {\n",
                        "                    assertEquals(\"foo \\\\\", record.get1(0));\n",
                        "                    assertEquals(\"bar\", record.get1(1));\n",
                        "                });\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "accept(CSVRecord)",
                    "parameters": [
                        "record"
                    ],
                    "calls": [
                        [
                            "library",
                            "Assertions",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "86-88:get1"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}