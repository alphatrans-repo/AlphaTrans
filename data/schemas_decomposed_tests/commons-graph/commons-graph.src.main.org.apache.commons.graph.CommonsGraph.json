{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/CommonsGraph.java",
    "imports": {
        "47-47:import VisitSourceSelector": {
            "start": 47,
            "end": 47,
            "body": [
                "import org.apache.commons.graph.visit.VisitSourceSelector;\n"
            ]
        },
        "26-26:import LinkedConnectionBuilder": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.graph.builder.LinkedConnectionBuilder;\n"
            ]
        },
        "25-25:import GraphConnection": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.apache.commons.graph.builder.GraphConnection;\n"
            ]
        },
        "39-39:import UndirectedMutableGraph": {
            "start": 39,
            "end": 39,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "38-38:import DirectedMutableGraph": {
            "start": 38,
            "end": 38,
            "body": [
                "import org.apache.commons.graph.model.DirectedMutableGraph;\n"
            ]
        },
        "45-45:import SpanningWeightedEdgeMapperBuilder": {
            "start": 45,
            "end": 45,
            "body": [
                "import org.apache.commons.graph.spanning.SpanningWeightedEdgeMapperBuilder;\n"
            ]
        },
        "41-41:import SccAlgorithmSelector": {
            "start": 41,
            "end": 41,
            "body": [
                "import org.apache.commons.graph.scc.SccAlgorithmSelector;\n"
            ]
        },
        "43-43:import PathWeightedEdgesBuilder": {
            "start": 43,
            "end": 43,
            "body": [
                "import org.apache.commons.graph.shortestpath.PathWeightedEdgesBuilder;\n"
            ]
        },
        "37-37:import FlowWeightedEdgesBuilder": {
            "start": 37,
            "end": 37,
            "body": [
                "import org.apache.commons.graph.flow.FlowWeightedEdgesBuilder;\n"
            ]
        },
        "29-29:import ConnectivityBuilder": {
            "start": 29,
            "end": 29,
            "body": [
                "import org.apache.commons.graph.connectivity.ConnectivityBuilder;\n"
            ]
        },
        "35-35:import NamedExportSelector": {
            "start": 35,
            "end": 35,
            "body": [
                "import org.apache.commons.graph.export.NamedExportSelector;\n"
            ]
        },
        "33-33:import RankingSelector": {
            "start": 33,
            "end": 33,
            "body": [
                "import org.apache.commons.graph.elo.RankingSelector;\n"
            ]
        },
        "32-32:import GameResult": {
            "start": 32,
            "end": 32,
            "body": [
                "import org.apache.commons.graph.elo.GameResult;\n"
            ]
        },
        "27-27:import ColorsBuilder": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.apache.commons.graph.coloring.ColorsBuilder;\n"
            ]
        },
        "24-24:import DefaultLinkedConnectionBuilder": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.graph.builder.DefaultLinkedConnectionBuilder;\n"
            ]
        },
        "28-28:import DefaultColorsBuilder": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.apache.commons.graph.coloring.DefaultColorsBuilder;\n"
            ]
        },
        "30-30:import DefaultConnectivityBuilder": {
            "start": 30,
            "end": 30,
            "body": [
                "import org.apache.commons.graph.connectivity.DefaultConnectivityBuilder;\n"
            ]
        },
        "31-31:import DefaultRankingSelector": {
            "start": 31,
            "end": 31,
            "body": [
                "import org.apache.commons.graph.elo.DefaultRankingSelector;\n"
            ]
        },
        "34-34:import DefaultExportSelector": {
            "start": 34,
            "end": 34,
            "body": [
                "import org.apache.commons.graph.export.DefaultExportSelector;\n"
            ]
        },
        "36-36:import DefaultFlowWeightedEdgesBuilder": {
            "start": 36,
            "end": 36,
            "body": [
                "import org.apache.commons.graph.flow.DefaultFlowWeightedEdgesBuilder;\n"
            ]
        },
        "40-40:import DefaultSccAlgorithmSelector": {
            "start": 40,
            "end": 40,
            "body": [
                "import org.apache.commons.graph.scc.DefaultSccAlgorithmSelector;\n"
            ]
        },
        "42-42:import DefaultWeightedEdgesSelector": {
            "start": 42,
            "end": 42,
            "body": [
                "import org.apache.commons.graph.shortestpath.DefaultWeightedEdgesSelector;\n"
            ]
        },
        "44-44:import DefaultSpanningWeightedEdgeMapperBuilder": {
            "start": 44,
            "end": 44,
            "body": [
                "import org.apache.commons.graph.spanning.DefaultSpanningWeightedEdgeMapperBuilder;\n"
            ]
        },
        "46-46:import DefaultVisitSourceSelector": {
            "start": 46,
            "end": 46,
            "body": [
                "import org.apache.commons.graph.visit.DefaultVisitSourceSelector;\n"
            ]
        },
        "22-22:import static Assertions.checkNotNull": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.utils.Assertions.checkNotNull;\n"
            ]
        }
    },
    "classes": {
        "CommonsGraph": {
            "start": 53,
            "end": 53,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "354-357:visit": {
                    "start": 354,
                    "end": 357,
                    "body": [
                        "    public static <V, E, G extends Graph<V, E>> VisitSourceSelector<V, E, G> visit(G graph) {\n",
                        "        graph = checkNotNull(graph, \"No algorithm can be applied on null graph!\");\n",
                        "        return new DefaultVisitSourceSelector<V, E, G>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "VisitSourceSelector<V,E,G>",
                            "VisitSourceSelector<V,E,G>"
                        ]
                    ],
                    "signature": "visit(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitSourceSelector",
                            "DefaultVisitSourceSelector<V,E,G>(org.apache.commons.graph.Graph)"
                        ]
                    ]
                },
                "341-343:synchronize3": {
                    "start": 341,
                    "end": 343,
                    "body": [
                        "    public static <V, E> Graph<V, E> synchronize3(UndirectedGraph<V, E> graph) {\n",
                        "        return new SynchronizedUndirectedGraph<V, E>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "Graph<V,E>",
                            "Graph<V,E>"
                        ]
                    ],
                    "signature": "synchronize3(UndirectedGraph<V,E>)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedUndirectedGraph",
                            "SynchronizedUndirectedGraph<V,E>(org.apache.commons.graph.Graph)"
                        ]
                    ]
                },
                "310-312:synchronize2": {
                    "start": 310,
                    "end": 312,
                    "body": [
                        "    public static <V, E> Graph<V, E> synchronize2(MutableGraph<V, E> graph) {\n",
                        "        return new SynchronizedMutableGraph<V, E>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "Graph<V,E>",
                            "Graph<V,E>"
                        ]
                    ],
                    "signature": "synchronize2(MutableGraph<V,E>)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "SynchronizedMutableGraph<V,E>(org.apache.commons.graph.MutableGraph)"
                        ]
                    ]
                },
                "279-281:synchronize1": {
                    "start": 279,
                    "end": 281,
                    "body": [
                        "    public static <V, E> Graph<V, E> synchronize1(Graph<V, E> graph) {\n",
                        "        return new SynchronizedGraph<V, E>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "Graph<V,E>",
                            "Graph<V,E>"
                        ]
                    ],
                    "signature": "synchronize1(Graph<V,E>)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedGraph",
                            "SynchronizedGraph<V,E>(org.apache.commons.graph.Graph)"
                        ]
                    ]
                },
                "248-250:synchronize0": {
                    "start": 248,
                    "end": 250,
                    "body": [
                        "    public static <V, E> Graph<V, E> synchronize0(DirectedGraph<V, E> graph) {\n",
                        "        return new SynchronizedDirectedGraph<V, E>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "Graph<V,E>",
                            "Graph<V,E>"
                        ]
                    ],
                    "signature": "synchronize0(DirectedGraph<V,E>)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedDirectedGraph",
                            "SynchronizedDirectedGraph<V,E>(org.apache.commons.graph.DirectedGraph)"
                        ]
                    ]
                },
                "215-219:populate": {
                    "start": 215,
                    "end": 219,
                    "body": [
                        "    public static <V, E, G extends MutableGraph<V, E>> LinkedConnectionBuilder<V, E, G> populate(\n",
                        "            G graph) {\n",
                        "        return new DefaultLinkedConnectionBuilder<V, E, G>(\n",
                        "                checkNotNull(graph, \"Impossible to configure null graph!\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "LinkedConnectionBuilder<V,E,G>",
                            "LinkedConnectionBuilder<V,E,G>"
                        ]
                    ],
                    "signature": "populate(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultLinkedConnectionBuilder",
                            "DefaultLinkedConnectionBuilder<V,E,G>(org.apache.commons.graph.MutableGraph)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ]
                    ]
                },
                "201-204:newUndirectedMutableGraph": {
                    "start": 201,
                    "end": 204,
                    "body": [
                        "    public static <V, E> UndirectedMutableGraph<V, E> newUndirectedMutableGraph(\n",
                        "            GraphConnection<V, E> graphConnection) {\n",
                        "        return populate(new UndirectedMutableGraph<V, E>()).withConnections(graphConnection);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "UndirectedMutableGraph<V,E>",
                            "UndirectedMutableGraph<V,E>"
                        ]
                    ],
                    "signature": "newUndirectedMutableGraph(GraphConnection<V,E>)",
                    "parameters": [
                        "graphConnection"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/LinkedConnectionBuilder",
                            "withConnections(org.apache.commons.graph.builder.GraphConnection)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "215-219:populate"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<V,E>()"
                        ]
                    ]
                },
                "187-190:newDirectedMutableGraph": {
                    "start": 187,
                    "end": 190,
                    "body": [
                        "    public static <V, E> DirectedMutableGraph<V, E> newDirectedMutableGraph(\n",
                        "            GraphConnection<V, E> graphConnection) {\n",
                        "        return populate(new DirectedMutableGraph<V, E>()).withConnections(graphConnection);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "DirectedMutableGraph<V,E>",
                            "DirectedMutableGraph<V,E>"
                        ]
                    ],
                    "signature": "newDirectedMutableGraph(GraphConnection<V,E>)",
                    "parameters": [
                        "graphConnection"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/LinkedConnectionBuilder",
                            "withConnections(org.apache.commons.graph.builder.GraphConnection)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.CommonsGraph",
                            "CommonsGraph",
                            "215-219:populate"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<V,E>()"
                        ]
                    ]
                },
                "172-176:minimumSpanningTree": {
                    "start": 172,
                    "end": 176,
                    "body": [
                        "    public static <V, WE, G extends Graph<V, WE>>\n",
                        "            SpanningWeightedEdgeMapperBuilder<V, WE> minimumSpanningTree(G graph) {\n",
                        "        graph = checkNotNull(graph, \"Minimum spanning tree can not be calculated on null graph\");\n",
                        "        return new DefaultSpanningWeightedEdgeMapperBuilder<V, WE>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "SpanningWeightedEdgeMapperBuilder<V,WE>",
                            "SpanningWeightedEdgeMapperBuilder<V,WE>"
                        ]
                    ],
                    "signature": "minimumSpanningTree(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningWeightedEdgeMapperBuilder",
                            "DefaultSpanningWeightedEdgeMapperBuilder<V,WE>(org.apache.commons.graph.Graph)"
                        ]
                    ]
                },
                "154-161:findStronglyConnectedComponent": {
                    "start": 154,
                    "end": 161,
                    "body": [
                        "    public static <V, E, G extends DirectedGraph<V, E>>\n",
                        "            SccAlgorithmSelector<V, E> findStronglyConnectedComponent(G graph) {\n",
                        "        graph =\n",
                        "                checkNotNull(\n",
                        "                        graph,\n",
                        "                        \"Strongly Connected Component cannot be calculated from a null graph\");\n",
                        "        return new DefaultSccAlgorithmSelector<V, E>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "SccAlgorithmSelector<V,E>",
                            "SccAlgorithmSelector<V,E>"
                        ]
                    ],
                    "signature": "findStronglyConnectedComponent(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/DefaultSccAlgorithmSelector",
                            "DefaultSccAlgorithmSelector<V,E>(org.apache.commons.graph.DirectedGraph)"
                        ]
                    ]
                },
                "139-143:findShortestPath": {
                    "start": 139,
                    "end": 143,
                    "body": [
                        "    public static <V, WE, G extends Graph<V, WE>> PathWeightedEdgesBuilder<V, WE> findShortestPath(\n",
                        "            G graph) {\n",
                        "        graph = checkNotNull(graph, \"Shortest path can not be calculated on null graph\");\n",
                        "        return new DefaultWeightedEdgesSelector<V, WE>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "PathWeightedEdgesBuilder<V,WE>",
                            "PathWeightedEdgesBuilder<V,WE>"
                        ]
                    ],
                    "signature": "findShortestPath(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultWeightedEdgesSelector",
                            "DefaultWeightedEdgesSelector<V,WE>(org.apache.commons.graph.Graph)"
                        ]
                    ]
                },
                "124-128:findMaxFlow": {
                    "start": 124,
                    "end": 128,
                    "body": [
                        "    public static <V, WE, G extends DirectedGraph<V, WE>>\n",
                        "            FlowWeightedEdgesBuilder<V, WE> findMaxFlow(G graph) {\n",
                        "        graph = checkNotNull(graph, \"Max flow can not be calculated on null graph\");\n",
                        "        return new DefaultFlowWeightedEdgesBuilder<V, WE>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "FlowWeightedEdgesBuilder<V,WE>",
                            "FlowWeightedEdgesBuilder<V,WE>"
                        ]
                    ],
                    "signature": "findMaxFlow(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/flow/DefaultFlowWeightedEdgesBuilder",
                            "DefaultFlowWeightedEdgesBuilder<V,WE>(org.apache.commons.graph.DirectedGraph)"
                        ]
                    ]
                },
                "109-113:findConnectedComponent": {
                    "start": 109,
                    "end": 113,
                    "body": [
                        "    public static <V, E, G extends Graph<V, E>> ConnectivityBuilder<V, E> findConnectedComponent(\n",
                        "            G graph) {\n",
                        "        graph = checkNotNull(graph, \"Connected Component cannot be calculated from a null graph\");\n",
                        "        return new DefaultConnectivityBuilder<V, E>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "ConnectivityBuilder<V,E>",
                            "ConnectivityBuilder<V,E>"
                        ]
                    ],
                    "signature": "findConnectedComponent(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/connectivity/DefaultConnectivityBuilder",
                            "DefaultConnectivityBuilder<V,E>(org.apache.commons.graph.Graph)"
                        ]
                    ]
                },
                "95-98:export": {
                    "start": 95,
                    "end": 98,
                    "body": [
                        "    public static <V, E, G extends Graph<V, E>> NamedExportSelector<V, E> export(G graph) {\n",
                        "        graph = checkNotNull(graph, \"Null graph can not be exported\");\n",
                        "        return new DefaultExportSelector<V, E>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "NamedExportSelector<V,E>",
                            "NamedExportSelector<V,E>"
                        ]
                    ],
                    "signature": "export(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/export/DefaultExportSelector",
                            "DefaultExportSelector<V,E>(org.apache.commons.graph.Graph)"
                        ]
                    ]
                },
                "79-84:eloRate": {
                    "start": 79,
                    "end": 84,
                    "body": [
                        "    public static <P, TG extends DirectedGraph<P, GameResult>> RankingSelector<P> eloRate(\n",
                        "            TG tournamentGraph) {\n",
                        "        tournamentGraph =\n",
                        "                checkNotNull(tournamentGraph, \"ELO ranking can not be applied on null graph!\");\n",
                        "        return new DefaultRankingSelector<P>(tournamentGraph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "RankingSelector<P>",
                            "RankingSelector<P>"
                        ]
                    ],
                    "signature": "eloRate(TG)",
                    "parameters": [
                        "tournamentGraph"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/elo/DefaultRankingSelector",
                            "DefaultRankingSelector<P>(org.apache.commons.graph.DirectedGraph)"
                        ]
                    ]
                },
                "64-67:coloring": {
                    "start": 64,
                    "end": 67,
                    "body": [
                        "    public static <V, E, G extends UndirectedGraph<V, E>> ColorsBuilder<V, E> coloring(G graph) {\n",
                        "        graph = checkNotNull(graph, \"Coloring can not be calculated on null graph\");\n",
                        "        return new DefaultColorsBuilder<V, E>(graph);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "ColorsBuilder<V,E>",
                            "ColorsBuilder<V,E>"
                        ]
                    ],
                    "signature": "coloring(G)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColorsBuilder",
                            "DefaultColorsBuilder<V,E>(org.apache.commons.graph.UndirectedGraph)"
                        ]
                    ]
                },
                "360-360:CommonsGraph": {
                    "start": 360,
                    "end": 360,
                    "body": [
                        "    private CommonsGraph() {}\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "CommonsGraph()",
                    "parameters": [],
                    "calls": []
                }
            },
            "fields": {}
        }
    }
}