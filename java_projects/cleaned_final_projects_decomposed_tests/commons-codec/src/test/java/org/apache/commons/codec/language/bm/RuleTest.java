/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.commons.codec.language.bm;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

/**
 * Tests Rule.
 *
 * @since 1.6
 */
public class RuleTest {

    private Rule.Phoneme[][] makePhonemes() {
        final String[][] words = {
            {"rinD", "rinDlt", "rina", "rinalt", "rino", "rinolt", "rinu", "rinult"},
            {"dortlaj", "dortlej", "ortlaj", "ortlej", "ortlej-dortlaj"}
        };
        final Rule.Phoneme[][] phonemes = new Rule.Phoneme[words.length][];

        for (int i = 0; i < words.length; i++) {
            final String[] words_i = words[i];
            final Rule.Phoneme[] phonemes_i = phonemes[i] = new Rule.Phoneme[words_i.length];
            for (int j = 0; j < words_i.length; j++) {
                phonemes_i[j] = new Rule.Phoneme(2, words_i[j], Languages.NO_LANGUAGES, null);
            }
        }

        return phonemes;
    }

    @Test
    public void testPhonemeComparedToSelfIsZero_test0_decomposed()  {
        for (final Rule.Phoneme[] phs : makePhonemes()) {
            for (final Rule.Phoneme ph : phs) {
                assertEquals(
                        "Phoneme compared to itself should be zero: " + ph.getPhonemeText(),
                        0,
                        Rule.Phoneme.COMPARATOR.compare(ph, ph));
            }
        }
    }

    @Test
    public void testSubSequenceWorks_test0_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
    }

    @Test
    public void testSubSequenceWorks_test1_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
    }

    @Test
    public void testSubSequenceWorks_test2_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
    }

    @Test
    public void testSubSequenceWorks_test3_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
    }

    @Test
    public void testSubSequenceWorks_test4_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
    }

    @Test
    public void testSubSequenceWorks_test5_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
    }

    @Test
    public void testSubSequenceWorks_test6_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test7_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
    }

    @Test
    public void testSubSequenceWorks_test8_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test9_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
    }

    @Test
    public void testSubSequenceWorks_test10_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test11_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
    }

    @Test
    public void testSubSequenceWorks_test12_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test13_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
    }

    @Test
    public void testSubSequenceWorks_test14_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test15_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
    }

    @Test
    public void testSubSequenceWorks_test16_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test17_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
    }

    @Test
    public void testSubSequenceWorks_test18_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test19_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
    }

    @Test
    public void testSubSequenceWorks_test20_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test21_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
    }

    @Test
    public void testSubSequenceWorks_test22_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test23_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
    }

    @Test
    public void testSubSequenceWorks_test24_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test25_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
    }

    @Test
    public void testSubSequenceWorks_test26_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test27_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
    }

    @Test
    public void testSubSequenceWorks_test28_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test29_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
    }

    @Test
    public void testSubSequenceWorks_test30_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
    }

    @Test
    public void testSubSequenceWorks_test31_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
    }

    @Test
    public void testSubSequenceWorks_test32_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test33_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
    }

    @Test
    public void testSubSequenceWorks_test34_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test35_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
    }

    @Test
    public void testSubSequenceWorks_test36_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
    }

    @Test
    public void testSubSequenceWorks_test37_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
    }

    @Test
    public void testSubSequenceWorks_test38_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
    }

    @Test
    public void testSubSequenceWorks_test39_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
    }

    @Test
    public void testSubSequenceWorks_test40_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
    }

    @Test
    public void testSubSequenceWorks_test41_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
    }

    @Test
    public void testSubSequenceWorks_test42_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
    }

    @Test
    public void testSubSequenceWorks_test43_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test44_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
    }

    @Test
    public void testSubSequenceWorks_test45_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test46_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
    }

    @Test
    public void testSubSequenceWorks_test47_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test48_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
    }

    @Test
    public void testSubSequenceWorks_test49_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test50_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
    }

    @Test
    public void testSubSequenceWorks_test51_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
    }

    @Test
    public void testSubSequenceWorks_test52_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
    }

    @Test
    public void testSubSequenceWorks_test53_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
    }

    @Test
    public void testSubSequenceWorks_test54_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
    }

    @Test
    public void testSubSequenceWorks_test55_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
    }

    @Test
    public void testSubSequenceWorks_test56_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
    }

    @Test
    public void testSubSequenceWorks_test57_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
    }

    @Test
    public void testSubSequenceWorks_test58_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
    }

    @Test
    public void testSubSequenceWorks_test59_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
    }

    @Test
    public void testSubSequenceWorks_test60_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
    }

    @Test
    public void testSubSequenceWorks_test61_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
    }

    @Test
    public void testSubSequenceWorks_test62_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
    }

    @Test
    public void testSubSequenceWorks_test63_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
    }

    @Test
    public void testSubSequenceWorks_test64_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
    }

    @Test
    public void testSubSequenceWorks_test65_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
    }

    @Test
    public void testSubSequenceWorks_test66_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
    }

    @Test
    public void testSubSequenceWorks_test67_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
    }

    @Test
    public void testSubSequenceWorks_test68_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
    }

    @Test
    public void testSubSequenceWorks_test69_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
    }

    @Test
    public void testSubSequenceWorks_test70_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
    }

    @Test
    public void testSubSequenceWorks_test71_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
    }

    @Test
    public void testSubSequenceWorks_test72_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test73_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
    }

    @Test
    public void testSubSequenceWorks_test74_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test75_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
    }

    @Test
    public void testSubSequenceWorks_test76_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test77_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
    }

    @Test
    public void testSubSequenceWorks_test78_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
    }

    @Test
    public void testSubSequenceWorks_test79_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
    }

    @Test
    public void testSubSequenceWorks_test80_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
    }

    @Test
    public void testSubSequenceWorks_test81_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
    }

    @Test
    public void testSubSequenceWorks_test82_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
    }

    @Test
    public void testSubSequenceWorks_test83_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
    }

    @Test
    public void testSubSequenceWorks_test84_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
    }

    @Test
    public void testSubSequenceWorks_test85_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
    }

    @Test
    public void testSubSequenceWorks_test86_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
    }

    @Test
    public void testSubSequenceWorks_test87_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
    }

    @Test
    public void testSubSequenceWorks_test88_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
    }

    @Test
    public void testSubSequenceWorks_test89_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
    }

    @Test
    public void testSubSequenceWorks_test90_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,3);
    }

    @Test
    public void testSubSequenceWorks_test91_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,3);
        assertEquals("bc", a_b_cd.getPhonemeText().subSequence(1, 3).toString());
    }

    @Test
    public void testSubSequenceWorks_test92_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,3);
        assertEquals("bc", a_b_cd.getPhonemeText().subSequence(1, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,4);
    }

    @Test
    public void testSubSequenceWorks_test93_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,3);
        assertEquals("bc", a_b_cd.getPhonemeText().subSequence(1, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,4);
        assertEquals("cd", a_b_cd.getPhonemeText().subSequence(2, 4).toString());
    }

    @Test
    public void testSubSequenceWorks_test94_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,3);
        assertEquals("bc", a_b_cd.getPhonemeText().subSequence(1, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,4);
        assertEquals("cd", a_b_cd.getPhonemeText().subSequence(2, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,3);
    }

    @Test
    public void testSubSequenceWorks_test95_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,3);
        assertEquals("bc", a_b_cd.getPhonemeText().subSequence(1, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,4);
        assertEquals("cd", a_b_cd.getPhonemeText().subSequence(2, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,3);
        assertEquals("abc", a_b_cd.getPhonemeText().subSequence(0, 3).toString());
    }

    @Test
    public void testSubSequenceWorks_test96_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,3);
        assertEquals("bc", a_b_cd.getPhonemeText().subSequence(1, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,4);
        assertEquals("cd", a_b_cd.getPhonemeText().subSequence(2, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,3);
        assertEquals("abc", a_b_cd.getPhonemeText().subSequence(0, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,4);
    }

    @Test
    public void testSubSequenceWorks_test97_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,3);
        assertEquals("bc", a_b_cd.getPhonemeText().subSequence(1, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,4);
        assertEquals("cd", a_b_cd.getPhonemeText().subSequence(2, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,3);
        assertEquals("abc", a_b_cd.getPhonemeText().subSequence(0, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,4);
        assertEquals("bcd", a_b_cd.getPhonemeText().subSequence(1, 4).toString());
    }

    @Test
    public void testSubSequenceWorks_test98_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,3);
        assertEquals("bc", a_b_cd.getPhonemeText().subSequence(1, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,4);
        assertEquals("cd", a_b_cd.getPhonemeText().subSequence(2, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,3);
        assertEquals("abc", a_b_cd.getPhonemeText().subSequence(0, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,4);
        assertEquals("bcd", a_b_cd.getPhonemeText().subSequence(1, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,4);
    }

    @Test
    public void testSubSequenceWorks_test99_decomposed()  {
        final Rule.Phoneme a = new Rule.Phoneme(2, "a", null, null);
        final Rule.Phoneme b = new Rule.Phoneme(2, "b", null, null);
        final Rule.Phoneme cd = new Rule.Phoneme(2, "cd", null, null);
        final Rule.Phoneme ef = new Rule.Phoneme(2, "ef", null, null);
        final Rule.Phoneme ghi = new Rule.Phoneme(2, "ghi", null, null);
        final Rule.Phoneme jkl = new Rule.Phoneme(2, "jkl", null, null);
        a.getPhonemeText();
        assertEquals('a', a.getPhonemeText().charAt(0));
        b.getPhonemeText();
        assertEquals('b', b.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('c', cd.getPhonemeText().charAt(0));
        cd.getPhonemeText();
        assertEquals('d', cd.getPhonemeText().charAt(1));
        ef.getPhonemeText();
        assertEquals('e', ef.getPhonemeText().charAt(0));
        ef.getPhonemeText();
        assertEquals('f', ef.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('g', ghi.getPhonemeText().charAt(0));
        ghi.getPhonemeText();
        assertEquals('h', ghi.getPhonemeText().charAt(1));
        ghi.getPhonemeText();
        assertEquals('i', ghi.getPhonemeText().charAt(2));
        jkl.getPhonemeText();
        assertEquals('j', jkl.getPhonemeText().charAt(0));
        jkl.getPhonemeText();
        assertEquals('k', jkl.getPhonemeText().charAt(1));
        jkl.getPhonemeText();
        assertEquals('l', jkl.getPhonemeText().charAt(2));
        System.out.println("a: " + a.getPhonemeText());
        System.out.println("b: " + b.getPhonemeText());
        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);
        a_b.getPhonemeText();
        assertEquals('a', a_b.getPhonemeText().charAt(0));
        a_b.getPhonemeText();
        assertEquals('b', a_b.getPhonemeText().charAt(1));
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b.getPhonemeText().subSequence(0, 2).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b.getPhonemeText().subSequence(0, 1).toString());
        a_b.getPhonemeText();
        a_b.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b.getPhonemeText().subSequence(1, 2).toString());
        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);
        cd_ef.getPhonemeText();
        assertEquals('c', cd_ef.getPhonemeText().charAt(0));
        cd_ef.getPhonemeText();
        assertEquals('d', cd_ef.getPhonemeText().charAt(1));
        cd_ef.getPhonemeText();
        assertEquals('e', cd_ef.getPhonemeText().charAt(2));
        cd_ef.getPhonemeText();
        assertEquals('f', cd_ef.getPhonemeText().charAt(3));
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,1);
        assertEquals("c", cd_ef.getPhonemeText().subSequence(0, 1).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,2);
        assertEquals("d", cd_ef.getPhonemeText().subSequence(1, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,3);
        assertEquals("e", cd_ef.getPhonemeText().subSequence(2, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(3,4);
        assertEquals("f", cd_ef.getPhonemeText().subSequence(3, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,2);
        assertEquals("cd", cd_ef.getPhonemeText().subSequence(0, 2).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,3);
        assertEquals("de", cd_ef.getPhonemeText().subSequence(1, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(2,4);
        assertEquals("ef", cd_ef.getPhonemeText().subSequence(2, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,3);
        assertEquals("cde", cd_ef.getPhonemeText().subSequence(0, 3).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(1,4);
        assertEquals("def", cd_ef.getPhonemeText().subSequence(1, 4).toString());
        cd_ef.getPhonemeText();
        cd_ef.getPhonemeText().subSequence(0,4);
        assertEquals("cdef", cd_ef.getPhonemeText().subSequence(0, 4).toString());
        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);
        a_b_cd.getPhonemeText();
        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));
        a_b_cd.getPhonemeText();
        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));
        a_b_cd.getPhonemeText();
        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));
        a_b_cd.getPhonemeText();
        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,1);
        assertEquals("a", a_b_cd.getPhonemeText().subSequence(0, 1).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,2);
        assertEquals("b", a_b_cd.getPhonemeText().subSequence(1, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,3);
        assertEquals("c", a_b_cd.getPhonemeText().subSequence(2, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(3,4);
        assertEquals("d", a_b_cd.getPhonemeText().subSequence(3, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,2);
        assertEquals("ab", a_b_cd.getPhonemeText().subSequence(0, 2).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,3);
        assertEquals("bc", a_b_cd.getPhonemeText().subSequence(1, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(2,4);
        assertEquals("cd", a_b_cd.getPhonemeText().subSequence(2, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,3);
        assertEquals("abc", a_b_cd.getPhonemeText().subSequence(0, 3).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(1,4);
        assertEquals("bcd", a_b_cd.getPhonemeText().subSequence(1, 4).toString());
        a_b_cd.getPhonemeText();
        a_b_cd.getPhonemeText().subSequence(0,4);
        assertEquals("abcd", a_b_cd.getPhonemeText().subSequence(0, 4).toString());
    }
}