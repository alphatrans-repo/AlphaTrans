{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/JavaFastPFOR/src/main/java/me/lemire/longcompression/SkippableLongCODEC.java",
    "imports": {
        "10-10:import IntWrapper": {
            "start": 10,
            "end": 10,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        }
    },
    "classes": {
        "SkippableLongCODEC": {
            "start": 25,
            "end": 25,
            "is_abstract": false,
            "is_interface": true,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "67-69:headlessUncompress": {
                    "start": 67,
                    "end": 69,
                    "body": [
                        "    public void headlessUncompress(long[] in, IntWrapper inpos, int inlength, long[] out,\n",
                        "            IntWrapper outpos, int num);\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "abstract"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "headlessUncompress(long[], IntWrapper, int, long[], IntWrapper, int)",
                    "parameters": [
                        "in",
                        "inpos",
                        "inlength",
                        "out",
                        "outpos",
                        "num"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def headlessUncompress(self, in_: typing.List[int], inpos: IntWrapper, inlength: int, out: typing.List[int], outpos: IntWrapper, num: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "45-47:headlessCompress": {
                    "start": 45,
                    "end": 47,
                    "body": [
                        "    public void headlessCompress(long[] in, IntWrapper inpos, int inlength, long[] out,\n",
                        "            IntWrapper outpos);\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "abstract"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "headlessCompress(long[], IntWrapper, int, long[], IntWrapper)",
                    "parameters": [
                        "in",
                        "inpos",
                        "inlength",
                        "out",
                        "outpos"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def headlessCompress(self, in_: typing.List[int], inpos: IntWrapper, inlength: int, out: typing.List[int], outpos: IntWrapper) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class SkippableLongCODEC(ABC):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "from abc import ABC",
        "import io",
        "import typing\nfrom typing import *",
        "import os",
        "from src.main.me.lemire.integercompression.IntWrapper import *"
    ]
}