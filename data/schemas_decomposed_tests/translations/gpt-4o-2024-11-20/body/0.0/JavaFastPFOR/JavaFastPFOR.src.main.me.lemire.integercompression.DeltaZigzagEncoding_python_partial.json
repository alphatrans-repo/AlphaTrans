{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/JavaFastPFOR/src/main/java/me/lemire/integercompression/DeltaZigzagEncoding.java",
    "imports": {},
    "classes": {
        "DeltaZigzagEncoding": {
            "start": 12,
            "end": 12,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "Context",
                "Decoder",
                "Encoder"
            ],
            "implements": [],
            "extends": [],
            "methods": {},
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class DeltaZigzagEncoding:\n\n"
        },
        "Context": {
            "start": 14,
            "end": 14,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "DeltaZigzagEncoding",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "25-27:getContextValue": {
                    "start": 25,
                    "end": 27,
                    "body": [
                        "                int getContextValue() {\n",
                        "                        return this.contextValue;\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getContextValue()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def getContextValue(self) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "21-23:setContextValue": {
                    "start": 21,
                    "end": 23,
                    "body": [
                        "                void setContextValue(int contextValue) {\n",
                        "                        this.contextValue = contextValue;\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setContextValue(int)",
                    "parameters": [
                        "contextValue"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def setContextValue(self, contextValue: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "17-19:Context": {
                    "start": 17,
                    "end": 19,
                    "body": [
                        "                Context(int contextValue) {\n",
                        "                        this.contextValue = contextValue;\n",
                        "                }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "Context(int)",
                    "parameters": [
                        "contextValue"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, contextValue: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "15-15:contextValue": {
                    "start": 15,
                    "end": 15,
                    "body": [
                        "                int contextValue;\n"
                    ],
                    "modifiers": [],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "partial_translation": [
                        "    contextValue: int = 0",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class Context:\n\n"
        },
        "Decoder": {
            "start": 65,
            "end": 65,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "DeltaZigzagEncoding",
            "nests": [],
            "implements": [],
            "extends": [
                "Context"
            ],
            "methods": {
                "90-92:decodeArray2": {
                    "start": 90,
                    "end": 92,
                    "body": [
                        "                int[] decodeArray2(int[] src) {\n",
                        "                        return decodeArray1(src, 0, src.length);\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ],
                    "signature": "decodeArray2(int[])",
                    "parameters": [
                        "src"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "85-88:decodeArray1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def decodeArray2(self, src: typing.List[int]) -> typing.List[int]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "85-88:decodeArray1": {
                    "start": 85,
                    "end": 88,
                    "body": [
                        "                int[] decodeArray1(int[] src, int offset, int length) {\n",
                        "                        return decodeArray0(src, offset, length,\n",
                        "                                new int[length], 0);\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ],
                    "signature": "decodeArray1(int[], int, int)",
                    "parameters": [
                        "src",
                        "offset",
                        "length"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "77-83:decodeArray0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def decodeArray1(self, src: typing.List[int], offset: int, length: int) -> typing.List[int]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "77-83:decodeArray0": {
                    "start": 77,
                    "end": 83,
                    "body": [
                        "                int[] decodeArray0(int[] src, int srcoff, int length,\n",
                        "                                   int[] dst, int dstoff) {\n",
                        "                        for (int i = 0; i < length; ++i) {\n",
                        "                                dst[dstoff + i] = decodeInt(src[srcoff + i]);\n",
                        "                        }\n",
                        "                        return dst;\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ],
                    "signature": "decodeArray0(int[], int, int, int[], int)",
                    "parameters": [
                        "src",
                        "srcoff",
                        "length",
                        "dst",
                        "dstoff"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "70-75:decodeInt"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def decodeArray0(self, src: typing.List[int], srcoff: int, length: int, dst: typing.List[int], dstoff: int) -> typing.List[int]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "70-75:decodeInt": {
                    "start": 70,
                    "end": 75,
                    "body": [
                        "                int decodeInt(int value) {\n",
                        "                        int n = (value >>> 1) ^ ((value << 31) >> 31);\n",
                        "                        n += this.contextValue;\n",
                        "                        this.contextValue = n;\n",
                        "                        return n;\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "decodeInt(int)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def decodeInt(self, value: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "66-68:Decoder": {
                    "start": 66,
                    "end": 68,
                    "body": [
                        "                Decoder(int contextValue) {\n",
                        "                        super(contextValue);\n",
                        "                }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "Decoder(int)",
                    "parameters": [
                        "contextValue"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Context",
                            "17-19:Context"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, contextValue: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class Decoder(Context):\n\n"
        },
        "Encoder": {
            "start": 30,
            "end": 30,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "DeltaZigzagEncoding",
            "nests": [],
            "implements": [],
            "extends": [
                "Context"
            ],
            "methods": {
                "59-62:encodeArray3": {
                    "start": 59,
                    "end": 62,
                    "body": [
                        "                int[] encodeArray3(int[] src) {\n",
                        "                        return encodeArray0(src, 0, src.length,\n",
                        "                                new int[src.length], 0);\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ],
                    "signature": "encodeArray3(int[])",
                    "parameters": [
                        "src"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "41-47:encodeArray0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encodeArray3(self, src: typing.List[int]) -> typing.List[int]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "54-57:encodeArray2": {
                    "start": 54,
                    "end": 57,
                    "body": [
                        "                int[] encodeArray2(int[] src, int offset, int length) {\n",
                        "                        return encodeArray0(src, offset, length,\n",
                        "                                new int[length], 0);\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ],
                    "signature": "encodeArray2(int[], int, int)",
                    "parameters": [
                        "src",
                        "offset",
                        "length"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "41-47:encodeArray0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encodeArray2(self, src: typing.List[int], offset: int, length: int) -> typing.List[int]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "49-52:encodeArray1": {
                    "start": 49,
                    "end": 52,
                    "body": [
                        "                int[] encodeArray1(int[] src, int srcoff, int length,\n",
                        "                                   int[] dst) {\n",
                        "                        return encodeArray0(src, srcoff, length, dst, 0);\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ],
                    "signature": "encodeArray1(int[], int, int, int[])",
                    "parameters": [
                        "src",
                        "srcoff",
                        "length",
                        "dst"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "41-47:encodeArray0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encodeArray1(self, src: typing.List[int], srcoff: int, length: int, dst: typing.List[int]) -> typing.List[int]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "41-47:encodeArray0": {
                    "start": 41,
                    "end": 47,
                    "body": [
                        "                int[] encodeArray0(int[] src, int srcoff, int length,\n",
                        "                                   int[] dst, int dstoff) {\n",
                        "                        for (int i = 0; i < length; ++i) {\n",
                        "                                dst[dstoff + i] = encodeInt(src[srcoff + i]);\n",
                        "                        }\n",
                        "                        return dst;\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ],
                    "signature": "encodeArray0(int[], int, int, int[], int)",
                    "parameters": [
                        "src",
                        "srcoff",
                        "length",
                        "dst",
                        "dstoff"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "35-39:encodeInt"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encodeArray0(self, src: typing.List[int], srcoff: int, length: int, dst: typing.List[int], dstoff: int) -> typing.List[int]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "35-39:encodeInt": {
                    "start": 35,
                    "end": 39,
                    "body": [
                        "                int encodeInt(int value) {\n",
                        "                        int n = value - this.contextValue;\n",
                        "                        this.contextValue = value;\n",
                        "                        return (n << 1) ^ (n >> 31);\n",
                        "                }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "encodeInt(int)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encodeInt(self, value: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "31-33:Encoder": {
                    "start": 31,
                    "end": 33,
                    "body": [
                        "                Encoder(int contextValue) {\n",
                        "                        super(contextValue);\n",
                        "                }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "Encoder(int)",
                    "parameters": [
                        "contextValue"
                    ],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Context",
                            "17-19:Context"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, contextValue: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class Encoder(Context):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import io",
        "import typing\nfrom typing import *"
    ]
}