{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/jansi/src/test/java/org/fusesource/jansi/EncodingTest.java",
    "imports": {
        "18-18:import ByteArrayOutputStream": {
            "start": 18,
            "end": 18,
            "body": [
                "import java.io.ByteArrayOutputStream;\n"
            ]
        },
        "20-20:import UnsupportedEncodingException": {
            "start": 20,
            "end": 20,
            "body": [
                "import java.io.UnsupportedEncodingException;\n"
            ]
        },
        "19-19:import PrintStream": {
            "start": 19,
            "end": 19,
            "body": [
                "import java.io.PrintStream;\n"
            ]
        },
        "21-21:import StandardCharsets": {
            "start": 21,
            "end": 21,
            "body": [
                "import java.nio.charset.StandardCharsets;\n"
            ]
        },
        "22-22:import AtomicReference": {
            "start": 22,
            "end": 22,
            "body": [
                "import java.util.concurrent.atomic.AtomicReference;\n"
            ]
        },
        "24-24:import AnsiOutputStream": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.fusesource.jansi.io.AnsiOutputStream;\n"
            ]
        },
        "26-26:import Test": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.junit.jupiter.api.Test;\n"
            ]
        },
        "25-25:import AnsiProcessor": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.fusesource.jansi.io.AnsiProcessor;\n"
            ]
        },
        "28-28:import static Assertions.assertEquals": {
            "start": 28,
            "end": 28,
            "body": [
                "import static org.junit.jupiter.api.Assertions.assertEquals;\n"
            ]
        }
    },
    "classes": {
        "EncodingTest": {
            "start": 30,
            "end": 30,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "new AnsiProcessor(...) { ... }",
                "new AnsiProcessor(...) { ... }",
                "new AnsiProcessor(...) { ... }",
                "new AnsiProcessor(...) { ... }",
                "new AnsiProcessor(...) { ... }",
                "new AnsiProcessor(...) { ... }",
                "new AnsiProcessor(...) { ... }"
            ],
            "implements": [],
            "extends": [],
            "methods": {
                "192-217:testEncodingUtf8_test2_decomposed": {
                    "start": 192,
                    "end": 217,
                    "body": [
                        "    public void testEncodingUtf8_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n",
                        "        final AtomicReference<String> newLabel = new AtomicReference<>();\n",
                        "        PrintStream ansi = new PrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n",
                        "                            @Override\n",
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n",
                        "                        },\n",
                        "                        AnsiType.Emulation,\n",
                        "                        AnsiColors.TrueColor,\n",
                        "                        StandardCharsets.UTF_8,\n",
                        "                        null,\n",
                        "                        null,\n",
                        "                        false),\n",
                        "                true,\n",
                        "                \"UTF-8\");\n",
                        "        ansi.print(\"\\033]0;\u3072\u3089\u304c\u306a\\007\");\n",
                        "        ansi.flush();\n",
                        "        assertEquals(\"\u3072\u3089\u304c\u306a\", newLabel.get());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodingUtf8_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayOutputStream",
                            "ByteArrayOutputStream()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "AtomicReference<String>()"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "PrintStream(java.io.OutputStream,boolean,java.lang.String)"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.io.AnsiOutputStream",
                            "AnsiOutputStream",
                            "99-120:AnsiOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "print(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "flush()"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "get()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEncodingUtf8_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "165-189:testEncodingUtf8_test1_decomposed": {
                    "start": 165,
                    "end": 189,
                    "body": [
                        "    public void testEncodingUtf8_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n",
                        "        final AtomicReference<String> newLabel = new AtomicReference<>();\n",
                        "        PrintStream ansi = new PrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n",
                        "                            @Override\n",
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n",
                        "                        },\n",
                        "                        AnsiType.Emulation,\n",
                        "                        AnsiColors.TrueColor,\n",
                        "                        StandardCharsets.UTF_8,\n",
                        "                        null,\n",
                        "                        null,\n",
                        "                        false),\n",
                        "                true,\n",
                        "                \"UTF-8\");\n",
                        "        ansi.print(\"\\033]0;\u3072\u3089\u304c\u306a\\007\");\n",
                        "        ansi.flush();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodingUtf8_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayOutputStream",
                            "ByteArrayOutputStream()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "AtomicReference<String>()"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "PrintStream(java.io.OutputStream,boolean,java.lang.String)"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.io.AnsiOutputStream",
                            "AnsiOutputStream",
                            "99-120:AnsiOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "print(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "flush()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEncodingUtf8_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "139-162:testEncodingUtf8_test0_decomposed": {
                    "start": 139,
                    "end": 162,
                    "body": [
                        "    public void testEncodingUtf8_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n",
                        "        final AtomicReference<String> newLabel = new AtomicReference<>();\n",
                        "        PrintStream ansi = new PrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n",
                        "                            @Override\n",
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n",
                        "                        },\n",
                        "                        AnsiType.Emulation,\n",
                        "                        AnsiColors.TrueColor,\n",
                        "                        StandardCharsets.UTF_8,\n",
                        "                        null,\n",
                        "                        null,\n",
                        "                        false),\n",
                        "                true,\n",
                        "                \"UTF-8\");\n",
                        "        ansi.print(\"\\033]0;\u3072\u3089\u304c\u306a\\007\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodingUtf8_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayOutputStream",
                            "ByteArrayOutputStream()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "AtomicReference<String>()"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "PrintStream(java.io.OutputStream,boolean,java.lang.String)"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.io.AnsiOutputStream",
                            "AnsiOutputStream",
                            "99-120:AnsiOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "print(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEncodingUtf8_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "111-136:testEncoding8859_test3_decomposed": {
                    "start": 111,
                    "end": 136,
                    "body": [
                        "    public void testEncoding8859_test3_decomposed() throws UnsupportedEncodingException {\n",
                        "        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n",
                        "        final AtomicReference<String> newLabel = new AtomicReference<>();\n",
                        "        PrintStream ansi = new AnsiPrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n",
                        "                            @Override\n",
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n",
                        "                        },\n",
                        "                        AnsiType.Emulation,\n",
                        "                        AnsiColors.TrueColor,\n",
                        "                        StandardCharsets.ISO_8859_1,\n",
                        "                        null,\n",
                        "                        null,\n",
                        "                        false),\n",
                        "                true,\n",
                        "                \"ISO-8859-1\");\n",
                        "        ansi.print(\"\\033]0;un bon caf\u00e9\\007\");\n",
                        "        ansi.flush();\n",
                        "        assertEquals(\"un bon caf\u00e9\", newLabel.get());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncoding8859_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayOutputStream",
                            "ByteArrayOutputStream()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "AtomicReference<String>()"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.AnsiPrintStream",
                            "AnsiPrintStream",
                            "30-32:AnsiPrintStream"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.io.AnsiOutputStream",
                            "AnsiOutputStream",
                            "99-120:AnsiOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "print(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "flush()"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "get()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEncoding8859_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "84-108:testEncoding8859_test2_decomposed": {
                    "start": 84,
                    "end": 108,
                    "body": [
                        "    public void testEncoding8859_test2_decomposed() throws UnsupportedEncodingException {\n",
                        "        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n",
                        "        final AtomicReference<String> newLabel = new AtomicReference<>();\n",
                        "        PrintStream ansi = new AnsiPrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n",
                        "                            @Override\n",
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n",
                        "                        },\n",
                        "                        AnsiType.Emulation,\n",
                        "                        AnsiColors.TrueColor,\n",
                        "                        StandardCharsets.ISO_8859_1,\n",
                        "                        null,\n",
                        "                        null,\n",
                        "                        false),\n",
                        "                true,\n",
                        "                \"ISO-8859-1\");\n",
                        "        ansi.print(\"\\033]0;un bon caf\u00e9\\007\");\n",
                        "        ansi.flush();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncoding8859_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayOutputStream",
                            "ByteArrayOutputStream()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "AtomicReference<String>()"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.AnsiPrintStream",
                            "AnsiPrintStream",
                            "30-32:AnsiPrintStream"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.io.AnsiOutputStream",
                            "AnsiOutputStream",
                            "99-120:AnsiOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "print(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "flush()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEncoding8859_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "58-81:testEncoding8859_test1_decomposed": {
                    "start": 58,
                    "end": 81,
                    "body": [
                        "    public void testEncoding8859_test1_decomposed() throws UnsupportedEncodingException {\n",
                        "        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n",
                        "        final AtomicReference<String> newLabel = new AtomicReference<>();\n",
                        "        PrintStream ansi = new AnsiPrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n",
                        "                            @Override\n",
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n",
                        "                        },\n",
                        "                        AnsiType.Emulation,\n",
                        "                        AnsiColors.TrueColor,\n",
                        "                        StandardCharsets.ISO_8859_1,\n",
                        "                        null,\n",
                        "                        null,\n",
                        "                        false),\n",
                        "                true,\n",
                        "                \"ISO-8859-1\");\n",
                        "        ansi.print(\"\\033]0;un bon caf\u00e9\\007\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncoding8859_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayOutputStream",
                            "ByteArrayOutputStream()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "AtomicReference<String>()"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.AnsiPrintStream",
                            "AnsiPrintStream",
                            "30-32:AnsiPrintStream"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.io.AnsiOutputStream",
                            "AnsiOutputStream",
                            "99-120:AnsiOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "print(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEncoding8859_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "33-55:testEncoding8859_test0_decomposed": {
                    "start": 33,
                    "end": 55,
                    "body": [
                        "    public void testEncoding8859_test0_decomposed() throws UnsupportedEncodingException {\n",
                        "        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n",
                        "        final AtomicReference<String> newLabel = new AtomicReference<>();\n",
                        "        PrintStream ansi = new AnsiPrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n",
                        "                            @Override\n",
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n",
                        "                        },\n",
                        "                        AnsiType.Emulation,\n",
                        "                        AnsiColors.TrueColor,\n",
                        "                        StandardCharsets.ISO_8859_1,\n",
                        "                        null,\n",
                        "                        null,\n",
                        "                        false),\n",
                        "                true,\n",
                        "                \"ISO-8859-1\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncoding8859_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayOutputStream",
                            "ByteArrayOutputStream()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "AtomicReference<String>()"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.AnsiPrintStream",
                            "AnsiPrintStream",
                            "30-32:AnsiPrintStream"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.io.AnsiOutputStream",
                            "AnsiOutputStream",
                            "99-120:AnsiOutputStream"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEncoding8859_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class EncodingTest(unittest.TestCase):\n\n"
        },
        "new AnsiProcessor(...) { ... }": {
            "start": 41,
            "end": 41,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "EncodingTest",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "43-45:processChangeWindowTitle": {
                    "start": 43,
                    "end": 45,
                    "body": [
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "processChangeWindowTitle(String)",
                    "parameters": [
                        "label"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "set"
                        ]
                    ],
                    "is_overload": true
                },
                "68-70:processChangeWindowTitle": {
                    "start": 68,
                    "end": 70,
                    "body": [
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "processChangeWindowTitle(String)",
                    "parameters": [
                        "label"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "set"
                        ]
                    ],
                    "is_overload": true
                },
                "94-96:processChangeWindowTitle": {
                    "start": 94,
                    "end": 96,
                    "body": [
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "processChangeWindowTitle(String)",
                    "parameters": [
                        "label"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "set"
                        ]
                    ],
                    "is_overload": true
                },
                "121-123:processChangeWindowTitle": {
                    "start": 121,
                    "end": 123,
                    "body": [
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "processChangeWindowTitle(String)",
                    "parameters": [
                        "label"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "set"
                        ]
                    ],
                    "is_overload": true
                },
                "149-151:processChangeWindowTitle": {
                    "start": 149,
                    "end": 151,
                    "body": [
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "processChangeWindowTitle(String)",
                    "parameters": [
                        "label"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "set"
                        ]
                    ],
                    "is_overload": true
                },
                "175-177:processChangeWindowTitle": {
                    "start": 175,
                    "end": 177,
                    "body": [
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "processChangeWindowTitle(String)",
                    "parameters": [
                        "label"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "set"
                        ]
                    ],
                    "is_overload": true
                },
                "202-204:processChangeWindowTitle": {
                    "start": 202,
                    "end": 204,
                    "body": [
                        "                            protected void processChangeWindowTitle(String label) {\n",
                        "                                newLabel.set(label);\n",
                        "                            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "processChangeWindowTitle(String)",
                    "parameters": [
                        "label"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "set"
                        ]
                    ],
                    "is_overload": true
                },
                "36-41:": {
                    "start": 36,
                    "end": 41,
                    "body": [
                        "        PrintStream ansi = new AnsiPrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "(OutputStream)",
                    "parameters": [
                        "os"
                    ],
                    "calls": [],
                    "is_overload": true
                },
                "61-66:": {
                    "start": 61,
                    "end": 66,
                    "body": [
                        "        PrintStream ansi = new AnsiPrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "(OutputStream)",
                    "parameters": [
                        "os"
                    ],
                    "calls": [],
                    "is_overload": true
                },
                "87-92:": {
                    "start": 87,
                    "end": 92,
                    "body": [
                        "        PrintStream ansi = new AnsiPrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "(OutputStream)",
                    "parameters": [
                        "os"
                    ],
                    "calls": [],
                    "is_overload": true
                },
                "114-119:": {
                    "start": 114,
                    "end": 119,
                    "body": [
                        "        PrintStream ansi = new AnsiPrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "(OutputStream)",
                    "parameters": [
                        "os"
                    ],
                    "calls": [],
                    "is_overload": true
                },
                "142-147:": {
                    "start": 142,
                    "end": 147,
                    "body": [
                        "        PrintStream ansi = new PrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "(OutputStream)",
                    "parameters": [
                        "os"
                    ],
                    "calls": [],
                    "is_overload": true
                },
                "168-173:": {
                    "start": 168,
                    "end": 173,
                    "body": [
                        "        PrintStream ansi = new PrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "(OutputStream)",
                    "parameters": [
                        "os"
                    ],
                    "calls": [],
                    "is_overload": true
                },
                "195-200:": {
                    "start": 195,
                    "end": 200,
                    "body": [
                        "        PrintStream ansi = new PrintStream(\n",
                        "                new AnsiOutputStream(\n",
                        "                        baos,\n",
                        "                        null,\n",
                        "                        AnsiMode.Default,\n",
                        "                        new AnsiProcessor(baos) {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "(OutputStream)",
                    "parameters": [
                        "os"
                    ],
                    "calls": [],
                    "is_overload": true
                }
            },
            "fields": {}
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import os",
        "import unittest",
        "from src.main.org.fusesource.jansi.AnsiColors import *",
        "from src.main.org.fusesource.jansi.AnsiMode import *",
        "from src.main.org.fusesource.jansi.AnsiPrintStream import *",
        "from src.main.org.fusesource.jansi.AnsiType import *",
        "from src.main.org.fusesource.jansi.io.AnsiOutputStream import *",
        "from src.main.org.fusesource.jansi.io.AnsiProcessor import *"
    ]
}