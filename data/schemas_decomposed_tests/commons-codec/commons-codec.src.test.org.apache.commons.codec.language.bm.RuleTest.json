{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
    "imports": {
        "22-22:import Test": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "20-20:import static Assert.assertEquals": {
            "start": 20,
            "end": 20,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        }
    },
    "classes": {
        "RuleTest": {
            "start": 29,
            "end": 29,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "6150-6275:testSubSequenceWorks_test99_decomposed": {
                    "start": 6150,
                    "end": 6275,
                    "body": [
                        "    public void testSubSequenceWorks_test99_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"bc\", a_b_cd.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"cd\", a_b_cd.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"abc\", a_b_cd.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"bcd\", a_b_cd.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"abcd\", a_b_cd.getPhonemeText().subSequence(0, 4).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test99_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "6023-6147:testSubSequenceWorks_test98_decomposed": {
                    "start": 6023,
                    "end": 6147,
                    "body": [
                        "    public void testSubSequenceWorks_test98_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"bc\", a_b_cd.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"cd\", a_b_cd.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"abc\", a_b_cd.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"bcd\", a_b_cd.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,4);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test98_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "5898-6020:testSubSequenceWorks_test97_decomposed": {
                    "start": 5898,
                    "end": 6020,
                    "body": [
                        "    public void testSubSequenceWorks_test97_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"bc\", a_b_cd.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"cd\", a_b_cd.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"abc\", a_b_cd.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"bcd\", a_b_cd.getPhonemeText().subSequence(1, 4).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test97_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "5774-5895:testSubSequenceWorks_test96_decomposed": {
                    "start": 5774,
                    "end": 5895,
                    "body": [
                        "    public void testSubSequenceWorks_test96_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"bc\", a_b_cd.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"cd\", a_b_cd.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"abc\", a_b_cd.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,4);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test96_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "5652-5771:testSubSequenceWorks_test95_decomposed": {
                    "start": 5652,
                    "end": 5771,
                    "body": [
                        "    public void testSubSequenceWorks_test95_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"bc\", a_b_cd.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"cd\", a_b_cd.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"abc\", a_b_cd.getPhonemeText().subSequence(0, 3).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test95_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "5531-5649:testSubSequenceWorks_test94_decomposed": {
                    "start": 5531,
                    "end": 5649,
                    "body": [
                        "    public void testSubSequenceWorks_test94_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"bc\", a_b_cd.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"cd\", a_b_cd.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,3);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test94_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "5412-5528:testSubSequenceWorks_test93_decomposed": {
                    "start": 5412,
                    "end": 5528,
                    "body": [
                        "    public void testSubSequenceWorks_test93_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"bc\", a_b_cd.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"cd\", a_b_cd.getPhonemeText().subSequence(2, 4).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test93_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "5294-5409:testSubSequenceWorks_test92_decomposed": {
                    "start": 5294,
                    "end": 5409,
                    "body": [
                        "    public void testSubSequenceWorks_test92_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"bc\", a_b_cd.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,4);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test92_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "5178-5291:testSubSequenceWorks_test91_decomposed": {
                    "start": 5178,
                    "end": 5291,
                    "body": [
                        "    public void testSubSequenceWorks_test91_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"bc\", a_b_cd.getPhonemeText().subSequence(1, 3).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test91_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "5063-5175:testSubSequenceWorks_test90_decomposed": {
                    "start": 5063,
                    "end": 5175,
                    "body": [
                        "    public void testSubSequenceWorks_test90_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,3);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test90_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "4950-5060:testSubSequenceWorks_test89_decomposed": {
                    "start": 4950,
                    "end": 5060,
                    "body": [
                        "    public void testSubSequenceWorks_test89_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b_cd.getPhonemeText().subSequence(0, 2).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test89_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "4838-4947:testSubSequenceWorks_test88_decomposed": {
                    "start": 4838,
                    "end": 4947,
                    "body": [
                        "    public void testSubSequenceWorks_test88_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,2);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test88_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "4728-4835:testSubSequenceWorks_test87_decomposed": {
                    "start": 4728,
                    "end": 4835,
                    "body": [
                        "    public void testSubSequenceWorks_test87_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"d\", a_b_cd.getPhonemeText().subSequence(3, 4).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test87_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "4619-4725:testSubSequenceWorks_test86_decomposed": {
                    "start": 4619,
                    "end": 4725,
                    "body": [
                        "    public void testSubSequenceWorks_test86_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(3,4);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test86_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "4512-4616:testSubSequenceWorks_test85_decomposed": {
                    "start": 4512,
                    "end": 4616,
                    "body": [
                        "    public void testSubSequenceWorks_test85_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"c\", a_b_cd.getPhonemeText().subSequence(2, 3).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test85_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "4406-4509:testSubSequenceWorks_test84_decomposed": {
                    "start": 4406,
                    "end": 4509,
                    "body": [
                        "    public void testSubSequenceWorks_test84_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(2,3);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test84_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "4302-4403:testSubSequenceWorks_test83_decomposed": {
                    "start": 4302,
                    "end": 4403,
                    "body": [
                        "    public void testSubSequenceWorks_test83_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b_cd.getPhonemeText().subSequence(1, 2).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test83_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "4199-4299:testSubSequenceWorks_test82_decomposed": {
                    "start": 4199,
                    "end": 4299,
                    "body": [
                        "    public void testSubSequenceWorks_test82_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(1,2);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test82_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "4098-4196:testSubSequenceWorks_test81_decomposed": {
                    "start": 4098,
                    "end": 4196,
                    "body": [
                        "    public void testSubSequenceWorks_test81_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b_cd.getPhonemeText().subSequence(0, 1).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test81_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3998-4095:testSubSequenceWorks_test80_decomposed": {
                    "start": 3998,
                    "end": 4095,
                    "body": [
                        "    public void testSubSequenceWorks_test80_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        a_b_cd.getPhonemeText().subSequence(0,1);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test80_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3900-3995:testSubSequenceWorks_test79_decomposed": {
                    "start": 3900,
                    "end": 3995,
                    "body": [
                        "    public void testSubSequenceWorks_test79_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('d', a_b_cd.getPhonemeText().charAt(3));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test79_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3803-3897:testSubSequenceWorks_test78_decomposed": {
                    "start": 3803,
                    "end": 3897,
                    "body": [
                        "    public void testSubSequenceWorks_test78_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test78_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3707-3800:testSubSequenceWorks_test77_decomposed": {
                    "start": 3707,
                    "end": 3800,
                    "body": [
                        "    public void testSubSequenceWorks_test77_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('c', a_b_cd.getPhonemeText().charAt(2));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test77_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3612-3704:testSubSequenceWorks_test76_decomposed": {
                    "start": 3612,
                    "end": 3704,
                    "body": [
                        "    public void testSubSequenceWorks_test76_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test76_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3518-3609:testSubSequenceWorks_test75_decomposed": {
                    "start": 3518,
                    "end": 3609,
                    "body": [
                        "    public void testSubSequenceWorks_test75_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('b', a_b_cd.getPhonemeText().charAt(1));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test75_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3425-3515:testSubSequenceWorks_test74_decomposed": {
                    "start": 3425,
                    "end": 3515,
                    "body": [
                        "    public void testSubSequenceWorks_test74_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test74_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3333-3422:testSubSequenceWorks_test73_decomposed": {
                    "start": 3333,
                    "end": 3422,
                    "body": [
                        "    public void testSubSequenceWorks_test73_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "        assertEquals('a', a_b_cd.getPhonemeText().charAt(0));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test73_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3242-3330:testSubSequenceWorks_test72_decomposed": {
                    "start": 3242,
                    "end": 3330,
                    "body": [
                        "    public void testSubSequenceWorks_test72_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "        a_b_cd.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test72_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3152-3239:testSubSequenceWorks_test71_decomposed": {
                    "start": 3152,
                    "end": 3239,
                    "body": [
                        "    public void testSubSequenceWorks_test71_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "        final Rule.Phoneme a_b_cd = Rule.Phoneme.Phoneme0(Rule.Phoneme.Phoneme0(a, b), cd);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test71_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "3063-3149:testSubSequenceWorks_test70_decomposed": {
                    "start": 3063,
                    "end": 3149,
                    "body": [
                        "    public void testSubSequenceWorks_test70_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "        assertEquals(\"cdef\", cd_ef.getPhonemeText().subSequence(0, 4).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test70_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2975-3060:testSubSequenceWorks_test69_decomposed": {
                    "start": 2975,
                    "end": 3060,
                    "body": [
                        "    public void testSubSequenceWorks_test69_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,4);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test69_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2889-2972:testSubSequenceWorks_test68_decomposed": {
                    "start": 2889,
                    "end": 2972,
                    "body": [
                        "    public void testSubSequenceWorks_test68_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "        assertEquals(\"def\", cd_ef.getPhonemeText().subSequence(1, 4).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test68_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2804-2886:testSubSequenceWorks_test67_decomposed": {
                    "start": 2804,
                    "end": 2886,
                    "body": [
                        "    public void testSubSequenceWorks_test67_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,4);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test67_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2721-2801:testSubSequenceWorks_test66_decomposed": {
                    "start": 2721,
                    "end": 2801,
                    "body": [
                        "    public void testSubSequenceWorks_test66_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "        assertEquals(\"cde\", cd_ef.getPhonemeText().subSequence(0, 3).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test66_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2639-2718:testSubSequenceWorks_test65_decomposed": {
                    "start": 2639,
                    "end": 2718,
                    "body": [
                        "    public void testSubSequenceWorks_test65_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,3);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test65_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2559-2636:testSubSequenceWorks_test64_decomposed": {
                    "start": 2559,
                    "end": 2636,
                    "body": [
                        "    public void testSubSequenceWorks_test64_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "        assertEquals(\"ef\", cd_ef.getPhonemeText().subSequence(2, 4).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test64_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2480-2556:testSubSequenceWorks_test63_decomposed": {
                    "start": 2480,
                    "end": 2556,
                    "body": [
                        "    public void testSubSequenceWorks_test63_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,4);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test63_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2403-2477:testSubSequenceWorks_test62_decomposed": {
                    "start": 2403,
                    "end": 2477,
                    "body": [
                        "    public void testSubSequenceWorks_test62_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "        assertEquals(\"de\", cd_ef.getPhonemeText().subSequence(1, 3).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test62_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2327-2400:testSubSequenceWorks_test61_decomposed": {
                    "start": 2327,
                    "end": 2400,
                    "body": [
                        "    public void testSubSequenceWorks_test61_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,3);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test61_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2253-2324:testSubSequenceWorks_test60_decomposed": {
                    "start": 2253,
                    "end": 2324,
                    "body": [
                        "    public void testSubSequenceWorks_test60_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"cd\", cd_ef.getPhonemeText().subSequence(0, 2).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test60_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2180-2250:testSubSequenceWorks_test59_decomposed": {
                    "start": 2180,
                    "end": 2250,
                    "body": [
                        "    public void testSubSequenceWorks_test59_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,2);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test59_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2109-2177:testSubSequenceWorks_test58_decomposed": {
                    "start": 2109,
                    "end": 2177,
                    "body": [
                        "    public void testSubSequenceWorks_test58_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "        assertEquals(\"f\", cd_ef.getPhonemeText().subSequence(3, 4).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test58_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "2039-2106:testSubSequenceWorks_test57_decomposed": {
                    "start": 2039,
                    "end": 2106,
                    "body": [
                        "    public void testSubSequenceWorks_test57_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(3,4);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test57_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1971-2036:testSubSequenceWorks_test56_decomposed": {
                    "start": 1971,
                    "end": 2036,
                    "body": [
                        "    public void testSubSequenceWorks_test56_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "        assertEquals(\"e\", cd_ef.getPhonemeText().subSequence(2, 3).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test56_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1904-1968:testSubSequenceWorks_test55_decomposed": {
                    "start": 1904,
                    "end": 1968,
                    "body": [
                        "    public void testSubSequenceWorks_test55_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(2,3);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test55_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1839-1901:testSubSequenceWorks_test54_decomposed": {
                    "start": 1839,
                    "end": 1901,
                    "body": [
                        "    public void testSubSequenceWorks_test54_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"d\", cd_ef.getPhonemeText().subSequence(1, 2).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test54_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1775-1836:testSubSequenceWorks_test53_decomposed": {
                    "start": 1775,
                    "end": 1836,
                    "body": [
                        "    public void testSubSequenceWorks_test53_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(1,2);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test53_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1713-1772:testSubSequenceWorks_test52_decomposed": {
                    "start": 1713,
                    "end": 1772,
                    "body": [
                        "    public void testSubSequenceWorks_test52_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"c\", cd_ef.getPhonemeText().subSequence(0, 1).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test52_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1652-1710:testSubSequenceWorks_test51_decomposed": {
                    "start": 1652,
                    "end": 1710,
                    "body": [
                        "    public void testSubSequenceWorks_test51_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        cd_ef.getPhonemeText().subSequence(0,1);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test51_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1593-1649:testSubSequenceWorks_test50_decomposed": {
                    "start": 1593,
                    "end": 1649,
                    "body": [
                        "    public void testSubSequenceWorks_test50_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('f', cd_ef.getPhonemeText().charAt(3));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test50_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1535-1590:testSubSequenceWorks_test49_decomposed": {
                    "start": 1535,
                    "end": 1590,
                    "body": [
                        "    public void testSubSequenceWorks_test49_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test49_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1478-1532:testSubSequenceWorks_test48_decomposed": {
                    "start": 1478,
                    "end": 1532,
                    "body": [
                        "    public void testSubSequenceWorks_test48_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('e', cd_ef.getPhonemeText().charAt(2));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test48_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1422-1475:testSubSequenceWorks_test47_decomposed": {
                    "start": 1422,
                    "end": 1475,
                    "body": [
                        "    public void testSubSequenceWorks_test47_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test47_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1367-1419:testSubSequenceWorks_test46_decomposed": {
                    "start": 1367,
                    "end": 1419,
                    "body": [
                        "    public void testSubSequenceWorks_test46_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('d', cd_ef.getPhonemeText().charAt(1));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test46_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1313-1364:testSubSequenceWorks_test45_decomposed": {
                    "start": 1313,
                    "end": 1364,
                    "body": [
                        "    public void testSubSequenceWorks_test45_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "        cd_ef.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test45_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1260-1310:testSubSequenceWorks_test44_decomposed": {
                    "start": 1260,
                    "end": 1310,
                    "body": [
                        "    public void testSubSequenceWorks_test44_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "        assertEquals('c', cd_ef.getPhonemeText().charAt(0));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test44_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1208-1257:testSubSequenceWorks_test43_decomposed": {
                    "start": 1208,
                    "end": 1257,
                    "body": [
                        "    public void testSubSequenceWorks_test43_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "        cd_ef.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test43_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1157-1205:testSubSequenceWorks_test42_decomposed": {
                    "start": 1157,
                    "end": 1205,
                    "body": [
                        "    public void testSubSequenceWorks_test42_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "        final Rule.Phoneme cd_ef = Rule.Phoneme.Phoneme0(cd, ef);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test42_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1107-1154:testSubSequenceWorks_test41_decomposed": {
                    "start": 1107,
                    "end": 1154,
                    "body": [
                        "    public void testSubSequenceWorks_test41_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "        assertEquals(\"b\", a_b.getPhonemeText().subSequence(1, 2).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test41_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1058-1104:testSubSequenceWorks_test40_decomposed": {
                    "start": 1058,
                    "end": 1104,
                    "body": [
                        "    public void testSubSequenceWorks_test40_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(1,2);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test40_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "1011-1055:testSubSequenceWorks_test39_decomposed": {
                    "start": 1011,
                    "end": 1055,
                    "body": [
                        "    public void testSubSequenceWorks_test39_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "        assertEquals(\"a\", a_b.getPhonemeText().subSequence(0, 1).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test39_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "965-1008:testSubSequenceWorks_test38_decomposed": {
                    "start": 965,
                    "end": 1008,
                    "body": [
                        "    public void testSubSequenceWorks_test38_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,1);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test38_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "921-962:testSubSequenceWorks_test37_decomposed": {
                    "start": 921,
                    "end": 962,
                    "body": [
                        "    public void testSubSequenceWorks_test37_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "        assertEquals(\"ab\", a_b.getPhonemeText().subSequence(0, 2).toString());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test37_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "toString()"
                        ]
                    ]
                },
                "878-918:testSubSequenceWorks_test36_decomposed": {
                    "start": 878,
                    "end": 918,
                    "body": [
                        "    public void testSubSequenceWorks_test36_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "        a_b.getPhonemeText();\n",
                        "        a_b.getPhonemeText().subSequence(0,2);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test36_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "subSequence(int,int)"
                        ]
                    ]
                },
                "837-875:testSubSequenceWorks_test35_decomposed": {
                    "start": 837,
                    "end": 875,
                    "body": [
                        "    public void testSubSequenceWorks_test35_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('b', a_b.getPhonemeText().charAt(1));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test35_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ]
                    ]
                },
                "797-834:testSubSequenceWorks_test34_decomposed": {
                    "start": 797,
                    "end": 834,
                    "body": [
                        "    public void testSubSequenceWorks_test34_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "        a_b.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test34_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ]
                    ]
                },
                "758-794:testSubSequenceWorks_test33_decomposed": {
                    "start": 758,
                    "end": 794,
                    "body": [
                        "    public void testSubSequenceWorks_test33_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "        assertEquals('a', a_b.getPhonemeText().charAt(0));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test33_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ]
                    ]
                },
                "720-755:testSubSequenceWorks_test32_decomposed": {
                    "start": 720,
                    "end": 755,
                    "body": [
                        "    public void testSubSequenceWorks_test32_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "        a_b.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test32_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ]
                    ]
                },
                "683-717:testSubSequenceWorks_test31_decomposed": {
                    "start": 683,
                    "end": 717,
                    "body": [
                        "    public void testSubSequenceWorks_test31_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "        final Rule.Phoneme a_b = Rule.Phoneme.Phoneme0(a, b);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test31_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "136-138:Phoneme0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ]
                    ]
                },
                "647-680:testSubSequenceWorks_test30_decomposed": {
                    "start": 647,
                    "end": 680,
                    "body": [
                        "    public void testSubSequenceWorks_test30_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "        System.out.println(\"a: \" + a.getPhonemeText());\n",
                        "        System.out.println(\"b: \" + b.getPhonemeText());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test30_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ]
                    ]
                },
                "613-644:testSubSequenceWorks_test29_decomposed": {
                    "start": 613,
                    "end": 644,
                    "body": [
                        "    public void testSubSequenceWorks_test29_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('l', jkl.getPhonemeText().charAt(2));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test29_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "580-610:testSubSequenceWorks_test28_decomposed": {
                    "start": 580,
                    "end": 610,
                    "body": [
                        "    public void testSubSequenceWorks_test28_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "        jkl.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test28_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "548-577:testSubSequenceWorks_test27_decomposed": {
                    "start": 548,
                    "end": 577,
                    "body": [
                        "    public void testSubSequenceWorks_test27_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('k', jkl.getPhonemeText().charAt(1));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test27_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "517-545:testSubSequenceWorks_test26_decomposed": {
                    "start": 517,
                    "end": 545,
                    "body": [
                        "    public void testSubSequenceWorks_test26_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "        jkl.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test26_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "487-514:testSubSequenceWorks_test25_decomposed": {
                    "start": 487,
                    "end": 514,
                    "body": [
                        "    public void testSubSequenceWorks_test25_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "        assertEquals('j', jkl.getPhonemeText().charAt(0));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test25_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "458-484:testSubSequenceWorks_test24_decomposed": {
                    "start": 458,
                    "end": 484,
                    "body": [
                        "    public void testSubSequenceWorks_test24_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "        jkl.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test24_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "430-455:testSubSequenceWorks_test23_decomposed": {
                    "start": 430,
                    "end": 455,
                    "body": [
                        "    public void testSubSequenceWorks_test23_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('i', ghi.getPhonemeText().charAt(2));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test23_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "403-427:testSubSequenceWorks_test22_decomposed": {
                    "start": 403,
                    "end": 427,
                    "body": [
                        "    public void testSubSequenceWorks_test22_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test22_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "377-400:testSubSequenceWorks_test21_decomposed": {
                    "start": 377,
                    "end": 400,
                    "body": [
                        "    public void testSubSequenceWorks_test21_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('h', ghi.getPhonemeText().charAt(1));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test21_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "352-374:testSubSequenceWorks_test20_decomposed": {
                    "start": 352,
                    "end": 374,
                    "body": [
                        "    public void testSubSequenceWorks_test20_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "        ghi.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test20_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "328-349:testSubSequenceWorks_test19_decomposed": {
                    "start": 328,
                    "end": 349,
                    "body": [
                        "    public void testSubSequenceWorks_test19_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "        assertEquals('g', ghi.getPhonemeText().charAt(0));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test19_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "305-325:testSubSequenceWorks_test18_decomposed": {
                    "start": 305,
                    "end": 325,
                    "body": [
                        "    public void testSubSequenceWorks_test18_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "        ghi.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test18_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "283-302:testSubSequenceWorks_test17_decomposed": {
                    "start": 283,
                    "end": 302,
                    "body": [
                        "    public void testSubSequenceWorks_test17_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('f', ef.getPhonemeText().charAt(1));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test17_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "262-280:testSubSequenceWorks_test16_decomposed": {
                    "start": 262,
                    "end": 280,
                    "body": [
                        "    public void testSubSequenceWorks_test16_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "        ef.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test16_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "242-259:testSubSequenceWorks_test15_decomposed": {
                    "start": 242,
                    "end": 259,
                    "body": [
                        "    public void testSubSequenceWorks_test15_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "        assertEquals('e', ef.getPhonemeText().charAt(0));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test15_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "223-239:testSubSequenceWorks_test14_decomposed": {
                    "start": 223,
                    "end": 239,
                    "body": [
                        "    public void testSubSequenceWorks_test14_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "        ef.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test14_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "205-220:testSubSequenceWorks_test13_decomposed": {
                    "start": 205,
                    "end": 220,
                    "body": [
                        "    public void testSubSequenceWorks_test13_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('d', cd.getPhonemeText().charAt(1));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test13_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "188-202:testSubSequenceWorks_test12_decomposed": {
                    "start": 188,
                    "end": 202,
                    "body": [
                        "    public void testSubSequenceWorks_test12_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test12_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "172-185:testSubSequenceWorks_test11_decomposed": {
                    "start": 172,
                    "end": 185,
                    "body": [
                        "    public void testSubSequenceWorks_test11_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "        assertEquals('c', cd.getPhonemeText().charAt(0));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "157-169:testSubSequenceWorks_test10_decomposed": {
                    "start": 157,
                    "end": 169,
                    "body": [
                        "    public void testSubSequenceWorks_test10_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "        cd.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "143-154:testSubSequenceWorks_test9_decomposed": {
                    "start": 143,
                    "end": 154,
                    "body": [
                        "    public void testSubSequenceWorks_test9_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "        assertEquals('b', b.getPhonemeText().charAt(0));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "130-140:testSubSequenceWorks_test8_decomposed": {
                    "start": 130,
                    "end": 140,
                    "body": [
                        "    public void testSubSequenceWorks_test8_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "        b.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "118-127:testSubSequenceWorks_test7_decomposed": {
                    "start": 118,
                    "end": 127,
                    "body": [
                        "    public void testSubSequenceWorks_test7_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "        assertEquals('a', a.getPhonemeText().charAt(0));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/CharSequence",
                            "charAt(int)"
                        ]
                    ]
                },
                "107-115:testSubSequenceWorks_test6_decomposed": {
                    "start": 107,
                    "end": 115,
                    "body": [
                        "    public void testSubSequenceWorks_test6_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "        a.getPhonemeText();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ]
                    ]
                },
                "97-104:testSubSequenceWorks_test5_decomposed": {
                    "start": 97,
                    "end": 104,
                    "body": [
                        "    public void testSubSequenceWorks_test5_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "        final Rule.Phoneme jkl = new Rule.Phoneme(2, \"jkl\", null, null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ]
                    ]
                },
                "88-94:testSubSequenceWorks_test4_decomposed": {
                    "start": 88,
                    "end": 94,
                    "body": [
                        "    public void testSubSequenceWorks_test4_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "        final Rule.Phoneme ghi = new Rule.Phoneme(2, \"ghi\", null, null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ]
                    ]
                },
                "80-85:testSubSequenceWorks_test3_decomposed": {
                    "start": 80,
                    "end": 85,
                    "body": [
                        "    public void testSubSequenceWorks_test3_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "        final Rule.Phoneme ef = new Rule.Phoneme(2, \"ef\", null, null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ]
                    ]
                },
                "73-77:testSubSequenceWorks_test2_decomposed": {
                    "start": 73,
                    "end": 77,
                    "body": [
                        "    public void testSubSequenceWorks_test2_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "        final Rule.Phoneme cd = new Rule.Phoneme(2, \"cd\", null, null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ]
                    ]
                },
                "67-70:testSubSequenceWorks_test1_decomposed": {
                    "start": 67,
                    "end": 70,
                    "body": [
                        "    public void testSubSequenceWorks_test1_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "        final Rule.Phoneme b = new Rule.Phoneme(2, \"b\", null, null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ]
                    ]
                },
                "62-64:testSubSequenceWorks_test0_decomposed": {
                    "start": 62,
                    "end": 64,
                    "body": [
                        "    public void testSubSequenceWorks_test0_decomposed()  {\n",
                        "        final Rule.Phoneme a = new Rule.Phoneme(2, \"a\", null, null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSubSequenceWorks_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ]
                    ]
                },
                "50-59:testPhonemeComparedToSelfIsZero_test0_decomposed": {
                    "start": 50,
                    "end": 59,
                    "body": [
                        "    public void testPhonemeComparedToSelfIsZero_test0_decomposed()  {\n",
                        "        for (final Rule.Phoneme[] phs : makePhonemes()) {\n",
                        "            for (final Rule.Phoneme ph : phs) {\n",
                        "                assertEquals(\n",
                        "                        \"Phoneme compared to itself should be zero: \" + ph.getPhonemeText(),\n",
                        "                        0,\n",
                        "                        Rule.Phoneme.COMPARATOR.compare(ph, ph));\n",
                        "            }\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testPhonemeComparedToSelfIsZero_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.language.bm.RuleTest",
                            "RuleTest",
                            "31-47:makePhonemes"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Comparator",
                            "compare(org.apache.commons.codec.language.bm.Rule.Phoneme,org.apache.commons.codec.language.bm.Rule.Phoneme)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "161-163:getPhonemeText"
                        ]
                    ]
                },
                "31-47:makePhonemes": {
                    "start": 31,
                    "end": 47,
                    "body": [
                        "    private Rule.Phoneme[][] makePhonemes() {\n",
                        "        final String[][] words = {\n",
                        "            {\"rinD\", \"rinDlt\", \"rina\", \"rinalt\", \"rino\", \"rinolt\", \"rinu\", \"rinult\"},\n",
                        "            {\"dortlaj\", \"dortlej\", \"ortlaj\", \"ortlej\", \"ortlej-dortlaj\"}\n",
                        "        };\n",
                        "        final Rule.Phoneme[][] phonemes = new Rule.Phoneme[words.length][];\n",
                        "\n",
                        "        for (int i = 0; i < words.length; i++) {\n",
                        "            final String[] words_i = words[i];\n",
                        "            final Rule.Phoneme[] phonemes_i = phonemes[i] = new Rule.Phoneme[words_i.length];\n",
                        "            for (int j = 0; j < words_i.length; j++) {\n",
                        "                phonemes_i[j] = new Rule.Phoneme(2, words_i[j], Languages.NO_LANGUAGES, null);\n",
                        "            }\n",
                        "        }\n",
                        "\n",
                        "        return phonemes;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "Phoneme[][]",
                            "Phoneme[][]"
                        ]
                    ],
                    "signature": "makePhonemes()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.bm.Rule",
                            "Phoneme",
                            "117-134:Phoneme"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}