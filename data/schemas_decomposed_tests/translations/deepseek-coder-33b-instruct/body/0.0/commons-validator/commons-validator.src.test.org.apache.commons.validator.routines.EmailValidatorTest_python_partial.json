{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-validator/src/test/java/org/apache/commons/validator/routines/EmailValidatorTest.java",
    "imports": {
        "27-27:import List": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "26-26:import ArrayList": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.util.ArrayList;\n"
            ]
        },
        "24-24:import Test": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "21-21:import ResultPair": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.validator.ResultPair;\n"
            ]
        },
        "23-23:import Ignore": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.junit.Ignore;\n"
            ]
        },
        "22-22:import Before": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.junit.Before;\n"
            ]
        },
        "19-19:import static Assert.*": {
            "start": 19,
            "end": 19,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "EmailValidatorTest": {
            "start": 34,
            "end": 34,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "579-588:testValidator473_4_test3_decomposed": {
                    "start": 579,
                    "end": 588,
                    "body": [
                        "    public void testValidator473_4_test3_decomposed()  {\n",
                        "        assertFalse(validator.isValidDomain(\"test.local\"));\n",
                        "        List<DomainValidator.Item> items = new ArrayList<>();\n",
                        "        items.add(\n",
                        "                new DomainValidator.Item(\n",
                        "                        DomainValidator.ArrayType.GENERIC_PLUS, new String[] {\"local\"}));\n",
                        "        EmailValidator val =\n",
                        "                new EmailValidator(0, true, false, DomainValidator.getInstance2(true, items));\n",
                        "        assertTrue(val.isValidDomain(\"test.local\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator473_4_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<Item>()"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "123-144:EmailValidator"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DomainValidator",
                            "DomainValidator",
                            "134-137:getInstance2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "200-213:isValidDomain"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(org.apache.commons.validator.routines.DomainValidator.Item)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DomainValidator",
                            "Item",
                            "1967-1970:Item"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator473_4_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "568-576:testValidator473_4_test2_decomposed": {
                    "start": 568,
                    "end": 576,
                    "body": [
                        "    public void testValidator473_4_test2_decomposed()  {\n",
                        "        assertFalse(validator.isValidDomain(\"test.local\"));\n",
                        "        List<DomainValidator.Item> items = new ArrayList<>();\n",
                        "        items.add(\n",
                        "                new DomainValidator.Item(\n",
                        "                        DomainValidator.ArrayType.GENERIC_PLUS, new String[] {\"local\"}));\n",
                        "        EmailValidator val =\n",
                        "                new EmailValidator(0, true, false, DomainValidator.getInstance2(true, items));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator473_4_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<Item>()"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "123-144:EmailValidator"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DomainValidator",
                            "DomainValidator",
                            "134-137:getInstance2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "200-213:isValidDomain"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(org.apache.commons.validator.routines.DomainValidator.Item)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DomainValidator",
                            "Item",
                            "1967-1970:Item"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator473_4_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "559-565:testValidator473_4_test1_decomposed": {
                    "start": 559,
                    "end": 565,
                    "body": [
                        "    public void testValidator473_4_test1_decomposed()  {\n",
                        "        assertFalse(validator.isValidDomain(\"test.local\"));\n",
                        "        List<DomainValidator.Item> items = new ArrayList<>();\n",
                        "        items.add(\n",
                        "                new DomainValidator.Item(\n",
                        "                        DomainValidator.ArrayType.GENERIC_PLUS, new String[] {\"local\"}));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator473_4_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<Item>()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "200-213:isValidDomain"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "add(org.apache.commons.validator.routines.DomainValidator.Item)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DomainValidator",
                            "Item",
                            "1967-1970:Item"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator473_4_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "554-556:testValidator473_4_test0_decomposed": {
                    "start": 554,
                    "end": 556,
                    "body": [
                        "    public void testValidator473_4_test0_decomposed()  {\n",
                        "        assertFalse(validator.isValidDomain(\"test.local\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator473_4_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "200-213:isValidDomain"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator473_4_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "548-551:testValidator473_3_test0_decomposed": {
                    "start": 548,
                    "end": 551,
                    "body": [
                        "    public void testValidator473_3_test0_decomposed()  {\n",
                        "        List<DomainValidator.Item> items = new ArrayList<>();\n",
                        "        new EmailValidator(0, true, false, DomainValidator.getInstance2(false, items));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = IllegalArgumentException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator473_3_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<Item>()"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "123-144:EmailValidator"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DomainValidator",
                            "DomainValidator",
                            "134-137:getInstance2"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator473_3_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "542-545:testValidator473_2_test0_decomposed": {
                    "start": 542,
                    "end": 545,
                    "body": [
                        "    public void testValidator473_2_test0_decomposed()  {\n",
                        "        List<DomainValidator.Item> items = new ArrayList<>();\n",
                        "        new EmailValidator(0, false, false, DomainValidator.getInstance2(true, items));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = IllegalArgumentException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator473_2_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<Item>()"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "123-144:EmailValidator"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.DomainValidator",
                            "DomainValidator",
                            "134-137:getInstance2"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator473_2_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "537-539:testValidator473_1_test0_decomposed": {
                    "start": 537,
                    "end": 539,
                    "body": [
                        "    public void testValidator473_1_test0_decomposed()  {\n",
                        "        new EmailValidator(0, false, false, null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = IllegalArgumentException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator473_1_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "123-144:EmailValidator"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator473_1_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "532-534:testValidator374_test0_decomposed": {
                    "start": 532,
                    "end": 534,
                    "body": [
                        "    public void testValidator374_test0_decomposed()  {\n",
                        "        assertTrue(validator.isValid(\"abc@school.school\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator374_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator374_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "526-529:testValidator359_test1_decomposed": {
                    "start": 526,
                    "end": 529,
                    "body": [
                        "    public void testValidator359_test1_decomposed()  {\n",
                        "        EmailValidator val = EmailValidator.getInstance1(false, true);\n",
                        "        assertFalse(val.isValid(\"test@.com\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator359_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "88-102:getInstance1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator359_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "521-523:testValidator359_test0_decomposed": {
                    "start": 521,
                    "end": 523,
                    "body": [
                        "    public void testValidator359_test0_decomposed()  {\n",
                        "        EmailValidator val = EmailValidator.getInstance1(false, true);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator359_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "88-102:getInstance1"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator359_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "515-518:testEmailAtTLD_test1_decomposed": {
                    "start": 515,
                    "end": 518,
                    "body": [
                        "    public void testEmailAtTLD_test1_decomposed()  {\n",
                        "        EmailValidator val = EmailValidator.getInstance1(false, true);\n",
                        "        assertTrue(val.isValid(\"test@com\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailAtTLD_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "88-102:getInstance1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailAtTLD_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "510-512:testEmailAtTLD_test0_decomposed": {
                    "start": 510,
                    "end": 512,
                    "body": [
                        "    public void testEmailAtTLD_test0_decomposed()  {\n",
                        "        EmailValidator val = EmailValidator.getInstance1(false, true);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailAtTLD_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "88-102:getInstance1"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailAtTLD_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "481-507:testValidator365_test0_decomposed": {
                    "start": 481,
                    "end": 507,
                    "body": [
                        "    public void testValidator365_test0_decomposed()  {\n",
                        "        assertFalse(\n",
                        "                validator.isValid(\n",
                        "                        \"Loremipsumdolorsitametconsecteturadipiscingelit.Nullavitaeligulamattisrhoncusnuncegestasmattisleo.\"\n",
                        "                            + \"Donecnonsapieninmagnatristiquedictumaacturpis.Fusceorciduifacilisisutsapieneuconsequatpharetralectus.\"\n",
                        "                            + \"Quisqueenimestpulvinarutquamvitaeportamattisex.Nullamquismaurisplaceratconvallisjustoquisportamauris.\"\n",
                        "                            + \"Innullalacusconvalliseufringillautvenenatissitametdiam.Maecenasluctusligulascelerisquepulvinarfeugiat.\"\n",
                        "                            + \"Sedmolestienullaaliquetorciluctusidpharetranislfinibus.Suspendissemalesuadatinciduntduisitametportaarcusollicitudinnec.\"\n",
                        "                            + \"Donecetmassamagna.Curabitururnadiampretiumveldignissimporttitorfringillaeuneque.\"\n",
                        "                            + \"Duisantetelluspharetraidtinciduntinterdummolestiesitametfelis.Utquisquamsitametantesagittisdapibusacnonodio.\"\n",
                        "                            + \"Namrutrummolestiediamidmattis.Cumsociisnatoquepenatibusetmagnisdisparturientmontesnasceturridiculusmus.\"\n",
                        "                            + \"Morbiposueresedmetusacconsectetur.Etiamquisipsumvitaejustotempusmaximus.Sedultriciesplaceratvolutpat.\"\n",
                        "                            + \"Integerlacuslectusmaximusacornarequissagittissitametjusto.\"\n",
                        "                            + \"Cumsociisnatoquepenatibusetmagnisdisparturientmontesnasceturridiculusmus.Maecenasindictumpurussedrutrumex.Nullafacilisi.\"\n",
                        "                            + \"Integerfinibusfinibusmietpharetranislfaucibusvel.Maecenasegetdolorlacinialobortisjustovelullamcorpersem.\"\n",
                        "                            + \"Vivamusaliquetpurusidvariusornaresapienrisusrutrumnisitinciduntmollissemnequeidmetus.\"\n",
                        "                            + \"Etiamquiseleifendpurus.Nuncfelisnuncscelerisqueiddignissimnecfinibusalibero.\"\n",
                        "                            + \"Nuncsemperenimnequesitamethendreritpurusfacilisisac.Maurisdapibussemperfelisdignissimgravida.\"\n",
                        "                            + \"Aeneanultricesblanditnequealiquamfinibusodioscelerisqueac.Aliquamnecmassaeumaurisfaucibusfringilla.\"\n",
                        "                            + \"Etiamconsequatligulanisisitametaliquamnibhtemporquis.Nuncinterdumdignissimnullaatsodalesarcusagittiseu.\"\n",
                        "                            + \"Proinpharetrametusneclacuspulvinarsedvolutpatliberoornare.Sedligulanislpulvinarnonlectuseublanditfacilisisante.\"\n",
                        "                            + \"Sedmollisnislalacusauctorsuscipit.Inhachabitasseplateadictumst.Phasellussitametvelittemporvenenatisfeliseuegestasrisus.\"\n",
                        "                            + \"Aliquameteratsitametnibhcommodofinibus.Morbiefficiturodiovelpulvinariaculis.\"\n",
                        "                            + \"Aeneantemporipsummassaaconsecteturturpisfaucibusultrices.Praesentsodalesmaurisquisportafermentum.\"\n",
                        "                            + \"Etiamnisinislvenenatisvelauctorutullamcorperinjusto.Proinvelligulaerat.Phasellusvestibulumgravidamassanonfeugiat.\"\n",
                        "                            + \"Maecenaspharetraeuismodmetusegetefficitur.Suspendisseamet@gmail.com\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator365_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator365_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "472-478:testValidator293_test0_decomposed": {
                    "start": 472,
                    "end": 478,
                    "body": [
                        "    public void testValidator293_test0_decomposed()  {\n",
                        "        assertTrue(validator.isValid(\"abc-@abc.com\"));\n",
                        "        assertTrue(validator.isValid(\"abc_@abc.com\"));\n",
                        "        assertTrue(validator.isValid(\"abc-def@abc.com\"));\n",
                        "        assertTrue(validator.isValid(\"abc_def@abc.com\"));\n",
                        "        assertFalse(validator.isValid(\"abc@abc_def.com\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator293_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator293_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "457-469:testEmailFromPerl_test0_decomposed": {
                    "start": 457,
                    "end": 469,
                    "body": [
                        "    public void testEmailFromPerl_test0_decomposed()  {\n",
                        "        int errors = 0;\n",
                        "        for (int index = 0; index < testEmailFromPerl.length; index++) {\n",
                        "            String item = testEmailFromPerl[index].item;\n",
                        "            boolean exp = testEmailFromPerl[index].valid;\n",
                        "            boolean act = validator.isValid(item);\n",
                        "            if (act != exp) {\n",
                        "                System.out.printf(\"%s: expected %s actual %s%n\", item, exp, act);\n",
                        "                errors += 1;\n",
                        "            }\n",
                        "        }\n",
                        "        assertEquals(\"Expected 0 errors\", 0, errors);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Ignore(\"VALIDATOR-267\")",
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailFromPerl_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "printf(java.lang.String,java.lang.Object[])"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,long,long)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailFromPerl_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "387-453:testEmailUserName_test0_decomposed": {
                    "start": 387,
                    "end": 453,
                    "body": [
                        "    public void testEmailUserName_test0_decomposed()  {\n",
                        "        assertTrue(validator.isValid(\"joe1blow@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe$blow@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe-@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe_@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe+@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe!@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe*@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe'@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe%45@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe?@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe&@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe=@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"+joe@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"!joe@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"*joe@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"'joe@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"%joe45@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"?joe@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"&joe@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"=joe@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"+@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"!@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"*@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"'@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"%@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"?@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"&@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"=@apache.org\"));\n",
                        "        assertFalse(validator.isValid(\"joe.@apache.org\"));\n",
                        "        assertFalse(validator.isValid(\".joe@apache.org\"));\n",
                        "        assertFalse(validator.isValid(\".@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"joe.ok@apache.org\"));\n",
                        "        assertFalse(validator.isValid(\"joe..ok@apache.org\"));\n",
                        "        assertFalse(validator.isValid(\"..@apache.org\"));\n",
                        "        assertFalse(validator.isValid(\"joe(@apache.org\"));\n",
                        "        assertFalse(validator.isValid(\"joe)@apache.org\"));\n",
                        "        assertFalse(validator.isValid(\"joe,@apache.org\"));\n",
                        "        assertFalse(validator.isValid(\"joe;@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe.\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\".joe\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe+\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe@\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe!\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe*\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe'\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe(\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe)\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe,\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe%45\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe;\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe?\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe&\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joe=\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"..\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\"john\\\\\\\"doe\\\"@apache.org\"));\n",
                        "        assertTrue(\n",
                        "                validator.isValid(\n",
                        "                        \"john56789.john56789.john56789.john56789.john56789.john56789.john@example.com\"));\n",
                        "        assertFalse(\n",
                        "                validator.isValid(\n",
                        "                        \"john56789.john56789.john56789.john56789.john56789.john56789.john5@example.com\"));\n",
                        "        assertTrue(validator.isValid(\"\\\\>escape\\\\\\\\special\\\\^characters\\\\<@example.com\"));\n",
                        "        assertTrue(validator.isValid(\"Abc\\\\@def@example.com\"));\n",
                        "        assertFalse(validator.isValid(\"Abc@def@example.com\"));\n",
                        "        assertTrue(validator.isValid(\"space\\\\ monkey@example.com\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailUserName_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailUserName_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "380-384:testEmailWithSlashes_test0_decomposed": {
                    "start": 380,
                    "end": 384,
                    "body": [
                        "    public void testEmailWithSlashes_test0_decomposed()  {\n",
                        "        assertTrue(\"/ and ! valid in username\", validator.isValid(\"joe!/blow@apache.org\"));\n",
                        "        assertFalse(\"/ not valid in domain\", validator.isValid(\"joe@ap/ache.org\"));\n",
                        "        assertFalse(\"! not valid in domain\", validator.isValid(\"joe@apac!he.org\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailWithSlashes_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailWithSlashes_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "365-377:testEmailLocalhost_test2_decomposed": {
                    "start": 365,
                    "end": 377,
                    "body": [
                        "    public void testEmailLocalhost_test2_decomposed()  {\n",
                        "        EmailValidator noLocal = EmailValidator.getInstance2(false);\n",
                        "        EmailValidator allowLocal = EmailValidator.getInstance2(true);\n",
                        "        assertEquals(validator, noLocal);\n",
                        "        assertTrue(\n",
                        "                \"@localhost.localdomain should be accepted but wasn't\",\n",
                        "                allowLocal.isValid(\"joe@localhost.localdomain\"));\n",
                        "        assertTrue(\"@localhost should be accepted but wasn't\", allowLocal.isValid(\"joe@localhost\"));\n",
                        "        assertFalse(\n",
                        "                \"@localhost.localdomain should be accepted but wasn't\",\n",
                        "                noLocal.isValid(\"joe@localhost.localdomain\"));\n",
                        "        assertFalse(\"@localhost should be accepted but wasn't\", noLocal.isValid(\"joe@localhost\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailLocalhost_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "110-112:getInstance2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailLocalhost_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "355-362:testEmailLocalhost_test1_decomposed": {
                    "start": 355,
                    "end": 362,
                    "body": [
                        "    public void testEmailLocalhost_test1_decomposed()  {\n",
                        "        EmailValidator noLocal = EmailValidator.getInstance2(false);\n",
                        "        EmailValidator allowLocal = EmailValidator.getInstance2(true);\n",
                        "        assertEquals(validator, noLocal);\n",
                        "        assertTrue(\n",
                        "                \"@localhost.localdomain should be accepted but wasn't\",\n",
                        "                allowLocal.isValid(\"joe@localhost.localdomain\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailLocalhost_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "110-112:getInstance2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailLocalhost_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "349-352:testEmailLocalhost_test0_decomposed": {
                    "start": 349,
                    "end": 352,
                    "body": [
                        "    public void testEmailLocalhost_test0_decomposed()  {\n",
                        "        EmailValidator noLocal = EmailValidator.getInstance2(false);\n",
                        "        EmailValidator allowLocal = EmailValidator.getInstance2(true);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailLocalhost_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "110-112:getInstance2"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailLocalhost_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "337-346:testEmailWithControlChars_test0_decomposed": {
                    "start": 337,
                    "end": 346,
                    "body": [
                        "    public void testEmailWithControlChars_test0_decomposed()  {\n",
                        "        for (char c = 0; c < 32; c++) {\n",
                        "            assertFalse(\n",
                        "                    \"Test control char \" + ((int) c),\n",
                        "                    validator.isValid(\"foo\" + c + \"bar@domain.com\"));\n",
                        "        }\n",
                        "        assertFalse(\n",
                        "                \"Test control char 127\",\n",
                        "                validator.isValid(\"foo\" + ((char) 127) + \"bar@domain.com\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailWithControlChars_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailWithControlChars_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "324-334:testEmailWithSpaces_test0_decomposed": {
                    "start": 324,
                    "end": 334,
                    "body": [
                        "    public void testEmailWithSpaces_test0_decomposed()  {\n",
                        "        assertFalse(validator.isValid(\"joeblow @apache.org\"));\n",
                        "        assertFalse(validator.isValid(\"joeblow@ apache.org\"));\n",
                        "        assertFalse(validator.isValid(\" joeblow@apache.org\"));\n",
                        "        assertFalse(validator.isValid(\"joeblow@apache.org \"));\n",
                        "        assertFalse(validator.isValid(\"joe blow@apache.org \"));\n",
                        "        assertFalse(validator.isValid(\"joeblow@apa che.org \"));\n",
                        "        assertTrue(validator.isValid(\"\\\"joeblow \\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\" joeblow\\\"@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"\\\" joe blow \\\"@apache.org\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailWithSpaces_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailWithSpaces_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "317-321:testEmailWithCommas_test0_decomposed": {
                    "start": 317,
                    "end": 321,
                    "body": [
                        "    public void testEmailWithCommas_test0_decomposed()  {\n",
                        "        assertFalse(validator.isValid(\"joeblow@apa,che.org\"));\n",
                        "        assertFalse(validator.isValid(\"joeblow@apache.o,rg\"));\n",
                        "        assertFalse(validator.isValid(\"joeblow@apache,org\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailWithCommas_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailWithCommas_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "296-314:testValidator235_test2_decomposed": {
                    "start": 296,
                    "end": 314,
                    "body": [
                        "    public void testValidator235_test2_decomposed()  {\n",
                        "        String version = System.getProperty(\"java.version\");\n",
                        "        if (version.compareTo(\"1.6\") < 0) {\n",
                        "            System.out.println(\"Cannot run Unicode IDN tests\");\n",
                        "            return; // Cannot run the test\n",
                        "        }\n",
                        "        assertTrue(\n",
                        "                \"xn--d1abbgf6aiiy.xn--p1ai should validate\",\n",
                        "                validator.isValid(\"someone@xn--d1abbgf6aiiy.xn--p1ai\"));\n",
                        "        assertTrue(\"\u043f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442.\u0440\u0444 should validate\", validator.isValid(\"someone@\u043f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442.\u0440\u0444\"));\n",
                        "        assertTrue(\n",
                        "                \"www.b\\u00fccher.ch should validate\",\n",
                        "                validator.isValid(\"someone@www.b\\u00fccher.ch\"));\n",
                        "        assertFalse(\"www.\\uFFFD.ch FFFD should fail\", validator.isValid(\"someone@www.\\uFFFD.ch\"));\n",
                        "        assertTrue(\n",
                        "                \"www.b\\u00fccher.ch should validate\",\n",
                        "                validator.isValid(\"someone@www.b\\u00fccher.ch\"));\n",
                        "        assertFalse(\"www.\\uFFFD.ch FFFD should fail\", validator.isValid(\"someone@www.\\uFFFD.ch\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator235_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/System",
                            "getProperty(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "compareTo(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator235_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "284-293:testValidator235_test1_decomposed": {
                    "start": 284,
                    "end": 293,
                    "body": [
                        "    public void testValidator235_test1_decomposed()  {\n",
                        "        String version = System.getProperty(\"java.version\");\n",
                        "        if (version.compareTo(\"1.6\") < 0) {\n",
                        "            System.out.println(\"Cannot run Unicode IDN tests\");\n",
                        "            return; // Cannot run the test\n",
                        "        }\n",
                        "        assertTrue(\n",
                        "                \"xn--d1abbgf6aiiy.xn--p1ai should validate\",\n",
                        "                validator.isValid(\"someone@xn--d1abbgf6aiiy.xn--p1ai\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator235_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/System",
                            "getProperty(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "compareTo(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator235_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "279-281:testValidator235_test0_decomposed": {
                    "start": 279,
                    "end": 281,
                    "body": [
                        "    public void testValidator235_test0_decomposed()  {\n",
                        "        String version = System.getProperty(\"java.version\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testValidator235_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/System",
                            "getProperty(java.lang.String)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testValidator235_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "273-276:testVALIDATOR_278_test0_decomposed": {
                    "start": 273,
                    "end": 276,
                    "body": [
                        "    public void testVALIDATOR_278_test0_decomposed()  {\n",
                        "        assertFalse(validator.isValid(\"someone@-test.com\"));\n",
                        "        assertFalse(validator.isValid(\"someone@test-.com\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVALIDATOR_278_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVALIDATOR_278_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "266-270:testVALIDATOR_315_test0_decomposed": {
                    "start": 266,
                    "end": 270,
                    "body": [
                        "    public void testVALIDATOR_315_test0_decomposed()  {\n",
                        "        assertFalse(validator.isValid(\"me@at&t.net\"));\n",
                        "        assertTrue(\n",
                        "                validator.isValid(\"me@att.net\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testVALIDATOR_315_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testVALIDATOR_315_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "255-263:testEmailWithBogusCharacter_test0_decomposed": {
                    "start": 255,
                    "end": 263,
                    "body": [
                        "    public void testEmailWithBogusCharacter_test0_decomposed()  {\n",
                        "        assertFalse(validator.isValid(\"andy.noble@\\u008fdata-workshop.com\"));\n",
                        "        assertTrue(validator.isValid(\"andy.o'reilly@data-workshop.com\"));\n",
                        "        assertFalse(validator.isValid(\"andy@o'reilly.data-workshop.com\"));\n",
                        "        assertTrue(validator.isValid(\"foo+bar@i.am.not.in.us.example.com\"));\n",
                        "        assertFalse(validator.isValid(\"foo+bar@example+3.com\"));\n",
                        "        assertFalse(validator.isValid(\"test@%*.com\"));\n",
                        "        assertFalse(validator.isValid(\"test@^&#.com\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailWithBogusCharacter_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailWithBogusCharacter_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "250-252:testEmailWithDotEnd_test0_decomposed": {
                    "start": 250,
                    "end": 252,
                    "body": [
                        "    public void testEmailWithDotEnd_test0_decomposed()  {\n",
                        "        assertFalse(validator.isValid(\"andy.noble@data-workshop.com.\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailWithDotEnd_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailWithDotEnd_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "242-247:testEmailWithDash_test0_decomposed": {
                    "start": 242,
                    "end": 247,
                    "body": [
                        "    public void testEmailWithDash_test0_decomposed()  {\n",
                        "        assertTrue(validator.isValid(\"andy.noble@data-workshop.com\"));\n",
                        "        assertFalse(validator.isValid(\"andy-noble@data-workshop.-com\"));\n",
                        "        assertFalse(validator.isValid(\"andy-noble@data-workshop.c-om\"));\n",
                        "        assertFalse(validator.isValid(\"andy-noble@data-workshop.co-m\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailWithDash_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailWithDash_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "230-239:testEmailExtension_test0_decomposed": {
                    "start": 230,
                    "end": 239,
                    "body": [
                        "    public void testEmailExtension_test0_decomposed()  {\n",
                        "        assertTrue(validator.isValid(\"jsmith@apache.org\"));\n",
                        "        assertTrue(validator.isValid(\"jsmith@apache.com\"));\n",
                        "        assertTrue(validator.isValid(\"jsmith@apache.net\"));\n",
                        "        assertTrue(validator.isValid(\"jsmith@apache.info\"));\n",
                        "        assertFalse(validator.isValid(\"jsmith@apache.\"));\n",
                        "        assertFalse(validator.isValid(\"jsmith@apache.c\"));\n",
                        "        assertTrue(validator.isValid(\"someone@yahoo.museum\"));\n",
                        "        assertFalse(validator.isValid(\"someone@yahoo.mu-seum\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailExtension_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailExtension_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "224-227:testEmailWithNumericAddress_test0_decomposed": {
                    "start": 224,
                    "end": 227,
                    "body": [
                        "    public void testEmailWithNumericAddress_test0_decomposed()  {\n",
                        "        assertTrue(validator.isValid(\"someone@[216.109.118.76]\"));\n",
                        "        assertTrue(validator.isValid(\"someone@yahoo.com\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmailWithNumericAddress_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmailWithNumericAddress_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "219-221:testEmail_test0_decomposed": {
                    "start": 219,
                    "end": 221,
                    "body": [
                        "    public void testEmail_test0_decomposed()  {\n",
                        "        assertTrue(validator.isValid(\"jsmith@apache.org\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmail_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testEmail_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "45-47:setUp": {
                    "start": 45,
                    "end": 47,
                    "body": [
                        "    public void setUp() {\n",
                        "        validator = EmailValidator.getInstance0();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Before"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setUp()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "77-79:getInstance0"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def setUp(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "211-216:main": {
                    "start": 211,
                    "end": 216,
                    "body": [
                        "    public static void main(String[] args) {\n",
                        "        EmailValidator validator = EmailValidator.getInstance0();\n",
                        "        for (String arg : args) {\n",
                        "            System.out.printf(\"%s: %s%n\", arg, validator.isValid(arg));\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "main(String[])",
                    "parameters": [
                        "args"
                    ],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "77-79:getInstance0"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "printf(java.lang.String,java.lang.Object[])"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.EmailValidator",
                            "EmailValidator",
                            "169-192:isValid"
                        ],
                        [
                            "commons-validator.src.test.org.apache.commons.validator.routines.EmailValidatorTest",
                            "EmailValidatorTest",
                            "45-47:setUp"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def main(args: typing.List[typing.List[str]]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "40-40:ACTION": {
                    "start": 40,
                    "end": 40,
                    "body": [
                        "    protected static String ACTION = \"email\";\n"
                    ],
                    "modifiers": [
                        "static",
                        "protected"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    _ACTION: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "37-37:FORM_KEY": {
                    "start": 37,
                    "end": 37,
                    "body": [
                        "    protected static String FORM_KEY = \"emailForm\";\n"
                    ],
                    "modifiers": [
                        "static",
                        "protected"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    _FORM_KEY: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "103-177:testEmailFromPerl": {
                    "start": 103,
                    "end": 177,
                    "body": [
                        "    private static final ResultPair[] testEmailFromPerl = {\n",
                        "        new ResultPair(\"abigail@example.com\", true),\n",
                        "        new ResultPair(\"abigail@example.com \", true),\n",
                        "        new ResultPair(\" abigail@example.com\", true),\n",
                        "        new ResultPair(\"abigail @example.com \", true),\n",
                        "        new ResultPair(\"*@example.net\", true),\n",
                        "        new ResultPair(\"\\\"\\\\\\\"\\\"@foo.bar\", true),\n",
                        "        new ResultPair(\"fred&barny@example.com\", true),\n",
                        "        new ResultPair(\"---@example.com\", true),\n",
                        "        new ResultPair(\"foo-bar@example.net\", true),\n",
                        "        new ResultPair(\"\\\"127.0.0.1\\\"@[127.0.0.1]\", true),\n",
                        "        new ResultPair(\"Abigail <abigail@example.com>\", true),\n",
                        "        new ResultPair(\"Abigail<abigail@example.com>\", true),\n",
                        "        new ResultPair(\"Abigail<@a,@b,@c:abigail@example.com>\", true),\n",
                        "        new ResultPair(\"\\\"This is a phrase\\\"<abigail@example.com>\", true),\n",
                        "        new ResultPair(\"\\\"Abigail \\\"<abigail@example.com>\", true),\n",
                        "        new ResultPair(\"\\\"Joe & J. Harvey\\\" <example @Org>\", true),\n",
                        "        new ResultPair(\"Abigail <abigail @ example.com>\", true),\n",
                        "        new ResultPair(\"Abigail made this <  abigail   @   example  .    com    >\", true),\n",
                        "        new ResultPair(\"Abigail(the bitch)@example.com\", true),\n",
                        "        new ResultPair(\"Abigail <abigail @ example . (bar) com >\", true),\n",
                        "        new ResultPair(\"Abigail < (one)  abigail (two) @(three)example . (bar) com (quz) >\", true),\n",
                        "        new ResultPair(\n",
                        "                \"Abigail (foo) (((baz)(nested) (comment)) ! ) < (one)  abigail (two)\"\n",
                        "                        + \" @(three)example . (bar) com (quz) >\",\n",
                        "                true),\n",
                        "        new ResultPair(\"Abigail <abigail(fo\\\\(o)@example.com>\", true),\n",
                        "        new ResultPair(\"Abigail <abigail(fo\\\\)o)@example.com> \", true),\n",
                        "        new ResultPair(\"(foo) abigail@example.com\", true),\n",
                        "        new ResultPair(\"abigail@example.com (foo)\", true),\n",
                        "        new ResultPair(\"\\\"Abi\\\\\\\"gail\\\" <abigail@example.com>\", true),\n",
                        "        new ResultPair(\"abigail@[example.com]\", true),\n",
                        "        new ResultPair(\"abigail@[exa\\\\[ple.com]\", true),\n",
                        "        new ResultPair(\"abigail@[exa\\\\]ple.com]\", true),\n",
                        "        new ResultPair(\"\\\":sysmail\\\"@  Some-Group. Some-Org\", true),\n",
                        "        new ResultPair(\"Muhammed.(I am  the greatest) Ali @(the)Vegas.WBA\", true),\n",
                        "        new ResultPair(\"mailbox.sub1.sub2@this-domain\", true),\n",
                        "        new ResultPair(\"sub-net.mailbox@sub-domain.domain\", true),\n",
                        "        new ResultPair(\"name:;\", true),\n",
                        "        new ResultPair(\"':;\", true),\n",
                        "        new ResultPair(\"name:   ;\", true),\n",
                        "        new ResultPair(\"Alfred Neuman <Neuman@BBN-TENEXA>\", true),\n",
                        "        new ResultPair(\"Neuman@BBN-TENEXA\", true),\n",
                        "        new ResultPair(\"\\\"George, Ted\\\" <Shared@Group.Arpanet>\", true),\n",
                        "        new ResultPair(\"Wilt . (the  Stilt) Chamberlain@NBA.US\", true),\n",
                        "        new ResultPair(\"Cruisers:  Port@Portugal, Jones@SEA;\", true),\n",
                        "        new ResultPair(\"$@[]\", true),\n",
                        "        new ResultPair(\"*()@[]\", true),\n",
                        "        new ResultPair(\"\\\"quoted ( brackets\\\" ( a comment )@example.com\", true),\n",
                        "        new ResultPair(\"\\\"Joe & J. Harvey\\\"\\\\x0D\\\\x0A     <ddd\\\\@ Org>\", true),\n",
                        "        new ResultPair(\"\\\"Joe &\\\\x0D\\\\x0A J. Harvey\\\" <ddd \\\\@ Org>\", true),\n",
                        "        new ResultPair(\n",
                        "                \"Gourmets:  Pompous Person <WhoZiWhatZit\\\\@Cordon-Bleu>,\\\\x0D\\\\x0A\"\n",
                        "                        + \"        Childs\\\\@WGBH.Boston, \\\"Galloping Gourmet\\\"\\\\@\\\\x0D\\\\x0A\"\n",
                        "                        + \"        ANT.Down-Under (Australian National Television),\\\\x0D\\\\x0A\"\n",
                        "                        + \"        Cheapie\\\\@Discount-Liquors;\",\n",
                        "                true),\n",
                        "        new ResultPair(\"   Just a string\", false),\n",
                        "        new ResultPair(\"string\", false),\n",
                        "        new ResultPair(\"(comment)\", false),\n",
                        "        new ResultPair(\"()@example.com\", false),\n",
                        "        new ResultPair(\"fred(&)barny@example.com\", false),\n",
                        "        new ResultPair(\"fred\\\\ barny@example.com\", false),\n",
                        "        new ResultPair(\"Abigail <abi gail @ example.com>\", false),\n",
                        "        new ResultPair(\"Abigail <abigail(fo(o)@example.com>\", false),\n",
                        "        new ResultPair(\"Abigail <abigail(fo)o)@example.com>\", false),\n",
                        "        new ResultPair(\"\\\"Abi\\\"gail\\\" <abigail@example.com>\", false),\n",
                        "        new ResultPair(\"abigail@[exa]ple.com]\", false),\n",
                        "        new ResultPair(\"abigail@[exa[ple.com]\", false),\n",
                        "        new ResultPair(\"abigail@[exaple].com]\", false),\n",
                        "        new ResultPair(\"abigail@\", false),\n",
                        "        new ResultPair(\"@example.com\", false),\n",
                        "        new ResultPair(\"phrase: abigail@example.com abigail@example.com ;\", false),\n",
                        "        new ResultPair(\"invalid\ufffdchar@example.com\", false)\n",
                        "    };\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "ResultPair[]",
                            "ResultPair[]"
                        ]
                    ],
                    "partial_translation": [
                        "    __testEmailFromPerl: typing.List[ResultPair] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "42-42:validator": {
                    "start": 42,
                    "end": 42,
                    "body": [
                        "    private EmailValidator validator;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "EmailValidator",
                            "EmailValidator"
                        ]
                    ],
                    "partial_translation": [
                        "    __validator: EmailValidator = None",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class EmailValidatorTest(unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import typing\nfrom typing import *",
        "import os",
        "import unittest",
        "from src.test.org.apache.commons.validator.ResultPair import *",
        "from src.main.org.apache.commons.validator.routines.DomainValidator import *",
        "from src.main.org.apache.commons.validator.routines.EmailValidator import *"
    ]
}