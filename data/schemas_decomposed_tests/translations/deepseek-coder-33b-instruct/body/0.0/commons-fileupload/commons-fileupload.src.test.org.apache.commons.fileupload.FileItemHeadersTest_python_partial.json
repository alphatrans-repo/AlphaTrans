{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-fileupload/src/test/java/org/apache/commons/fileupload/FileItemHeadersTest.java",
    "imports": {
        "27-27:import Iterator": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.util.Iterator;\n"
            ]
        },
        "25-25:import Test": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "24-24:import FileItemHeadersImpl": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.fileupload.util.FileItemHeadersImpl;\n"
            ]
        },
        "19-19:import static Assert.assertEquals": {
            "start": 19,
            "end": 19,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        },
        "20-20:import static Assert.assertFalse": {
            "start": 20,
            "end": 20,
            "body": [
                "import static org.junit.Assert.assertFalse;\n"
            ]
        },
        "21-21:import static Assert.assertNull": {
            "start": 21,
            "end": 21,
            "body": [
                "import static org.junit.Assert.assertNull;\n"
            ]
        },
        "22-22:import static Assert.assertTrue": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.junit.Assert.assertTrue;\n"
            ]
        }
    },
    "classes": {
        "FileItemHeadersTest": {
            "start": 30,
            "end": 30,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "789-831:testFileItemHeaders_test25_decomposed": {
                    "start": 789,
                    "end": 831,
                    "body": [
                        "    public void testFileItemHeaders_test25_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue1\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue2\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue3\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue4\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"DummyHeader\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test25_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test25_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "745-786:testFileItemHeaders_test24_decomposed": {
                    "start": 745,
                    "end": 786,
                    "body": [
                        "    public void testFileItemHeaders_test24_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue1\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue2\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue3\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue4\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"DummyHeader\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test24_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test24_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "702-742:testFileItemHeaders_test23_decomposed": {
                    "start": 702,
                    "end": 742,
                    "body": [
                        "    public void testFileItemHeaders_test23_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue1\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue2\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue3\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue4\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test23_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test23_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "660-699:testFileItemHeaders_test22_decomposed": {
                    "start": 660,
                    "end": 699,
                    "body": [
                        "    public void testFileItemHeaders_test22_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue1\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue2\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue3\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue4\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test22_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test22_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "619-657:testFileItemHeaders_test21_decomposed": {
                    "start": 619,
                    "end": 657,
                    "body": [
                        "    public void testFileItemHeaders_test21_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue1\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue2\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue3\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test21_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test21_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "579-616:testFileItemHeaders_test20_decomposed": {
                    "start": 579,
                    "end": 616,
                    "body": [
                        "    public void testFileItemHeaders_test20_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue1\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue2\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue3\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test20_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test20_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "540-576:testFileItemHeaders_test19_decomposed": {
                    "start": 540,
                    "end": 576,
                    "body": [
                        "    public void testFileItemHeaders_test19_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue1\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue2\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test19_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test19_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "502-537:testFileItemHeaders_test18_decomposed": {
                    "start": 502,
                    "end": 537,
                    "body": [
                        "    public void testFileItemHeaders_test18_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue1\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue2\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test18_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test18_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "465-499:testFileItemHeaders_test17_decomposed": {
                    "start": 465,
                    "end": 499,
                    "body": [
                        "    public void testFileItemHeaders_test17_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue1\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test17_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test17_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "429-462:testFileItemHeaders_test16_decomposed": {
                    "start": 429,
                    "end": 462,
                    "body": [
                        "    public void testFileItemHeaders_test16_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"headerValue1\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test16_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test16_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "394-426:testFileItemHeaders_test15_decomposed": {
                    "start": 394,
                    "end": 426,
                    "body": [
                        "    public void testFileItemHeaders_test15_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test15_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test15_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "360-391:testFileItemHeaders_test14_decomposed": {
                    "start": 360,
                    "end": 391,
                    "body": [
                        "    public void testFileItemHeaders_test14_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"TestHeader\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test14_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test14_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "327-357:testFileItemHeaders_test13_decomposed": {
                    "start": 327,
                    "end": 357,
                    "body": [
                        "    public void testFileItemHeaders_test13_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test13_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test13_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "295-324:testFileItemHeaders_test12_decomposed": {
                    "start": 295,
                    "end": 324,
                    "body": [
                        "    public void testFileItemHeaders_test12_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test12_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test12_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "264-292:testFileItemHeaders_test11_decomposed": {
                    "start": 264,
                    "end": 292,
                    "body": [
                        "    public void testFileItemHeaders_test11_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test11_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "234-261:testFileItemHeaders_test10_decomposed": {
                    "start": 234,
                    "end": 261,
                    "body": [
                        "    public void testFileItemHeaders_test10_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"content-type\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test10_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "205-231:testFileItemHeaders_test9_decomposed": {
                    "start": 205,
                    "end": 231,
                    "body": [
                        "    public void testFileItemHeaders_test9_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "        assertFalse(headerValueEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test9_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "177-202:testFileItemHeaders_test8_decomposed": {
                    "start": 177,
                    "end": 202,
                    "body": [
                        "    public void testFileItemHeaders_test8_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "        assertEquals(headerValueEnumeration.next(), \"text/plain\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test8_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "150-174:testFileItemHeaders_test7_decomposed": {
                    "start": 150,
                    "end": 174,
                    "body": [
                        "    public void testFileItemHeaders_test7_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "        assertTrue(headerValueEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test7_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "124-147:testFileItemHeaders_test6_decomposed": {
                    "start": 124,
                    "end": 147,
                    "body": [
                        "    public void testFileItemHeaders_test6_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "        Iterator<String> headerValueEnumeration;\n",
                        "        headerValueEnumeration = aMutableFileItemHeaders.getHeaders(\"Content-Type\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "63-70:getHeaders"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test6_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "100-121:testFileItemHeaders_test5_decomposed": {
                    "start": 100,
                    "end": 121,
                    "body": [
                        "    public void testFileItemHeaders_test5_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "        assertEquals(\n",
                        "                aMutableFileItemHeaders.getHeader(\"Content-Disposition\"),\n",
                        "                \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"Content-Type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"content-type\"), \"text/plain\");\n",
                        "        assertEquals(aMutableFileItemHeaders.getHeader(\"TestHeader\"), \"headerValue1\");\n",
                        "        assertNull(aMutableFileItemHeaders.getHeader(\"DummyHeader\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "46-53:getHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test5_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "83-97:testFileItemHeaders_test4_decomposed": {
                    "start": 83,
                    "end": 97,
                    "body": [
                        "    public void testFileItemHeaders_test4_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "        assertFalse(headerNameEnumeration.hasNext());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test4_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "67-80:testFileItemHeaders_test3_decomposed": {
                    "start": 67,
                    "end": 80,
                    "body": [
                        "    public void testFileItemHeaders_test3_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "        assertEquals(\"content-disposition\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"content-type\", headerNameEnumeration.next());\n",
                        "        assertEquals(\"testheader\", headerNameEnumeration.next());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "54-64:testFileItemHeaders_test2_decomposed": {
                    "start": 54,
                    "end": 64,
                    "body": [
                        "    public void testFileItemHeaders_test2_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "        Iterator<String> headerNameEnumeration = aMutableFileItemHeaders.getHeaderNames();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "57-59:getHeaderNames"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "42-51:testFileItemHeaders_test1_decomposed": {
                    "start": 42,
                    "end": 51,
                    "body": [
                        "    public void testFileItemHeaders_test1_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "        aMutableFileItemHeaders.addHeader(\n",
                        "                \"Content-Disposition\", \"form-data; name=\\\"FileItem\\\"; filename=\\\"file1.txt\\\"\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"Content-Type\", \"text/plain\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue1\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue2\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"TestHeader\", \"headerValue3\");\n",
                        "        aMutableFileItemHeaders.addHeader(\"testheader\", \"headerValue4\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "78-86:addHeader"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "37-39:testFileItemHeaders_test0_decomposed": {
                    "start": 37,
                    "end": 39,
                    "body": [
                        "    public void testFileItemHeaders_test0_decomposed() throws Exception {\n",
                        "        FileItemHeadersImpl aMutableFileItemHeaders = new FileItemHeadersImpl();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileItemHeaders_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl",
                            "FileItemHeadersImpl",
                            "FileItemHeadersImpl"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testFileItemHeaders_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class FileItemHeadersTest(unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import os",
        "import unittest",
        "from src.main.org.apache.commons.fileupload.util.FileItemHeadersImpl import *"
    ]
}