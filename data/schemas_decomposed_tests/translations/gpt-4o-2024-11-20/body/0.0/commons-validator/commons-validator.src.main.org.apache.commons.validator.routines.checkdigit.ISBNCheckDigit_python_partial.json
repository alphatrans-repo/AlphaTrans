{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-validator/src/main/java/org/apache/commons/validator/routines/checkdigit/ISBNCheckDigit.java",
    "imports": {
        "19-19:import Serializable": {
            "start": 19,
            "end": 19,
            "body": [
                "import java.io.Serializable;\n"
            ]
        }
    },
    "classes": {
        "ISBNCheckDigit": {
            "start": 34,
            "end": 34,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [
                "CheckDigit"
            ],
            "extends": [],
            "methods": {
                "85-95:isValid": {
                    "start": 85,
                    "end": 95,
                    "body": [
                        "    public boolean isValid(String code) {\n",
                        "        if (code == null) {\n",
                        "            return false;\n",
                        "        } else if (code.length() == 10) { // CHECKSTYLE IGNORE MagicNumber\n",
                        "            return ISBN10_CHECK_DIGIT.isValid(code);\n",
                        "        } else if (code.length() == 13) { // CHECKSTYLE IGNORE MagicNumber\n",
                        "            return ISBN13_CHECK_DIGIT.isValid(code);\n",
                        "        } else {\n",
                        "            return false;\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isValid(String)",
                    "parameters": [
                        "code"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.CheckDigit",
                            "CheckDigit",
                            "63-63:isValid"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def isValid(self, code: str) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "60-71:calculate": {
                    "start": 60,
                    "end": 71,
                    "body": [
                        "    public String calculate(String code) throws CheckDigitException {\n",
                        "        if (code == null || code.length() == 0) {\n",
                        "            throw CheckDigitException.CheckDigitException1(\"ISBN Code is missing\");\n",
                        "        } else if (code.length() == 9) { // CHECKSTYLE IGNORE MagicNumber\n",
                        "            return ISBN10_CHECK_DIGIT.calculate(code);\n",
                        "        } else if (code.length() == 12) { // CHECKSTYLE IGNORE MagicNumber\n",
                        "            return ISBN13_CHECK_DIGIT.calculate(code);\n",
                        "        } else {\n",
                        "            throw CheckDigitException.CheckDigitException1(\n",
                        "                    \"Invalid ISBN Length = \" + code.length());\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "calculate(String)",
                    "parameters": [
                        "code"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.CheckDigitException",
                            "CheckDigitException",
                            "34-36:CheckDigitException1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.CheckDigit",
                            "CheckDigit",
                            "55-55:calculate"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def calculate(self, code: str) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "45-45:ISBN_CHECK_DIGIT": {
                    "start": 45,
                    "end": 45,
                    "body": [
                        "    public static final CheckDigit ISBN_CHECK_DIGIT = new ISBNCheckDigit();\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "CheckDigit",
                            "CheckDigit"
                        ]
                    ],
                    "partial_translation": [
                        "    ISBN_CHECK_DIGIT: CheckDigit = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "42-42:ISBN13_CHECK_DIGIT": {
                    "start": 42,
                    "end": 42,
                    "body": [
                        "    public static final CheckDigit ISBN13_CHECK_DIGIT = EAN13CheckDigit.EAN13_CHECK_DIGIT;\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "CheckDigit",
                            "CheckDigit"
                        ]
                    ],
                    "partial_translation": [
                        "    ISBN13_CHECK_DIGIT: CheckDigit = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "39-39:ISBN10_CHECK_DIGIT": {
                    "start": 39,
                    "end": 39,
                    "body": [
                        "    public static final CheckDigit ISBN10_CHECK_DIGIT = ISBN10CheckDigit.ISBN10_CHECK_DIGIT;\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "CheckDigit",
                            "CheckDigit"
                        ]
                    ],
                    "partial_translation": [
                        "    ISBN10_CHECK_DIGIT: CheckDigit = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "36-36:serialVersionUID": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    private static final long serialVersionUID = 1391849166205184558L;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "partial_translation": [
                        "    __serialVersionUID: int = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class ISBNCheckDigit(CheckDigit):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import io",
        "from src.main.org.apache.commons.validator.routines.checkdigit.CheckDigit import *",
        "from src.main.org.apache.commons.validator.routines.checkdigit.CheckDigitException import *",
        "from src.main.org.apache.commons.validator.routines.checkdigit.EAN13CheckDigit import *",
        "from src.main.org.apache.commons.validator.routines.checkdigit.ISBN10CheckDigit import *"
    ]
}