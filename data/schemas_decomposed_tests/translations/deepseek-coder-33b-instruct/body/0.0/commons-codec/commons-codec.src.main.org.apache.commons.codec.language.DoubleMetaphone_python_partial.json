{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
    "imports": {
        "20-20:import EncoderException": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.codec.EncoderException;\n"
            ]
        },
        "21-21:import StringEncoder": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.codec.StringEncoder;\n"
            ]
        },
        "22-22:import StringUtils": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.codec.binary.StringUtils;\n"
            ]
        }
    },
    "classes": {
        "DoubleMetaphone": {
            "start": 37,
            "end": 37,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "DoubleMetaphoneResult"
            ],
            "implements": [
                "StringEncoder"
            ],
            "extends": [],
            "methods": {
                "209-211:encode": {
                    "start": 209,
                    "end": 211,
                    "body": [
                        "    public String encode(final String value) {\n",
                        "        return encode1(value);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "encode(String)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "213-215:encode1"
                        ]
                    ],
                    "is_overload": true,
                    "partial_translation": [
                        "    def encode(self, value: str) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "190-192:encode": {
                    "start": 190,
                    "end": 192,
                    "body": [
                        "    public Object encode(final Object obj) throws EncoderException {\n",
                        "        return encode0(obj);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "encode(Object)",
                    "parameters": [
                        "obj"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "194-200:encode0"
                        ]
                    ],
                    "is_overload": true,
                    "partial_translation": [
                        "    def encode(self, obj: typing.Any) -> typing.Any:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "825-839:contains": {
                    "start": 825,
                    "end": 839,
                    "body": [
                        "    protected static boolean contains(\n",
                        "            final String value, final int start, final int length, final String... criteria) {\n",
                        "        boolean result = false;\n",
                        "        if (start >= 0 && start + length <= value.length()) {\n",
                        "            final String target = value.substring(start, start + length);\n",
                        "\n",
                        "            for (final String element : criteria) {\n",
                        "                if (target.equals(element)) {\n",
                        "                    result = true;\n",
                        "                    break;\n",
                        "                }\n",
                        "            }\n",
                        "        }\n",
                        "        return result;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "static",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "contains(String, int, int, String[])",
                    "parameters": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "substring(int,int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "equals(java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def _contains(value: str, start: int, length: int, criteria: typing.List[typing.List[str]]) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "814-819:charAt": {
                    "start": 814,
                    "end": 819,
                    "body": [
                        "    protected char charAt(final String value, final int index) {\n",
                        "        if (index < 0 || index >= value.length()) {\n",
                        "            return Character.MIN_VALUE;\n",
                        "        }\n",
                        "        return value.charAt(index);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "char",
                            "char"
                        ]
                    ],
                    "signature": "charAt(String, int)",
                    "parameters": [
                        "value",
                        "index"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "charAt(int)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _charAt(self, value: str, index: int) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "258-260:setMaxCodeLen": {
                    "start": 258,
                    "end": 260,
                    "body": [
                        "    public void setMaxCodeLen(final int maxCodeLen) {\n",
                        "        this.maxCodeLen = maxCodeLen;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setMaxCodeLen(int)",
                    "parameters": [
                        "maxCodeLen"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def setMaxCodeLen(self, maxCodeLen: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "249-251:getMaxCodeLen": {
                    "start": 249,
                    "end": 251,
                    "body": [
                        "    public int getMaxCodeLen() {\n",
                        "        return this.maxCodeLen;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getMaxCodeLen()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def getMaxCodeLen(self) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "238-242:isDoubleMetaphoneEqual1": {
                    "start": 238,
                    "end": 242,
                    "body": [
                        "    public boolean isDoubleMetaphoneEqual1(\n",
                        "            final String value1, final String value2, final boolean alternate) {\n",
                        "        return StringUtils.equals(\n",
                        "                doubleMetaphone1(value1, alternate), doubleMetaphone1(value2, alternate));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isDoubleMetaphoneEqual1(String, String, boolean)",
                    "parameters": [
                        "value1",
                        "value2",
                        "alternate"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.StringUtils",
                            "StringUtils",
                            "66-78:equals"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "76-179:doubleMetaphone1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def isDoubleMetaphoneEqual1(self, value1: str, value2: str, alternate: bool) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "225-227:isDoubleMetaphoneEqual0": {
                    "start": 225,
                    "end": 227,
                    "body": [
                        "    public boolean isDoubleMetaphoneEqual0(final String value1, final String value2) {\n",
                        "        return isDoubleMetaphoneEqual1(value1, value2, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isDoubleMetaphoneEqual0(String, String)",
                    "parameters": [
                        "value1",
                        "value2"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "238-242:isDoubleMetaphoneEqual1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def isDoubleMetaphoneEqual0(self, value1: str, value2: str) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "213-215:encode1": {
                    "start": 213,
                    "end": 215,
                    "body": [
                        "    public String encode1(final String value) {\n",
                        "        return doubleMetaphone0(value);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "encode1(String)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "65-67:doubleMetaphone0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encode1(self, value: str) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "194-200:encode0": {
                    "start": 194,
                    "end": 200,
                    "body": [
                        "    public Object encode0(final Object obj) throws EncoderException {\n",
                        "        if (!(obj instanceof String)) {\n",
                        "            throw new EncoderException(\n",
                        "                    \"DoubleMetaphone encode parameter is not of type String\", null);\n",
                        "        }\n",
                        "        return doubleMetaphone0((String) obj);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "encode0(Object)",
                    "parameters": [
                        "obj"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.EncoderException",
                            "EncoderException",
                            "62-64:EncoderException"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "65-67:doubleMetaphone0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encode0(self, obj: typing.Any) -> typing.Any:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "76-179:doubleMetaphone1": {
                    "start": 76,
                    "end": 179,
                    "body": [
                        "    public String doubleMetaphone1(String value, final boolean alternate) {\n",
                        "        value = cleanInput(value);\n",
                        "        if (value == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "\n",
                        "        final boolean slavoGermanic = isSlavoGermanic(value);\n",
                        "        int index = isSilentStart(value) ? 1 : 0;\n",
                        "\n",
                        "        final DoubleMetaphoneResult result = new DoubleMetaphoneResult(this.getMaxCodeLen());\n",
                        "\n",
                        "        while (!result.isComplete() && index <= value.length() - 1) {\n",
                        "            switch (value.charAt(index)) {\n",
                        "                case 'A':\n",
                        "                case 'E':\n",
                        "                case 'I':\n",
                        "                case 'O':\n",
                        "                case 'U':\n",
                        "                case 'Y':\n",
                        "                    index = handleAEIOUY(result, index);\n",
                        "                    break;\n",
                        "                case 'B':\n",
                        "                    result.append0('P');\n",
                        "                    index = charAt(value, index + 1) == 'B' ? index + 2 : index + 1;\n",
                        "                    break;\n",
                        "                case '\\u00C7':\n",
                        "                    result.append0('S');\n",
                        "                    index++;\n",
                        "                    break;\n",
                        "                case 'C':\n",
                        "                    index = handleC(value, result, index);\n",
                        "                    break;\n",
                        "                case 'D':\n",
                        "                    index = handleD(value, result, index);\n",
                        "                    break;\n",
                        "                case 'F':\n",
                        "                    result.append0('F');\n",
                        "                    index = charAt(value, index + 1) == 'F' ? index + 2 : index + 1;\n",
                        "                    break;\n",
                        "                case 'G':\n",
                        "                    index = handleG(value, result, index, slavoGermanic);\n",
                        "                    break;\n",
                        "                case 'H':\n",
                        "                    index = handleH(value, result, index);\n",
                        "                    break;\n",
                        "                case 'J':\n",
                        "                    index = handleJ(value, result, index, slavoGermanic);\n",
                        "                    break;\n",
                        "                case 'K':\n",
                        "                    result.append0('K');\n",
                        "                    index = charAt(value, index + 1) == 'K' ? index + 2 : index + 1;\n",
                        "                    break;\n",
                        "                case 'L':\n",
                        "                    index = handleL(value, result, index);\n",
                        "                    break;\n",
                        "                case 'M':\n",
                        "                    result.append0('M');\n",
                        "                    index = conditionM0(value, index) ? index + 2 : index + 1;\n",
                        "                    break;\n",
                        "                case 'N':\n",
                        "                    result.append0('N');\n",
                        "                    index = charAt(value, index + 1) == 'N' ? index + 2 : index + 1;\n",
                        "                    break;\n",
                        "                case '\\u00D1':\n",
                        "                    result.append0('N');\n",
                        "                    index++;\n",
                        "                    break;\n",
                        "                case 'P':\n",
                        "                    index = handleP(value, result, index);\n",
                        "                    break;\n",
                        "                case 'Q':\n",
                        "                    result.append0('K');\n",
                        "                    index = charAt(value, index + 1) == 'Q' ? index + 2 : index + 1;\n",
                        "                    break;\n",
                        "                case 'R':\n",
                        "                    index = handleR(value, result, index, slavoGermanic);\n",
                        "                    break;\n",
                        "                case 'S':\n",
                        "                    index = handleS(value, result, index, slavoGermanic);\n",
                        "                    break;\n",
                        "                case 'T':\n",
                        "                    index = handleT(value, result, index);\n",
                        "                    break;\n",
                        "                case 'V':\n",
                        "                    result.append0('F');\n",
                        "                    index = charAt(value, index + 1) == 'V' ? index + 2 : index + 1;\n",
                        "                    break;\n",
                        "                case 'W':\n",
                        "                    index = handleW(value, result, index);\n",
                        "                    break;\n",
                        "                case 'X':\n",
                        "                    index = handleX(value, result, index);\n",
                        "                    break;\n",
                        "                case 'Z':\n",
                        "                    index = handleZ(value, result, index, slavoGermanic);\n",
                        "                    break;\n",
                        "                default:\n",
                        "                    index++;\n",
                        "                    break;\n",
                        "            }\n",
                        "        }\n",
                        "\n",
                        "        return alternate ? result.getAlternate() : result.getPrimary();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "doubleMetaphone1(String, boolean)",
                    "parameters": [
                        "value",
                        "alternate"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "770-775:isSlavoGermanic"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "786-795:isSilentStart"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "848-850:DoubleMetaphoneResult"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "249-251:getMaxCodeLen"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "798-807:cleanInput"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "910-913:isComplete"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "charAt(int)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "263-268:handleAEIOUY"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "271-311:handleC"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "358-375:handleD"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "378-430:handleG"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "462-471:handleH"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "474-508:handleJ"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "511-524:handleL"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "758-764:conditionM0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "527-536:handleP"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "539-553:handleR"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "556-595:handleS"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "620-641:handleT"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "644-668:handleW"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "671-684:handleX"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "687-705:handleZ"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "906-908:getAlternate"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "902-904:getPrimary"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def doubleMetaphone1(self, value: str, alternate: bool) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "65-67:doubleMetaphone0": {
                    "start": 65,
                    "end": 67,
                    "body": [
                        "    public String doubleMetaphone0(final String value) {\n",
                        "        return doubleMetaphone1(value, false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "doubleMetaphone0(String)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "76-179:doubleMetaphone1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def doubleMetaphone0(self, value: str) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "57-57:DoubleMetaphone": {
                    "start": 57,
                    "end": 57,
                    "body": [
                        "    public DoubleMetaphone() {}\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "DoubleMetaphone()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "798-807:cleanInput": {
                    "start": 798,
                    "end": 807,
                    "body": [
                        "    private String cleanInput(String input) {\n",
                        "        if (input == null) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        input = input.trim();\n",
                        "        if (input.isEmpty()) {\n",
                        "            return null;\n",
                        "        }\n",
                        "        return input.toUpperCase(java.util.Locale.ENGLISH);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "cleanInput(String)",
                    "parameters": [
                        "input"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "trim()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "isEmpty()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "toUpperCase(java.util.Locale)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __cleanInput(self, input_: str) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "786-795:isSilentStart": {
                    "start": 786,
                    "end": 795,
                    "body": [
                        "    private boolean isSilentStart(final String value) {\n",
                        "        boolean result = false;\n",
                        "        for (final String element : SILENT_START) {\n",
                        "            if (value.startsWith(element)) {\n",
                        "                result = true;\n",
                        "                break;\n",
                        "            }\n",
                        "        }\n",
                        "        return result;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isSilentStart(String)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "startsWith(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __isSilentStart(self, value: str) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "778-780:isVowel": {
                    "start": 778,
                    "end": 780,
                    "body": [
                        "    private boolean isVowel(final char ch) {\n",
                        "        return VOWELS.indexOf(ch) != -1;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isVowel(char)",
                    "parameters": [
                        "ch"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "indexOf(int)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __isVowel(self, ch: str) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "770-775:isSlavoGermanic": {
                    "start": 770,
                    "end": 775,
                    "body": [
                        "    private boolean isSlavoGermanic(final String value) {\n",
                        "        return value.indexOf('W') > -1\n",
                        "                || value.indexOf('K') > -1\n",
                        "                || value.indexOf(\"CZ\") > -1\n",
                        "                || value.indexOf(\"WITZ\") > -1;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isSlavoGermanic(String)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "indexOf(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "indexOf(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __isSlavoGermanic(self, value: str) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "758-764:conditionM0": {
                    "start": 758,
                    "end": 764,
                    "body": [
                        "    private boolean conditionM0(final String value, final int index) {\n",
                        "        if (charAt(value, index + 1) == 'M') {\n",
                        "            return true;\n",
                        "        }\n",
                        "        return contains(value, index - 1, 3, \"UMB\")\n",
                        "                && ((index + 1) == value.length() - 1 || contains(value, index + 2, 2, \"ER\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "conditionM0(String, int)",
                    "parameters": [
                        "value",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __conditionM0(self, value: str, index: int) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "748-755:conditionL0": {
                    "start": 748,
                    "end": 755,
                    "body": [
                        "    private boolean conditionL0(final String value, final int index) {\n",
                        "        if (index == value.length() - 3 && contains(value, index - 1, 4, \"ILLO\", \"ILLA\", \"ALLE\")) {\n",
                        "            return true;\n",
                        "        }\n",
                        "        return (contains(value, value.length() - 2, 2, \"AS\", \"OS\")\n",
                        "                        || contains(value, value.length() - 1, 1, \"A\", \"O\"))\n",
                        "                && contains(value, index - 1, 4, \"ALLE\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "conditionL0(String, int)",
                    "parameters": [
                        "value",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __conditionL0(self, value: str, index: int) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "738-745:conditionCH1": {
                    "start": 738,
                    "end": 745,
                    "body": [
                        "    private boolean conditionCH1(final String value, final int index) {\n",
                        "        return ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\"))\n",
                        "                || contains(value, index - 2, 6, \"ORCHES\", \"ARCHIT\", \"ORCHID\")\n",
                        "                || contains(value, index + 2, 1, \"T\", \"S\")\n",
                        "                || ((contains(value, index - 1, 1, \"A\", \"O\", \"U\", \"E\") || index == 0)\n",
                        "                        && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE)\n",
                        "                                || index + 1 == value.length() - 1)));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "conditionCH1(String, int)",
                    "parameters": [
                        "value",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __conditionCH1(self, value: str, index: int) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "726-735:conditionCH0": {
                    "start": 726,
                    "end": 735,
                    "body": [
                        "    private boolean conditionCH0(final String value, final int index) {\n",
                        "        if (index != 0) {\n",
                        "            return false;\n",
                        "        }\n",
                        "        if (!contains(value, index + 1, 5, \"HARAC\", \"HARIS\")\n",
                        "                && !contains(value, index + 1, 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")) {\n",
                        "            return false;\n",
                        "        }\n",
                        "        return !contains(value, 0, 5, \"CHORE\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "conditionCH0(String, int)",
                    "parameters": [
                        "value",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __conditionCH0(self, value: str, index: int) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "708-723:conditionC0": {
                    "start": 708,
                    "end": 723,
                    "body": [
                        "    private boolean conditionC0(final String value, final int index) {\n",
                        "        if (contains(value, index, 4, \"CHIA\")) {\n",
                        "            return true;\n",
                        "        }\n",
                        "        if (index <= 1) {\n",
                        "            return false;\n",
                        "        }\n",
                        "        if (isVowel(charAt(value, index - 2))) {\n",
                        "            return false;\n",
                        "        }\n",
                        "        if (!contains(value, index - 1, 3, \"ACH\")) {\n",
                        "            return false;\n",
                        "        }\n",
                        "        final char c = charAt(value, index + 2);\n",
                        "        return (c != 'I' && c != 'E') || contains(value, index - 2, 6, \"BACHER\", \"MACHER\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "conditionC0(String, int)",
                    "parameters": [
                        "value",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "778-780:isVowel"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __conditionC0(self, value: str, index: int) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "687-705:handleZ": {
                    "start": 687,
                    "end": 705,
                    "body": [
                        "    private int handleZ(\n",
                        "            final String value,\n",
                        "            final DoubleMetaphoneResult result,\n",
                        "            int index,\n",
                        "            final boolean slavoGermanic) {\n",
                        "        if (charAt(value, index + 1) == 'H') {\n",
                        "            result.append0('J');\n",
                        "            index += 2;\n",
                        "        } else {\n",
                        "            if (contains(value, index + 1, 2, \"ZO\", \"ZI\", \"ZA\")\n",
                        "                    || (slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T'))) {\n",
                        "                result.append3(\"S\", \"TS\");\n",
                        "            } else {\n",
                        "                result.append0('S');\n",
                        "            }\n",
                        "            index = charAt(value, index + 1) == 'Z' ? index + 2 : index + 1;\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleZ(String, DoubleMetaphoneResult, int, boolean)",
                    "parameters": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "879-882:append3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleZ(self, value: str, result: DoubleMetaphoneResult, index: int, slavoGermanic: bool) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "671-684:handleX": {
                    "start": 671,
                    "end": 684,
                    "body": [
                        "    private int handleX(final String value, final DoubleMetaphoneResult result, int index) {\n",
                        "        if (index == 0) {\n",
                        "            result.append0('S');\n",
                        "            index++;\n",
                        "        } else {\n",
                        "            if (!((index == value.length() - 1)\n",
                        "                    && (contains(value, index - 3, 3, \"IAU\", \"EAU\")\n",
                        "                            || contains(value, index - 2, 2, \"AU\", \"OU\")))) {\n",
                        "                result.append2(\"KS\");\n",
                        "            }\n",
                        "            index = contains(value, index + 1, 1, \"C\", \"X\") ? index + 2 : index + 1;\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleX(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "874-877:append2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleX(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "644-668:handleW": {
                    "start": 644,
                    "end": 668,
                    "body": [
                        "    private int handleW(final String value, final DoubleMetaphoneResult result, int index) {\n",
                        "        if (contains(value, index, 2, \"WR\")) {\n",
                        "            result.append0('R');\n",
                        "            index += 2;\n",
                        "        } else if (index == 0\n",
                        "                && (isVowel(charAt(value, index + 1)) || contains(value, index, 2, \"WH\"))) {\n",
                        "            if (isVowel(charAt(value, index + 1))) {\n",
                        "                result.append1('A', 'F');\n",
                        "            } else {\n",
                        "                result.append0('A');\n",
                        "            }\n",
                        "            index++;\n",
                        "        } else if ((index == value.length() - 1 && isVowel(charAt(value, index - 1)))\n",
                        "                || contains(value, index - 1, 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\")\n",
                        "                || contains(value, 0, 3, \"SCH\")) {\n",
                        "            result.appendAlternate0('F');\n",
                        "            index++;\n",
                        "        } else if (contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n",
                        "            result.append3(\"TS\", \"FX\");\n",
                        "            index += 4;\n",
                        "        } else {\n",
                        "            index++;\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleW(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "778-780:isVowel"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "857-860:append1"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "868-872:appendAlternate0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "879-882:append3"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleW(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "620-641:handleT": {
                    "start": 620,
                    "end": 641,
                    "body": [
                        "    private int handleT(final String value, final DoubleMetaphoneResult result, int index) {\n",
                        "        if (contains(value, index, 4, \"TION\")) {\n",
                        "            result.append0('X');\n",
                        "            index += 3;\n",
                        "        } else if (contains(value, index, 3, \"TIA\", \"TCH\")) {\n",
                        "            result.append0('X');\n",
                        "            index += 3;\n",
                        "        } else if (contains(value, index, 2, \"TH\") || contains(value, index, 3, \"TTH\")) {\n",
                        "            if (contains(value, index + 2, 2, \"OM\", \"AM\")\n",
                        "                    || contains(value, 0, 4, \"VAN \", \"VON \")\n",
                        "                    || contains(value, 0, 3, \"SCH\")) {\n",
                        "                result.append0('T');\n",
                        "            } else {\n",
                        "                result.append1('0', 'T');\n",
                        "            }\n",
                        "            index += 2;\n",
                        "        } else {\n",
                        "            result.append0('T');\n",
                        "            index = contains(value, index + 1, 1, \"T\", \"D\") ? index + 2 : index + 1;\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleT(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "857-860:append1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleT(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "598-617:handleSC": {
                    "start": 598,
                    "end": 617,
                    "body": [
                        "    private int handleSC(final String value, final DoubleMetaphoneResult result, final int index) {\n",
                        "        if (charAt(value, index + 2) == 'H') {\n",
                        "            if (contains(value, index + 3, 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n",
                        "                if (contains(value, index + 3, 2, \"ER\", \"EN\")) {\n",
                        "                    result.append3(\"X\", \"SK\");\n",
                        "                } else {\n",
                        "                    result.append2(\"SK\");\n",
                        "                }\n",
                        "            } else if (index == 0 && !isVowel(charAt(value, 3)) && charAt(value, 3) != 'W') {\n",
                        "                result.append1('X', 'S');\n",
                        "            } else {\n",
                        "                result.append0('X');\n",
                        "            }\n",
                        "        } else if (contains(value, index + 2, 1, \"I\", \"E\", \"Y\")) {\n",
                        "            result.append0('S');\n",
                        "        } else {\n",
                        "            result.append2(\"SK\");\n",
                        "        }\n",
                        "        return index + 3;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleSC(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "879-882:append3"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "874-877:append2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "778-780:isVowel"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "857-860:append1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleSC(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "556-595:handleS": {
                    "start": 556,
                    "end": 595,
                    "body": [
                        "    private int handleS(\n",
                        "            final String value,\n",
                        "            final DoubleMetaphoneResult result,\n",
                        "            int index,\n",
                        "            final boolean slavoGermanic) {\n",
                        "        if (contains(value, index - 1, 3, \"ISL\", \"YSL\")) {\n",
                        "            index++;\n",
                        "        } else if (index == 0 && contains(value, index, 5, \"SUGAR\")) {\n",
                        "            result.append1('X', 'S');\n",
                        "            index++;\n",
                        "        } else if (contains(value, index, 2, \"SH\")) {\n",
                        "            if (contains(value, index + 1, 4, \"HEIM\", \"HOEK\", \"HOLM\", \"HOLZ\")) {\n",
                        "                result.append0('S');\n",
                        "            } else {\n",
                        "                result.append0('X');\n",
                        "            }\n",
                        "            index += 2;\n",
                        "        } else if (contains(value, index, 3, \"SIO\", \"SIA\") || contains(value, index, 4, \"SIAN\")) {\n",
                        "            if (slavoGermanic) {\n",
                        "                result.append0('S');\n",
                        "            } else {\n",
                        "                result.append1('S', 'X');\n",
                        "            }\n",
                        "            index += 3;\n",
                        "        } else if ((index == 0 && contains(value, index + 1, 1, \"M\", \"N\", \"L\", \"W\"))\n",
                        "                || contains(value, index + 1, 1, \"Z\")) {\n",
                        "            result.append1('S', 'X');\n",
                        "            index = contains(value, index + 1, 1, \"Z\") ? index + 2 : index + 1;\n",
                        "        } else if (contains(value, index, 2, \"SC\")) {\n",
                        "            index = handleSC(value, result, index);\n",
                        "        } else {\n",
                        "            if (index == value.length() - 1 && contains(value, index - 2, 2, \"AI\", \"OI\")) {\n",
                        "                result.appendAlternate0('S');\n",
                        "            } else {\n",
                        "                result.append0('S');\n",
                        "            }\n",
                        "            index = contains(value, index + 1, 1, \"S\", \"Z\") ? index + 2 : index + 1;\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleS(String, DoubleMetaphoneResult, int, boolean)",
                    "parameters": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "857-860:append1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "598-617:handleSC"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "868-872:appendAlternate0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleS(self, value: str, result: DoubleMetaphoneResult, index: int, slavoGermanic: bool) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "539-553:handleR": {
                    "start": 539,
                    "end": 553,
                    "body": [
                        "    private int handleR(\n",
                        "            final String value,\n",
                        "            final DoubleMetaphoneResult result,\n",
                        "            final int index,\n",
                        "            final boolean slavoGermanic) {\n",
                        "        if (index == value.length() - 1\n",
                        "                && !slavoGermanic\n",
                        "                && contains(value, index - 2, 2, \"IE\")\n",
                        "                && !contains(value, index - 4, 2, \"ME\", \"MA\")) {\n",
                        "            result.appendAlternate0('R');\n",
                        "        } else {\n",
                        "            result.append0('R');\n",
                        "        }\n",
                        "        return charAt(value, index + 1) == 'R' ? index + 2 : index + 1;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleR(String, DoubleMetaphoneResult, int, boolean)",
                    "parameters": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "868-872:appendAlternate0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleR(self, value: str, result: DoubleMetaphoneResult, index: int, slavoGermanic: bool) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "527-536:handleP": {
                    "start": 527,
                    "end": 536,
                    "body": [
                        "    private int handleP(final String value, final DoubleMetaphoneResult result, int index) {\n",
                        "        if (charAt(value, index + 1) == 'H') {\n",
                        "            result.append0('F');\n",
                        "            index += 2;\n",
                        "        } else {\n",
                        "            result.append0('P');\n",
                        "            index = contains(value, index + 1, 1, \"P\", \"B\") ? index + 2 : index + 1;\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleP(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleP(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "511-524:handleL": {
                    "start": 511,
                    "end": 524,
                    "body": [
                        "    private int handleL(final String value, final DoubleMetaphoneResult result, int index) {\n",
                        "        if (charAt(value, index + 1) == 'L') {\n",
                        "            if (conditionL0(value, index)) {\n",
                        "                result.appendPrimary0('L');\n",
                        "            } else {\n",
                        "                result.append0('L');\n",
                        "            }\n",
                        "            index += 2;\n",
                        "        } else {\n",
                        "            index++;\n",
                        "            result.append0('L');\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleL(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "748-755:conditionL0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "862-866:appendPrimary0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleL(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "474-508:handleJ": {
                    "start": 474,
                    "end": 508,
                    "body": [
                        "    private int handleJ(\n",
                        "            final String value,\n",
                        "            final DoubleMetaphoneResult result,\n",
                        "            int index,\n",
                        "            final boolean slavoGermanic) {\n",
                        "        if (contains(value, index, 4, \"JOSE\") || contains(value, 0, 4, \"SAN \")) {\n",
                        "            if ((index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4)\n",
                        "                    || contains(value, 0, 4, \"SAN \")) {\n",
                        "                result.append0('H');\n",
                        "            } else {\n",
                        "                result.append1('J', 'H');\n",
                        "            }\n",
                        "            index++;\n",
                        "        } else {\n",
                        "            if (index == 0 && !contains(value, index, 4, \"JOSE\")) {\n",
                        "                result.append1('J', 'A');\n",
                        "            } else if (isVowel(charAt(value, index - 1))\n",
                        "                    && !slavoGermanic\n",
                        "                    && (charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O')) {\n",
                        "                result.append1('J', 'H');\n",
                        "            } else if (index == value.length() - 1) {\n",
                        "                result.append1('J', ' ');\n",
                        "            } else if (!contains(value, index + 1, 1, L_T_K_S_N_M_B_Z)\n",
                        "                    && !contains(value, index - 1, 1, \"S\", \"K\", \"L\")) {\n",
                        "                result.append0('J');\n",
                        "            }\n",
                        "\n",
                        "            if (charAt(value, index + 1) == 'J') {\n",
                        "                index += 2;\n",
                        "            } else {\n",
                        "                index++;\n",
                        "            }\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleJ(String, DoubleMetaphoneResult, int, boolean)",
                    "parameters": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "857-860:append1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "778-780:isVowel"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleJ(self, value: str, result: DoubleMetaphoneResult, index: int, slavoGermanic: bool) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "462-471:handleH": {
                    "start": 462,
                    "end": 471,
                    "body": [
                        "    private int handleH(final String value, final DoubleMetaphoneResult result, int index) {\n",
                        "        if ((index == 0 || isVowel(charAt(value, index - 1)))\n",
                        "                && isVowel(charAt(value, index + 1))) {\n",
                        "            result.append0('H');\n",
                        "            index += 2;\n",
                        "        } else {\n",
                        "            index++;\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleH(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "778-780:isVowel"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleH(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "433-459:handleGH": {
                    "start": 433,
                    "end": 459,
                    "body": [
                        "    private int handleGH(final String value, final DoubleMetaphoneResult result, int index) {\n",
                        "        if (index > 0 && !isVowel(charAt(value, index - 1))) {\n",
                        "            result.append0('K');\n",
                        "            index += 2;\n",
                        "        } else if (index == 0) {\n",
                        "            if (charAt(value, index + 2) == 'I') {\n",
                        "                result.append0('J');\n",
                        "            } else {\n",
                        "                result.append0('K');\n",
                        "            }\n",
                        "            index += 2;\n",
                        "        } else if ((index > 1 && contains(value, index - 2, 1, \"B\", \"H\", \"D\"))\n",
                        "                || (index > 2 && contains(value, index - 3, 1, \"B\", \"H\", \"D\"))\n",
                        "                || (index > 3 && contains(value, index - 4, 1, \"B\", \"H\"))) {\n",
                        "            index += 2;\n",
                        "        } else {\n",
                        "            if (index > 2\n",
                        "                    && charAt(value, index - 1) == 'U'\n",
                        "                    && contains(value, index - 3, 1, \"C\", \"G\", \"L\", \"R\", \"T\")) {\n",
                        "                result.append0('F');\n",
                        "            } else if (index > 0 && charAt(value, index - 1) != 'I') {\n",
                        "                result.append0('K');\n",
                        "            }\n",
                        "            index += 2;\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleGH(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "778-780:isVowel"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleGH(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "378-430:handleG": {
                    "start": 378,
                    "end": 430,
                    "body": [
                        "    private int handleG(\n",
                        "            final String value,\n",
                        "            final DoubleMetaphoneResult result,\n",
                        "            int index,\n",
                        "            final boolean slavoGermanic) {\n",
                        "        if (charAt(value, index + 1) == 'H') {\n",
                        "            index = handleGH(value, result, index);\n",
                        "        } else if (charAt(value, index + 1) == 'N') {\n",
                        "            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {\n",
                        "                result.append3(\"KN\", \"N\");\n",
                        "            } else if (!contains(value, index + 2, 2, \"EY\")\n",
                        "                    && charAt(value, index + 1) != 'Y'\n",
                        "                    && !slavoGermanic) {\n",
                        "                result.append3(\"N\", \"KN\");\n",
                        "            } else {\n",
                        "                result.append2(\"KN\");\n",
                        "            }\n",
                        "            index = index + 2;\n",
                        "        } else if (contains(value, index + 1, 2, \"LI\") && !slavoGermanic) {\n",
                        "            result.append3(\"KL\", \"L\");\n",
                        "            index += 2;\n",
                        "        } else if (index == 0\n",
                        "                && (charAt(value, index + 1) == 'Y'\n",
                        "                        || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n",
                        "            result.append1('K', 'J');\n",
                        "            index += 2;\n",
                        "        } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) == 'Y')\n",
                        "                && !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\")\n",
                        "                && !contains(value, index - 1, 1, \"E\", \"I\")\n",
                        "                && !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n",
                        "            result.append1('K', 'J');\n",
                        "            index += 2;\n",
                        "        } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\")\n",
                        "                || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n",
                        "            if (contains(value, 0, 4, \"VAN \", \"VON \")\n",
                        "                    || contains(value, 0, 3, \"SCH\")\n",
                        "                    || contains(value, index + 1, 2, \"ET\")) {\n",
                        "                result.append0('K');\n",
                        "            } else if (contains(value, index + 1, 3, \"IER\")) {\n",
                        "                result.append0('J');\n",
                        "            } else {\n",
                        "                result.append1('J', 'K');\n",
                        "            }\n",
                        "            index += 2;\n",
                        "        } else if (charAt(value, index + 1) == 'G') {\n",
                        "            index += 2;\n",
                        "            result.append0('K');\n",
                        "        } else {\n",
                        "            index++;\n",
                        "            result.append0('K');\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleG(String, DoubleMetaphoneResult, int, boolean)",
                    "parameters": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "433-459:handleGH"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "778-780:isVowel"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "879-882:append3"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "874-877:append2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "857-860:append1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleG(self, value: str, result: DoubleMetaphoneResult, index: int, slavoGermanic: bool) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "358-375:handleD": {
                    "start": 358,
                    "end": 375,
                    "body": [
                        "    private int handleD(final String value, final DoubleMetaphoneResult result, int index) {\n",
                        "        if (contains(value, index, 2, \"DG\")) {\n",
                        "            if (contains(value, index + 2, 1, \"I\", \"E\", \"Y\")) {\n",
                        "                result.append0('J');\n",
                        "                index += 3;\n",
                        "            } else {\n",
                        "                result.append2(\"TK\");\n",
                        "                index += 2;\n",
                        "            }\n",
                        "        } else if (contains(value, index, 2, \"DT\", \"DD\")) {\n",
                        "            result.append0('T');\n",
                        "            index += 2;\n",
                        "        } else {\n",
                        "            result.append0('T');\n",
                        "            index++;\n",
                        "        }\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleD(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "874-877:append2"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleD(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "332-355:handleCH": {
                    "start": 332,
                    "end": 355,
                    "body": [
                        "    private int handleCH(final String value, final DoubleMetaphoneResult result, final int index) {\n",
                        "        if (index > 0 && contains(value, index, 4, \"CHAE\")) { // Michael\n",
                        "            result.append1('K', 'X');\n",
                        "            return index + 2;\n",
                        "        }\n",
                        "        if (conditionCH0(value, index)) {\n",
                        "            result.append0('K');\n",
                        "            return index + 2;\n",
                        "        }\n",
                        "        if (conditionCH1(value, index)) {\n",
                        "            result.append0('K');\n",
                        "            return index + 2;\n",
                        "        }\n",
                        "        if (index > 0) {\n",
                        "            if (contains(value, 0, 2, \"MC\")) {\n",
                        "                result.append0('K');\n",
                        "            } else {\n",
                        "                result.append1('X', 'K');\n",
                        "            }\n",
                        "        } else {\n",
                        "            result.append0('X');\n",
                        "        }\n",
                        "        return index + 2;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleCH(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "857-860:append1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "726-735:conditionCH0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "738-745:conditionCH1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleCH(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "314-329:handleCC": {
                    "start": 314,
                    "end": 329,
                    "body": [
                        "    private int handleCC(final String value, final DoubleMetaphoneResult result, int index) {\n",
                        "        if (contains(value, index + 2, 1, \"I\", \"E\", \"H\") && !contains(value, index + 2, 2, \"HU\")) {\n",
                        "            if ((index == 1 && charAt(value, index - 1) == 'A')\n",
                        "                    || contains(value, index - 1, 5, \"UCCEE\", \"UCCES\")) {\n",
                        "                result.append2(\"KS\");\n",
                        "            } else {\n",
                        "                result.append0('X');\n",
                        "            }\n",
                        "            index += 3;\n",
                        "        } else { // Pierce's rule\n",
                        "            result.append0('K');\n",
                        "            index += 2;\n",
                        "        }\n",
                        "\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleCC(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "874-877:append2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleCC(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "271-311:handleC": {
                    "start": 271,
                    "end": 311,
                    "body": [
                        "    private int handleC(final String value, final DoubleMetaphoneResult result, int index) {\n",
                        "        if (conditionC0(value, index)) { // very confusing, moved out\n",
                        "            result.append0('K');\n",
                        "            index += 2;\n",
                        "        } else if (index == 0 && contains(value, index, 6, \"CAESAR\")) {\n",
                        "            result.append0('S');\n",
                        "            index += 2;\n",
                        "        } else if (contains(value, index, 2, \"CH\")) {\n",
                        "            index = handleCH(value, result, index);\n",
                        "        } else if (contains(value, index, 2, \"CZ\") && !contains(value, index - 2, 4, \"WICZ\")) {\n",
                        "            result.append1('S', 'X');\n",
                        "            index += 2;\n",
                        "        } else if (contains(value, index + 1, 3, \"CIA\")) {\n",
                        "            result.append0('X');\n",
                        "            index += 3;\n",
                        "        } else if (contains(value, index, 2, \"CC\") && !(index == 1 && charAt(value, 0) == 'M')) {\n",
                        "            return handleCC(value, result, index);\n",
                        "        } else if (contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n",
                        "            result.append0('K');\n",
                        "            index += 2;\n",
                        "        } else if (contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n",
                        "            if (contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n",
                        "                result.append1('S', 'X');\n",
                        "            } else {\n",
                        "                result.append0('S');\n",
                        "            }\n",
                        "            index += 2;\n",
                        "        } else {\n",
                        "            result.append0('K');\n",
                        "            if (contains(value, index + 1, 2, \" C\", \" Q\", \" G\")) {\n",
                        "                index += 3;\n",
                        "            } else if (contains(value, index + 1, 1, \"C\", \"K\", \"Q\")\n",
                        "                    && !contains(value, index + 1, 2, \"CE\", \"CI\")) {\n",
                        "                index += 2;\n",
                        "            } else {\n",
                        "                index++;\n",
                        "            }\n",
                        "        }\n",
                        "\n",
                        "        return index;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleC(String, DoubleMetaphoneResult, int)",
                    "parameters": [
                        "value",
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "708-723:conditionC0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "825-839:contains"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "332-355:handleCH"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "857-860:append1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "814-819:charAt"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "314-329:handleCC"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleC(self, value: str, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "263-268:handleAEIOUY": {
                    "start": 263,
                    "end": 268,
                    "body": [
                        "    private int handleAEIOUY(final DoubleMetaphoneResult result, final int index) {\n",
                        "        if (index == 0) {\n",
                        "            result.append0('A');\n",
                        "        }\n",
                        "        return index + 1;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "handleAEIOUY(DoubleMetaphoneResult, int)",
                    "parameters": [
                        "result",
                        "index"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "852-855:append0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __handleAEIOUY(self, result: DoubleMetaphoneResult, index: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "54-54:maxCodeLen": {
                    "start": 54,
                    "end": 54,
                    "body": [
                        "    private int maxCodeLen = 4;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "partial_translation": [
                        "    __maxCodeLen: int = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "51-51:L_T_K_S_N_M_B_Z": {
                    "start": 51,
                    "end": 51,
                    "body": [
                        "    private static final String[] L_T_K_S_N_M_B_Z = {\"L\", \"T\", \"K\", \"S\", \"N\", \"M\", \"B\", \"Z\"};\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String[]",
                            "java.lang.String[]"
                        ]
                    ],
                    "partial_translation": [
                        "    __L_T_K_S_N_M_B_Z: typing.List[typing.List[str]] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "48-50:ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER": {
                    "start": 48,
                    "end": 50,
                    "body": [
                        "    private static final String[] ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER = {\n",
                        "        \"ES\", \"EP\", \"EB\", \"EL\", \"EY\", \"IB\", \"IL\", \"IN\", \"IE\", \"EI\", \"ER\"\n",
                        "    };\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String[]",
                            "java.lang.String[]"
                        ]
                    ],
                    "partial_translation": [
                        "    __ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER: typing.List[typing.List[str]] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "45-47:L_R_N_M_B_H_F_V_W_SPACE": {
                    "start": 45,
                    "end": 47,
                    "body": [
                        "    private static final String[] L_R_N_M_B_H_F_V_W_SPACE = {\n",
                        "        \"L\", \"R\", \"N\", \"M\", \"B\", \"H\", \"F\", \"V\", \"W\", \" \"\n",
                        "    };\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String[]",
                            "java.lang.String[]"
                        ]
                    ],
                    "partial_translation": [
                        "    __L_R_N_M_B_H_F_V_W_SPACE: typing.List[typing.List[str]] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "43-43:SILENT_START": {
                    "start": 43,
                    "end": 43,
                    "body": [
                        "    private static final String[] SILENT_START = {\"GN\", \"KN\", \"PN\", \"WR\", \"PS\"};\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String[]",
                            "java.lang.String[]"
                        ]
                    ],
                    "partial_translation": [
                        "    __SILENT_START: typing.List[typing.List[str]] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "40-40:VOWELS": {
                    "start": 40,
                    "end": 40,
                    "body": [
                        "    private static final String VOWELS = \"AEIOUY\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __VOWELS: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class DoubleMetaphone(StringEncoder):\n\n"
        },
        "DoubleMetaphoneResult": {
            "start": 842,
            "end": 842,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "DoubleMetaphone",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "910-913:isComplete": {
                    "start": 910,
                    "end": 913,
                    "body": [
                        "        public boolean isComplete() {\n",
                        "            return this.primary.length() >= this.maxLength\n",
                        "                    && this.alternate.length() >= this.maxLength;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isComplete()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/AbstractStringBuilder",
                            "length()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def isComplete(self) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "906-908:getAlternate": {
                    "start": 906,
                    "end": 908,
                    "body": [
                        "        public String getAlternate() {\n",
                        "            return this.alternate.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getAlternate()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def getAlternate(self) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "902-904:getPrimary": {
                    "start": 902,
                    "end": 904,
                    "body": [
                        "        public String getPrimary() {\n",
                        "            return this.primary.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getPrimary()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def getPrimary(self) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "893-900:appendAlternate1": {
                    "start": 893,
                    "end": 900,
                    "body": [
                        "        public void appendAlternate1(final String value) {\n",
                        "            final int addChars = this.maxLength - this.alternate.length();\n",
                        "            if (value.length() <= addChars) {\n",
                        "                this.alternate.append(value);\n",
                        "            } else {\n",
                        "                this.alternate.append(value.substring(0, addChars));\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "appendAlternate1(String)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/AbstractStringBuilder",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "substring(int,int)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def appendAlternate1(self, value: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "884-891:appendPrimary1": {
                    "start": 884,
                    "end": 891,
                    "body": [
                        "        public void appendPrimary1(final String value) {\n",
                        "            final int addChars = this.maxLength - this.primary.length();\n",
                        "            if (value.length() <= addChars) {\n",
                        "                this.primary.append(value);\n",
                        "            } else {\n",
                        "                this.primary.append(value.substring(0, addChars));\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "appendPrimary1(String)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/AbstractStringBuilder",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "substring(int,int)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def appendPrimary1(self, value: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "879-882:append3": {
                    "start": 879,
                    "end": 882,
                    "body": [
                        "        public void append3(final String primary, final String alternate) {\n",
                        "            appendPrimary1(primary);\n",
                        "            appendAlternate1(alternate);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "append3(String, String)",
                    "parameters": [
                        "primary",
                        "alternate"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "884-891:appendPrimary1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "893-900:appendAlternate1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def append3(self, primary: str, alternate: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "874-877:append2": {
                    "start": 874,
                    "end": 877,
                    "body": [
                        "        public void append2(final String value) {\n",
                        "            appendPrimary1(value);\n",
                        "            appendAlternate1(value);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "append2(String)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "884-891:appendPrimary1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "893-900:appendAlternate1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def append2(self, value: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "868-872:appendAlternate0": {
                    "start": 868,
                    "end": 872,
                    "body": [
                        "        public void appendAlternate0(final char value) {\n",
                        "            if (this.alternate.length() < this.maxLength) {\n",
                        "                this.alternate.append(value);\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "appendAlternate0(char)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/AbstractStringBuilder",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(char)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def appendAlternate0(self, value: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "862-866:appendPrimary0": {
                    "start": 862,
                    "end": 866,
                    "body": [
                        "        public void appendPrimary0(final char value) {\n",
                        "            if (this.primary.length() < this.maxLength) {\n",
                        "                this.primary.append(value);\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "appendPrimary0(char)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/AbstractStringBuilder",
                            "length()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(char)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def appendPrimary0(self, value: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "857-860:append1": {
                    "start": 857,
                    "end": 860,
                    "body": [
                        "        public void append1(final char primary, final char alternate) {\n",
                        "            appendPrimary0(primary);\n",
                        "            appendAlternate0(alternate);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "append1(char, char)",
                    "parameters": [
                        "primary",
                        "alternate"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "862-866:appendPrimary0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "868-872:appendAlternate0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def append1(self, primary: str, alternate: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "852-855:append0": {
                    "start": 852,
                    "end": 855,
                    "body": [
                        "        public void append0(final char value) {\n",
                        "            appendPrimary0(value);\n",
                        "            appendAlternate0(value);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "append0(char)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "862-866:appendPrimary0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphoneResult",
                            "868-872:appendAlternate0"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def append0(self, value: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "848-850:DoubleMetaphoneResult": {
                    "start": 848,
                    "end": 850,
                    "body": [
                        "        public DoubleMetaphoneResult(final int maxLength) {\n",
                        "            this.maxLength = maxLength;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "DoubleMetaphoneResult(int)",
                    "parameters": [
                        "maxLength"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, maxLength: int) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "846-846:maxLength": {
                    "start": 846,
                    "end": 846,
                    "body": [
                        "        private final int maxLength;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "partial_translation": [
                        "    __maxLength: int = 0",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "845-845:alternate": {
                    "start": 845,
                    "end": 845,
                    "body": [
                        "        private final StringBuilder alternate = new StringBuilder(getMaxCodeLen());\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "StringBuilder",
                            "java.lang.StringBuilder"
                        ]
                    ],
                    "partial_translation": [
                        "    __alternate: typing.Union[typing.List[str], io.StringIO] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "844-844:primary": {
                    "start": 844,
                    "end": 844,
                    "body": [
                        "        private final StringBuilder primary = new StringBuilder(getMaxCodeLen());\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "StringBuilder",
                            "java.lang.StringBuilder"
                        ]
                    ],
                    "partial_translation": [
                        "    __primary: typing.Union[typing.List[str], io.StringIO] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class DoubleMetaphoneResult:\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "from io import StringIO",
        "import io",
        "import typing\nfrom typing import *",
        "from src.main.org.apache.commons.codec.EncoderException import *",
        "from src.main.org.apache.commons.codec.StringEncoder import *",
        "from src.main.org.apache.commons.codec.binary.StringUtils import *"
    ]
}