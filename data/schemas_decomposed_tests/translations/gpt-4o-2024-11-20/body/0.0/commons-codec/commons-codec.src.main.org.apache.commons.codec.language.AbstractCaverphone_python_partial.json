{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
    "imports": {
        "20-20:import EncoderException": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.codec.EncoderException;\n"
            ]
        },
        "21-21:import StringEncoder": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.codec.StringEncoder;\n"
            ]
        }
    },
    "classes": {
        "AbstractCaverphone": {
            "start": 34,
            "end": 34,
            "is_abstract": true,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [
                "StringEncoder"
            ],
            "extends": [],
            "methods": {
                "50-57:encode": {
                    "start": 50,
                    "end": 57,
                    "body": [
                        "    public Object encode(final Object source) throws EncoderException {\n",
                        "        if (!(source instanceof String)) {\n",
                        "            throw new EncoderException(\n",
                        "                    \"Parameter supplied to Caverphone encode is not of type java.lang.String\",\n",
                        "                    null);\n",
                        "        }\n",
                        "        return this.encode((String) source);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ],
                    "signature": "encode(Object)",
                    "parameters": [
                        "source"
                    ],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.EncoderException",
                            "EncoderException",
                            "62-64:EncoderException"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoder",
                            "StringEncoder",
                            "30-30:encode"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encode(self, source: typing.Any) -> typing.Any:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "70-72:isEncodeEqual": {
                    "start": 70,
                    "end": 72,
                    "body": [
                        "    public boolean isEncodeEqual(final String str1, final String str2) throws EncoderException {\n",
                        "        return this.encode(str1).equals(this.encode(str2));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isEncodeEqual(String, String)",
                    "parameters": [
                        "str1",
                        "str2"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "equals(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoder",
                            "StringEncoder",
                            "30-30:encode"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def isEncodeEqual(self, str1: str, str2: str) -> bool:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "37-37:AbstractCaverphone": {
                    "start": 37,
                    "end": 37,
                    "body": [
                        "    public AbstractCaverphone() {}\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "AbstractCaverphone()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class AbstractCaverphone(StringEncoder, ABC):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "from abc import ABC",
        "import io",
        "import typing\nfrom typing import *",
        "from src.main.org.apache.commons.codec.EncoderException import *",
        "from src.main.org.apache.commons.codec.StringEncoder import *"
    ]
}