{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-validator/src/main/java/org/apache/commons/validator/routines/checkdigit/SedolCheckDigit.java",
    "imports": {},
    "classes": {
        "SedolCheckDigit": {
            "start": 38,
            "end": 38,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "ModulusCheckDigit"
            ],
            "methods": {
                "96-112:toInt": {
                    "start": 96,
                    "end": 112,
                    "body": [
                        "    protected int toInt(char character, int leftPos, int rightPos) throws CheckDigitException {\n",
                        "        int charValue = Character.getNumericValue(character);\n",
                        "        final int charMax =\n",
                        "                rightPos == 1 ? 9 : MAX_ALPHANUMERIC_VALUE; // CHECKSTYLE IGNORE MagicNumber\n",
                        "        if (charValue < 0 || charValue > charMax) {\n",
                        "            throw CheckDigitException.CheckDigitException1(\n",
                        "                    \"Invalid Character[\"\n",
                        "                            + leftPos\n",
                        "                            + \",\"\n",
                        "                            + rightPos\n",
                        "                            + \"] = '\"\n",
                        "                            + charValue\n",
                        "                            + \"' out of range 0 to \"\n",
                        "                            + charMax);\n",
                        "        }\n",
                        "        return charValue;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "toInt(char, int, int)",
                    "parameters": [
                        "character",
                        "leftPos",
                        "rightPos"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "getNumericValue(char)"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.CheckDigitException",
                            "CheckDigitException",
                            "34-36:CheckDigitException1"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _toInt(self, character: str, leftPos: int, rightPos: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "82-84:weightedValue": {
                    "start": 82,
                    "end": 84,
                    "body": [
                        "    protected int weightedValue(int charValue, int leftPos, int rightPos) {\n",
                        "        return charValue * POSITION_WEIGHT[leftPos - 1];\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "weightedValue(int, int, int)",
                    "parameters": [
                        "charValue",
                        "leftPos",
                        "rightPos"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _weightedValue(self, charValue: int, leftPos: int, rightPos: int) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "64-71:calculateModulus": {
                    "start": 64,
                    "end": 71,
                    "body": [
                        "    protected int calculateModulus(String code, boolean includesCheckDigit)\n",
                        "            throws CheckDigitException {\n",
                        "        if (code.length() > POSITION_WEIGHT.length) {\n",
                        "            throw CheckDigitException.CheckDigitException1(\n",
                        "                    \"Invalid Code Length = \" + code.length());\n",
                        "        }\n",
                        "        return super.calculateModulus(code, includesCheckDigit);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "calculateModulus(String, boolean)",
                    "parameters": [
                        "code",
                        "includesCheckDigit"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.CheckDigitException",
                            "CheckDigitException",
                            "34-36:CheckDigitException1"
                        ],
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit",
                            "ModulusCheckDigit",
                            "104-118:calculateModulus"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _calculateModulus(self, code: str, includesCheckDigit: bool) -> int:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "51-53:SedolCheckDigit": {
                    "start": 51,
                    "end": 53,
                    "body": [
                        "    public SedolCheckDigit() {\n",
                        "        super(10); // CHECKSTYLE IGNORE MagicNumber\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "SedolCheckDigit()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-validator.src.main.org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit",
                            "ModulusCheckDigit",
                            "46-48:ModulusCheckDigit"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {
                "45-45:SEDOL_CHECK_DIGIT": {
                    "start": 45,
                    "end": 45,
                    "body": [
                        "    public static final CheckDigit SEDOL_CHECK_DIGIT = new SedolCheckDigit();\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "CheckDigit",
                            "CheckDigit"
                        ]
                    ],
                    "partial_translation": [
                        "    SEDOL_CHECK_DIGIT: CheckDigit = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "48-48:POSITION_WEIGHT": {
                    "start": 48,
                    "end": 48,
                    "body": [
                        "    private static final int[] POSITION_WEIGHT = new int[] {1, 3, 1, 7, 3, 9, 1};\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ],
                    "partial_translation": [
                        "    __POSITION_WEIGHT: typing.List[int] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "42-42:MAX_ALPHANUMERIC_VALUE": {
                    "start": 42,
                    "end": 42,
                    "body": [
                        "    private static final int MAX_ALPHANUMERIC_VALUE = 35; // Character.getNumericValue('Z')\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "partial_translation": [
                        "    __MAX_ALPHANUMERIC_VALUE: int = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "40-40:serialVersionUID": {
                    "start": 40,
                    "end": 40,
                    "body": [
                        "    private static final long serialVersionUID = -8976881621148878443L;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "partial_translation": [
                        "    __serialVersionUID: int = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class SedolCheckDigit(ModulusCheckDigit):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import io",
        "import typing\nfrom typing import *",
        "import os",
        "from src.main.org.apache.commons.validator.routines.checkdigit.CheckDigit import *",
        "from src.main.org.apache.commons.validator.routines.checkdigit.CheckDigitException import *",
        "from src.main.org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit import *"
    ]
}