{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/test/java/org/apache/commons/codec/net/QCodecTest.java",
    "imports": {
        "31-31:import UnsupportedCharsetException": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.nio.charset.UnsupportedCharsetException;\n"
            ]
        },
        "27-27:import DecoderException": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.apache.commons.codec.DecoderException;\n"
            ]
        },
        "28-28:import EncoderException": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.apache.commons.codec.EncoderException;\n"
            ]
        },
        "29-29:import Test": {
            "start": 29,
            "end": 29,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "26-26:import CharEncoding": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.codec.CharEncoding;\n"
            ]
        },
        "24-24:import static Assert.fail": {
            "start": 24,
            "end": 24,
            "body": [
                "import static org.junit.Assert.fail;\n"
            ]
        },
        "20-20:import static Assert.assertEquals": {
            "start": 20,
            "end": 20,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        },
        "22-22:import static Assert.assertNull": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.junit.Assert.assertNull;\n"
            ]
        },
        "21-21:import static Assert.assertFalse": {
            "start": 21,
            "end": 21,
            "body": [
                "import static org.junit.Assert.assertFalse;\n"
            ]
        },
        "23-23:import static Assert.assertTrue": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.junit.Assert.assertTrue;\n"
            ]
        }
    },
    "classes": {
        "QCodecTest": {
            "start": 34,
            "end": 34,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "447-453:testLetUsMakeCloverHappy_test4_decomposed": {
                    "start": 447,
                    "end": 453,
                    "body": [
                        "    public void testLetUsMakeCloverHappy_test4_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(true);\n",
                        "        assertTrue(qcodec.isEncodeBlanks());\n",
                        "        qcodec.setEncodeBlanks(false);\n",
                        "        assertFalse(qcodec.isEncodeBlanks());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLetUsMakeCloverHappy_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "354-356:isEncodeBlanks"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(boolean)"
                        ]
                    ]
                },
                "439-444:testLetUsMakeCloverHappy_test3_decomposed": {
                    "start": 439,
                    "end": 444,
                    "body": [
                        "    public void testLetUsMakeCloverHappy_test3_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(true);\n",
                        "        assertTrue(qcodec.isEncodeBlanks());\n",
                        "        qcodec.setEncodeBlanks(false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLetUsMakeCloverHappy_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "354-356:isEncodeBlanks"
                        ]
                    ]
                },
                "432-436:testLetUsMakeCloverHappy_test2_decomposed": {
                    "start": 432,
                    "end": 436,
                    "body": [
                        "    public void testLetUsMakeCloverHappy_test2_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(true);\n",
                        "        assertTrue(qcodec.isEncodeBlanks());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLetUsMakeCloverHappy_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "354-356:isEncodeBlanks"
                        ]
                    ]
                },
                "426-429:testLetUsMakeCloverHappy_test1_decomposed": {
                    "start": 426,
                    "end": 429,
                    "body": [
                        "    public void testLetUsMakeCloverHappy_test1_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(true);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLetUsMakeCloverHappy_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ]
                    ]
                },
                "421-423:testLetUsMakeCloverHappy_test0_decomposed": {
                    "start": 421,
                    "end": 423,
                    "body": [
                        "    public void testLetUsMakeCloverHappy_test0_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testLetUsMakeCloverHappy_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ]
                    ]
                },
                "403-418:testEncodeDecodeBlanks_test7_decomposed": {
                    "start": 403,
                    "end": 418,
                    "body": [
                        "    public void testEncodeDecodeBlanks_test7_decomposed() throws Exception {\n",
                        "        final String plain = \"Mind those pesky blanks\";\n",
                        "        final String encoded1 = \"=?UTF-8?Q?Mind those pesky blanks?=\";\n",
                        "        final String encoded2 = \"=?UTF-8?Q?Mind_those_pesky_blanks?=\";\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(false);\n",
                        "        String s = qcodec.encode2(plain);\n",
                        "        assertEquals(\"Blanks encoding with the Q codec test\", encoded1, s);\n",
                        "        qcodec.setEncodeBlanks(true);\n",
                        "        s = qcodec.encode2(plain);\n",
                        "        assertEquals(\"Blanks encoding with the Q codec test\", encoded2, s);\n",
                        "        s = qcodec.decode0(encoded1);\n",
                        "        assertEquals(\"Blanks decoding with the Q codec test\", plain, s);\n",
                        "        s = qcodec.decode0(encoded2);\n",
                        "        assertEquals(\"Blanks decoding with the Q codec test\", plain, s);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeBlanks_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ]
                    ]
                },
                "386-400:testEncodeDecodeBlanks_test6_decomposed": {
                    "start": 386,
                    "end": 400,
                    "body": [
                        "    public void testEncodeDecodeBlanks_test6_decomposed() throws Exception {\n",
                        "        final String plain = \"Mind those pesky blanks\";\n",
                        "        final String encoded1 = \"=?UTF-8?Q?Mind those pesky blanks?=\";\n",
                        "        final String encoded2 = \"=?UTF-8?Q?Mind_those_pesky_blanks?=\";\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(false);\n",
                        "        String s = qcodec.encode2(plain);\n",
                        "        assertEquals(\"Blanks encoding with the Q codec test\", encoded1, s);\n",
                        "        qcodec.setEncodeBlanks(true);\n",
                        "        s = qcodec.encode2(plain);\n",
                        "        assertEquals(\"Blanks encoding with the Q codec test\", encoded2, s);\n",
                        "        s = qcodec.decode0(encoded1);\n",
                        "        assertEquals(\"Blanks decoding with the Q codec test\", plain, s);\n",
                        "        s = qcodec.decode0(encoded2);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeBlanks_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ]
                    ]
                },
                "371-383:testEncodeDecodeBlanks_test5_decomposed": {
                    "start": 371,
                    "end": 383,
                    "body": [
                        "    public void testEncodeDecodeBlanks_test5_decomposed() throws Exception {\n",
                        "        final String plain = \"Mind those pesky blanks\";\n",
                        "        final String encoded1 = \"=?UTF-8?Q?Mind those pesky blanks?=\";\n",
                        "        final String encoded2 = \"=?UTF-8?Q?Mind_those_pesky_blanks?=\";\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(false);\n",
                        "        String s = qcodec.encode2(plain);\n",
                        "        assertEquals(\"Blanks encoding with the Q codec test\", encoded1, s);\n",
                        "        qcodec.setEncodeBlanks(true);\n",
                        "        s = qcodec.encode2(plain);\n",
                        "        assertEquals(\"Blanks encoding with the Q codec test\", encoded2, s);\n",
                        "        s = qcodec.decode0(encoded1);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeBlanks_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ]
                    ]
                },
                "358-368:testEncodeDecodeBlanks_test4_decomposed": {
                    "start": 358,
                    "end": 368,
                    "body": [
                        "    public void testEncodeDecodeBlanks_test4_decomposed() throws Exception {\n",
                        "        final String plain = \"Mind those pesky blanks\";\n",
                        "        final String encoded1 = \"=?UTF-8?Q?Mind those pesky blanks?=\";\n",
                        "        final String encoded2 = \"=?UTF-8?Q?Mind_those_pesky_blanks?=\";\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(false);\n",
                        "        String s = qcodec.encode2(plain);\n",
                        "        assertEquals(\"Blanks encoding with the Q codec test\", encoded1, s);\n",
                        "        qcodec.setEncodeBlanks(true);\n",
                        "        s = qcodec.encode2(plain);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeBlanks_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "346-355:testEncodeDecodeBlanks_test3_decomposed": {
                    "start": 346,
                    "end": 355,
                    "body": [
                        "    public void testEncodeDecodeBlanks_test3_decomposed() throws Exception {\n",
                        "        final String plain = \"Mind those pesky blanks\";\n",
                        "        final String encoded1 = \"=?UTF-8?Q?Mind those pesky blanks?=\";\n",
                        "        final String encoded2 = \"=?UTF-8?Q?Mind_those_pesky_blanks?=\";\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(false);\n",
                        "        String s = qcodec.encode2(plain);\n",
                        "        assertEquals(\"Blanks encoding with the Q codec test\", encoded1, s);\n",
                        "        qcodec.setEncodeBlanks(true);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeBlanks_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "336-343:testEncodeDecodeBlanks_test2_decomposed": {
                    "start": 336,
                    "end": 343,
                    "body": [
                        "    public void testEncodeDecodeBlanks_test2_decomposed() throws Exception {\n",
                        "        final String plain = \"Mind those pesky blanks\";\n",
                        "        final String encoded1 = \"=?UTF-8?Q?Mind those pesky blanks?=\";\n",
                        "        final String encoded2 = \"=?UTF-8?Q?Mind_those_pesky_blanks?=\";\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(false);\n",
                        "        String s = qcodec.encode2(plain);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeBlanks_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ]
                    ]
                },
                "327-333:testEncodeDecodeBlanks_test1_decomposed": {
                    "start": 327,
                    "end": 333,
                    "body": [
                        "    public void testEncodeDecodeBlanks_test1_decomposed() throws Exception {\n",
                        "        final String plain = \"Mind those pesky blanks\";\n",
                        "        final String encoded1 = \"=?UTF-8?Q?Mind those pesky blanks?=\";\n",
                        "        final String encoded2 = \"=?UTF-8?Q?Mind_those_pesky_blanks?=\";\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        qcodec.setEncodeBlanks(false);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeBlanks_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "363-365:setEncodeBlanks"
                        ]
                    ]
                },
                "319-324:testEncodeDecodeBlanks_test0_decomposed": {
                    "start": 319,
                    "end": 324,
                    "body": [
                        "    public void testEncodeDecodeBlanks_test0_decomposed() throws Exception {\n",
                        "        final String plain = \"Mind those pesky blanks\";\n",
                        "        final String encoded1 = \"=?UTF-8?Q?Mind those pesky blanks?=\";\n",
                        "        final String encoded2 = \"=?UTF-8?Q?Mind_those_pesky_blanks?=\";\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeBlanks_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ]
                    ]
                },
                "303-316:testDecodeObjects_test3_decomposed": {
                    "start": 303,
                    "end": 316,
                    "body": [
                        "    public void testDecodeObjects_test3_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String decoded = \"=?UTF-8?Q?1+1 =3D 2?=\";\n",
                        "        final String plain = (String) qcodec.decode1((Object) decoded);\n",
                        "        assertEquals(\"Basic Q decoding test\", \"1+1 = 2\", plain);\n",
                        "        final Object result = qcodec.decode1((Object) null);\n",
                        "        assertNull(\"Decoding a null Object should return null\", result);\n",
                        "        try {\n",
                        "            final Object dObj = Double.valueOf(3.0d);\n",
                        "            qcodec.decode1(dObj);\n",
                        "            fail(\"Trying to url encode a Double object should cause an exception.\");\n",
                        "        } catch (final DecoderException ee) {\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDecodeObjects_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "318-328:decode1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail(java.lang.String)"
                        ]
                    ]
                },
                "294-300:testDecodeObjects_test2_decomposed": {
                    "start": 294,
                    "end": 300,
                    "body": [
                        "    public void testDecodeObjects_test2_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String decoded = \"=?UTF-8?Q?1+1 =3D 2?=\";\n",
                        "        final String plain = (String) qcodec.decode1((Object) decoded);\n",
                        "        assertEquals(\"Basic Q decoding test\", \"1+1 = 2\", plain);\n",
                        "        final Object result = qcodec.decode1((Object) null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDecodeObjects_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "318-328:decode1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "287-291:testDecodeObjects_test1_decomposed": {
                    "start": 287,
                    "end": 291,
                    "body": [
                        "    public void testDecodeObjects_test1_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String decoded = \"=?UTF-8?Q?1+1 =3D 2?=\";\n",
                        "        final String plain = (String) qcodec.decode1((Object) decoded);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDecodeObjects_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "318-328:decode1"
                        ]
                    ]
                },
                "282-284:testDecodeObjects_test0_decomposed": {
                    "start": 282,
                    "end": 284,
                    "body": [
                        "    public void testDecodeObjects_test0_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDecodeObjects_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ]
                    ]
                },
                "277-279:testInvalidEncoding_test0_decomposed": {
                    "start": 277,
                    "end": 279,
                    "body": [
                        "    public void testInvalidEncoding_test0_decomposed()  {\n",
                        "        QCodec.QCodec0(\"NONSENSE\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(expected = UnsupportedCharsetException.class)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testInvalidEncoding_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "115-117:QCodec0"
                        ]
                    ]
                },
                "261-274:testEncodeObjects_test3_decomposed": {
                    "start": 261,
                    "end": 274,
                    "body": [
                        "    public void testEncodeObjects_test3_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String plain = \"1+1 = 2\";\n",
                        "        final String encoded = (String) qcodec.encode3((Object) plain);\n",
                        "        assertEquals(\"Basic Q encoding test\", \"=?UTF-8?Q?1+1 =3D 2?=\", encoded);\n",
                        "        final Object result = qcodec.encode3((Object) null);\n",
                        "        assertNull(\"Encoding a null Object should return null\", result);\n",
                        "        try {\n",
                        "            final Object dObj = Double.valueOf(3.0d);\n",
                        "            qcodec.encode3(dObj);\n",
                        "            fail(\"Trying to url encode a Double object should cause an exception.\");\n",
                        "        } catch (final EncoderException ee) {\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeObjects_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "292-302:encode3"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail(java.lang.String)"
                        ]
                    ]
                },
                "252-258:testEncodeObjects_test2_decomposed": {
                    "start": 252,
                    "end": 258,
                    "body": [
                        "    public void testEncodeObjects_test2_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String plain = \"1+1 = 2\";\n",
                        "        final String encoded = (String) qcodec.encode3((Object) plain);\n",
                        "        assertEquals(\"Basic Q encoding test\", \"=?UTF-8?Q?1+1 =3D 2?=\", encoded);\n",
                        "        final Object result = qcodec.encode3((Object) null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeObjects_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "292-302:encode3"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ]
                    ]
                },
                "245-249:testEncodeObjects_test1_decomposed": {
                    "start": 245,
                    "end": 249,
                    "body": [
                        "    public void testEncodeObjects_test1_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String plain = \"1+1 = 2\";\n",
                        "        final String encoded = (String) qcodec.encode3((Object) plain);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeObjects_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "292-302:encode3"
                        ]
                    ]
                },
                "240-242:testEncodeObjects_test0_decomposed": {
                    "start": 240,
                    "end": 242,
                    "body": [
                        "    public void testEncodeObjects_test0_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeObjects_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ]
                    ]
                },
                "232-237:testDecodeStringWithNull_test2_decomposed": {
                    "start": 232,
                    "end": 237,
                    "body": [
                        "    public void testDecodeStringWithNull_test2_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String test = null;\n",
                        "        final String result = qcodec.decode0(test);\n",
                        "        assertNull(\"Result should be null\", result);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDecodeStringWithNull_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "225-229:testDecodeStringWithNull_test1_decomposed": {
                    "start": 225,
                    "end": 229,
                    "body": [
                        "    public void testDecodeStringWithNull_test1_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String test = null;\n",
                        "        final String result = qcodec.decode0(test);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDecodeStringWithNull_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ]
                    ]
                },
                "220-222:testDecodeStringWithNull_test0_decomposed": {
                    "start": 220,
                    "end": 222,
                    "body": [
                        "    public void testDecodeStringWithNull_test0_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testDecodeStringWithNull_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ]
                    ]
                },
                "212-217:testEncodeStringWithNull_test2_decomposed": {
                    "start": 212,
                    "end": 217,
                    "body": [
                        "    public void testEncodeStringWithNull_test2_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String test = null;\n",
                        "        final String result = qcodec.encode1(test, \"charset\");\n",
                        "        assertNull(\"Result should be null\", result);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeStringWithNull_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "220-230:encode1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "205-209:testEncodeStringWithNull_test1_decomposed": {
                    "start": 205,
                    "end": 209,
                    "body": [
                        "    public void testEncodeStringWithNull_test1_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String test = null;\n",
                        "        final String result = qcodec.encode1(test, \"charset\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeStringWithNull_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "220-230:encode1"
                        ]
                    ]
                },
                "200-202:testEncodeStringWithNull_test0_decomposed": {
                    "start": 200,
                    "end": 202,
                    "body": [
                        "    public void testEncodeStringWithNull_test0_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeStringWithNull_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ]
                    ]
                },
                "193-197:testEncodeDecodeNull_test2_decomposed": {
                    "start": 193,
                    "end": 197,
                    "body": [
                        "    public void testEncodeDecodeNull_test2_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        assertNull(\"Null string Q encoding test\", qcodec.encode2((String) null));\n",
                        "        assertNull(\"Null string Q decoding test\", qcodec.decode0((String) null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeNull_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ]
                    ]
                },
                "187-190:testEncodeDecodeNull_test1_decomposed": {
                    "start": 187,
                    "end": 190,
                    "body": [
                        "    public void testEncodeDecodeNull_test1_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        assertNull(\"Null string Q encoding test\", qcodec.encode2((String) null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeNull_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ]
                    ]
                },
                "182-184:testEncodeDecodeNull_test0_decomposed": {
                    "start": 182,
                    "end": 184,
                    "body": [
                        "    public void testEncodeDecodeNull_test0_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEncodeDecodeNull_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ]
                    ]
                },
                "173-179:testUnsafeEncodeDecode_test2_decomposed": {
                    "start": 173,
                    "end": 179,
                    "body": [
                        "    public void testUnsafeEncodeDecode_test2_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String plain = \"?_=\\r\\n\";\n",
                        "        final String encoded = qcodec.encode2(plain);\n",
                        "        assertEquals(\"Unsafe chars Q encoding test\", \"=?UTF-8?Q?=3F=5F=3D=0D=0A?=\", encoded);\n",
                        "        assertEquals(\"Unsafe chars Q decoding test\", plain, qcodec.decode0(encoded));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsafeEncodeDecode_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ]
                    ]
                },
                "166-170:testUnsafeEncodeDecode_test1_decomposed": {
                    "start": 166,
                    "end": 170,
                    "body": [
                        "    public void testUnsafeEncodeDecode_test1_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String plain = \"?_=\\r\\n\";\n",
                        "        final String encoded = qcodec.encode2(plain);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsafeEncodeDecode_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ]
                    ]
                },
                "161-163:testUnsafeEncodeDecode_test0_decomposed": {
                    "start": 161,
                    "end": 163,
                    "body": [
                        "    public void testUnsafeEncodeDecode_test0_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUnsafeEncodeDecode_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ]
                    ]
                },
                "152-158:testBasicEncodeDecode_test2_decomposed": {
                    "start": 152,
                    "end": 158,
                    "body": [
                        "    public void testBasicEncodeDecode_test2_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String plain = \"= Hello there =\\r\\n\";\n",
                        "        final String encoded = qcodec.encode2(plain);\n",
                        "        assertEquals(\"Basic Q encoding test\", \"=?UTF-8?Q?=3D Hello there =3D=0D=0A?=\", encoded);\n",
                        "        assertEquals(\"Basic Q decoding test\", plain, qcodec.decode0(encoded));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBasicEncodeDecode_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ]
                    ]
                },
                "145-149:testBasicEncodeDecode_test1_decomposed": {
                    "start": 145,
                    "end": 149,
                    "body": [
                        "    public void testBasicEncodeDecode_test1_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        final String plain = \"= Hello there =\\r\\n\";\n",
                        "        final String encoded = qcodec.encode2(plain);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBasicEncodeDecode_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ]
                    ]
                },
                "140-142:testBasicEncodeDecode_test0_decomposed": {
                    "start": 140,
                    "end": 142,
                    "body": [
                        "    public void testBasicEncodeDecode_test0_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testBasicEncodeDecode_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ]
                    ]
                },
                "125-137:testUTF8RoundTrip_test5_decomposed": {
                    "start": 125,
                    "end": 137,
                    "body": [
                        "    public void testUTF8RoundTrip_test5_decomposed() throws Exception {\n",
                        "        final String ru_msg = constructString(RUSSIAN_STUFF_UNICODE);\n",
                        "        final String ch_msg = constructString(SWISS_GERMAN_STUFF_UNICODE);\n",
                        "        final QCodec qcodec = QCodec.QCodec0(CharEncoding.UTF_8);\n",
                        "        assertEquals(\n",
                        "                \"=?UTF-8?Q?=D0=92=D1=81=D0=B5=D0=BC=5F=D0=BF=D1=80=D0=B8=D0=B2=D0=B5=D1=82?=\",\n",
                        "                qcodec.encode2(ru_msg));\n",
                        "        assertEquals(\"=?UTF-8?Q?Gr=C3=BCezi=5Fz=C3=A4m=C3=A4?=\", qcodec.encode2(ch_msg));\n",
                        "        qcodec.encode2(ru_msg);\n",
                        "        assertEquals(ru_msg, qcodec.decode0(qcodec.encode2(ru_msg)));\n",
                        "        qcodec.encode2(ch_msg);\n",
                        "        assertEquals(ch_msg, qcodec.decode0(qcodec.encode2(ch_msg)));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUTF8RoundTrip_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.QCodecTest",
                            "QCodecTest",
                            "44-52:constructString"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "115-117:QCodec0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ]
                    ]
                },
                "111-122:testUTF8RoundTrip_test4_decomposed": {
                    "start": 111,
                    "end": 122,
                    "body": [
                        "    public void testUTF8RoundTrip_test4_decomposed() throws Exception {\n",
                        "        final String ru_msg = constructString(RUSSIAN_STUFF_UNICODE);\n",
                        "        final String ch_msg = constructString(SWISS_GERMAN_STUFF_UNICODE);\n",
                        "        final QCodec qcodec = QCodec.QCodec0(CharEncoding.UTF_8);\n",
                        "        assertEquals(\n",
                        "                \"=?UTF-8?Q?=D0=92=D1=81=D0=B5=D0=BC=5F=D0=BF=D1=80=D0=B8=D0=B2=D0=B5=D1=82?=\",\n",
                        "                qcodec.encode2(ru_msg));\n",
                        "        assertEquals(\"=?UTF-8?Q?Gr=C3=BCezi=5Fz=C3=A4m=C3=A4?=\", qcodec.encode2(ch_msg));\n",
                        "        qcodec.encode2(ru_msg);\n",
                        "        assertEquals(ru_msg, qcodec.decode0(qcodec.encode2(ru_msg)));\n",
                        "        qcodec.encode2(ch_msg);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUTF8RoundTrip_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.QCodecTest",
                            "QCodecTest",
                            "44-52:constructString"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "115-117:QCodec0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ]
                    ]
                },
                "98-108:testUTF8RoundTrip_test3_decomposed": {
                    "start": 98,
                    "end": 108,
                    "body": [
                        "    public void testUTF8RoundTrip_test3_decomposed() throws Exception {\n",
                        "        final String ru_msg = constructString(RUSSIAN_STUFF_UNICODE);\n",
                        "        final String ch_msg = constructString(SWISS_GERMAN_STUFF_UNICODE);\n",
                        "        final QCodec qcodec = QCodec.QCodec0(CharEncoding.UTF_8);\n",
                        "        assertEquals(\n",
                        "                \"=?UTF-8?Q?=D0=92=D1=81=D0=B5=D0=BC=5F=D0=BF=D1=80=D0=B8=D0=B2=D0=B5=D1=82?=\",\n",
                        "                qcodec.encode2(ru_msg));\n",
                        "        assertEquals(\"=?UTF-8?Q?Gr=C3=BCezi=5Fz=C3=A4m=C3=A4?=\", qcodec.encode2(ch_msg));\n",
                        "        qcodec.encode2(ru_msg);\n",
                        "        assertEquals(ru_msg, qcodec.decode0(qcodec.encode2(ru_msg)));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUTF8RoundTrip_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.QCodecTest",
                            "QCodecTest",
                            "44-52:constructString"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "115-117:QCodec0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "267-276:decode0"
                        ]
                    ]
                },
                "86-95:testUTF8RoundTrip_test2_decomposed": {
                    "start": 86,
                    "end": 95,
                    "body": [
                        "    public void testUTF8RoundTrip_test2_decomposed() throws Exception {\n",
                        "        final String ru_msg = constructString(RUSSIAN_STUFF_UNICODE);\n",
                        "        final String ch_msg = constructString(SWISS_GERMAN_STUFF_UNICODE);\n",
                        "        final QCodec qcodec = QCodec.QCodec0(CharEncoding.UTF_8);\n",
                        "        assertEquals(\n",
                        "                \"=?UTF-8?Q?=D0=92=D1=81=D0=B5=D0=BC=5F=D0=BF=D1=80=D0=B8=D0=B2=D0=B5=D1=82?=\",\n",
                        "                qcodec.encode2(ru_msg));\n",
                        "        assertEquals(\"=?UTF-8?Q?Gr=C3=BCezi=5Fz=C3=A4m=C3=A4?=\", qcodec.encode2(ch_msg));\n",
                        "        qcodec.encode2(ru_msg);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUTF8RoundTrip_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.QCodecTest",
                            "QCodecTest",
                            "44-52:constructString"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "115-117:QCodec0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "246-251:encode2"
                        ]
                    ]
                },
                "79-83:testUTF8RoundTrip_test1_decomposed": {
                    "start": 79,
                    "end": 83,
                    "body": [
                        "    public void testUTF8RoundTrip_test1_decomposed() throws Exception {\n",
                        "        final String ru_msg = constructString(RUSSIAN_STUFF_UNICODE);\n",
                        "        final String ch_msg = constructString(SWISS_GERMAN_STUFF_UNICODE);\n",
                        "        final QCodec qcodec = QCodec.QCodec0(CharEncoding.UTF_8);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUTF8RoundTrip_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.QCodecTest",
                            "QCodecTest",
                            "44-52:constructString"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "115-117:QCodec0"
                        ]
                    ]
                },
                "73-76:testUTF8RoundTrip_test0_decomposed": {
                    "start": 73,
                    "end": 76,
                    "body": [
                        "    public void testUTF8RoundTrip_test0_decomposed() throws Exception {\n",
                        "        final String ru_msg = constructString(RUSSIAN_STUFF_UNICODE);\n",
                        "        final String ch_msg = constructString(SWISS_GERMAN_STUFF_UNICODE);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUTF8RoundTrip_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.test.org.apache.commons.codec.net.QCodecTest",
                            "QCodecTest",
                            "44-52:constructString"
                        ]
                    ]
                },
                "66-70:testNullInput_test2_decomposed": {
                    "start": 66,
                    "end": 70,
                    "body": [
                        "    public void testNullInput_test2_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        assertNull(qcodec.doDecoding(null));\n",
                        "        assertNull(qcodec.doEncoding(null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullInput_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "165-189:doDecoding"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "149-162:doEncoding"
                        ]
                    ]
                },
                "60-63:testNullInput_test1_decomposed": {
                    "start": 60,
                    "end": 63,
                    "body": [
                        "    public void testNullInput_test1_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "        assertNull(qcodec.doDecoding(null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullInput_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "165-189:doDecoding"
                        ]
                    ]
                },
                "55-57:testNullInput_test0_decomposed": {
                    "start": 55,
                    "end": 57,
                    "body": [
                        "    public void testNullInput_test0_decomposed() throws Exception {\n",
                        "        final QCodec qcodec = QCodec.QCodec2();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNullInput_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.net.QCodec",
                            "QCodec",
                            "119-121:QCodec2"
                        ]
                    ]
                },
                "44-52:constructString": {
                    "start": 44,
                    "end": 52,
                    "body": [
                        "    private String constructString(final int[] unicodeChars) {\n",
                        "        final StringBuilder buffer = new StringBuilder();\n",
                        "        if (unicodeChars != null) {\n",
                        "            for (final int unicodeChar : unicodeChars) {\n",
                        "                buffer.append((char) unicodeChar);\n",
                        "            }\n",
                        "        }\n",
                        "        return buffer.toString();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "constructString(int[])",
                    "parameters": [
                        "unicodeChars"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(char)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ]
                }
            },
            "fields": {
                "40-42:RUSSIAN_STUFF_UNICODE": {
                    "start": 40,
                    "end": 42,
                    "body": [
                        "    static final int RUSSIAN_STUFF_UNICODE[] = {\n",
                        "        0x412, 0x441, 0x435, 0x43C, 0x5F, 0x43F, 0x440, 0x438, 0x432, 0x435, 0x442\n",
                        "    };\n"
                    ],
                    "modifiers": [
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ]
                },
                "36-38:SWISS_GERMAN_STUFF_UNICODE": {
                    "start": 36,
                    "end": 38,
                    "body": [
                        "    static final int SWISS_GERMAN_STUFF_UNICODE[] = {\n",
                        "        0x47, 0x72, 0xFC, 0x65, 0x7A, 0x69, 0x5F, 0x7A, 0xE4, 0x6D, 0xE4\n",
                        "    };\n"
                    ],
                    "modifiers": [
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "int[]",
                            "int[]"
                        ]
                    ]
                }
            }
        }
    }
}