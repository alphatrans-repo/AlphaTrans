{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/JavaFastPFOR/src/test/java/me/lemire/integercompression/IntCompressorTest.java",
    "imports": {
        "10-10:import Arrays": {
            "start": 10,
            "end": 10,
            "body": [
                "import java.util.Arrays;\n"
            ]
        },
        "13-13:import Test": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "16-16:import IntegratedIntCompressor": {
            "start": 16,
            "end": 16,
            "body": [
                "import me.lemire.integercompression.differential.IntegratedIntCompressor;\n"
            ]
        },
        "15-15:import IntegratedBinaryPacking": {
            "start": 15,
            "end": 15,
            "body": [
                "import me.lemire.integercompression.differential.IntegratedBinaryPacking;\n"
            ]
        },
        "17-17:import IntegratedVariableByte": {
            "start": 17,
            "end": 17,
            "body": [
                "import me.lemire.integercompression.differential.IntegratedVariableByte;\n"
            ]
        },
        "18-18:import SkippableIntegratedComposition": {
            "start": 18,
            "end": 18,
            "body": [
                "import me.lemire.integercompression.differential.SkippableIntegratedComposition;\n"
            ]
        },
        "12-12:import Assert": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.junit.Assert;\n"
            ]
        }
    },
    "classes": {
        "IntCompressorTest": {
            "start": 23,
            "end": 23,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "102-113:basicIntegratedTest_test0_decomposed": {
                    "start": 102,
                    "end": 113,
                    "body": [
                        "    public void basicIntegratedTest_test0_decomposed()  {\n",
                        "        for (int N = 1; N <= 10000; N *= 10) {\n",
                        "            int[] orig = new int[N];\n",
                        "            for (int k = 0; k < N; k++)\n",
                        "                orig[k] = 3 * k + 5;\n",
                        "            for (IntegratedIntCompressor i : iic) {\n",
                        "                int[] comp = i.compress(orig);\n",
                        "                int[] back = i.uncompress(comp);\n",
                        "                Assert.assertArrayEquals(back, orig);\n",
                        "            }\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "basicIntegratedTest_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "52-65:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "73-81:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(int[],int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def basicIntegratedTest_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "89-99:superSimpleExample_test3_decomposed": {
                    "start": 89,
                    "end": 99,
                    "body": [
                        "    public void superSimpleExample_test3_decomposed()  {\n",
                        "        IntegratedIntCompressor iic = new IntegratedIntCompressor(1, null);\n",
                        "        int[] data = new int[2342351];\n",
                        "        for(int k = 0; k < data.length; ++k)\n",
                        "          data[k] = k;\n",
                        "        System.out.println(\"Compressing \"+data.length+\" integers using friendly interface\");\n",
                        "        int[] compressed = iic.compress(data);\n",
                        "        int[] recov = iic.uncompress(compressed);\n",
                        "        System.out.println(\"compressed from \"+data.length*4/1024+\"KB to \"+compressed.length*4/1024+\"KB\");\n",
                        "        if(!Arrays.equals(recov,data)) throw new RuntimeException(\"bug\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "superSimpleExample_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "29-39:IntegratedIntCompressor"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "52-65:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "73-81:uncompress"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "equals(int[],int[])"
                        ],
                        [
                            "library",
                            "java.base/java/lang/RuntimeException",
                            "RuntimeException(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def superSimpleExample_test3_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "78-86:superSimpleExample_test2_decomposed": {
                    "start": 78,
                    "end": 86,
                    "body": [
                        "    public void superSimpleExample_test2_decomposed()  {\n",
                        "        IntegratedIntCompressor iic = new IntegratedIntCompressor(1, null);\n",
                        "        int[] data = new int[2342351];\n",
                        "        for(int k = 0; k < data.length; ++k)\n",
                        "          data[k] = k;\n",
                        "        System.out.println(\"Compressing \"+data.length+\" integers using friendly interface\");\n",
                        "        int[] compressed = iic.compress(data);\n",
                        "        int[] recov = iic.uncompress(compressed);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "superSimpleExample_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "29-39:IntegratedIntCompressor"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "52-65:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "73-81:uncompress"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def superSimpleExample_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "68-75:superSimpleExample_test1_decomposed": {
                    "start": 68,
                    "end": 75,
                    "body": [
                        "    public void superSimpleExample_test1_decomposed()  {\n",
                        "        IntegratedIntCompressor iic = new IntegratedIntCompressor(1, null);\n",
                        "        int[] data = new int[2342351];\n",
                        "        for(int k = 0; k < data.length; ++k)\n",
                        "          data[k] = k;\n",
                        "        System.out.println(\"Compressing \"+data.length+\" integers using friendly interface\");\n",
                        "        int[] compressed = iic.compress(data);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "superSimpleExample_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "29-39:IntegratedIntCompressor"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "52-65:compress"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintStream",
                            "println(java.lang.String)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def superSimpleExample_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "63-65:superSimpleExample_test0_decomposed": {
                    "start": 63,
                    "end": 65,
                    "body": [
                        "    public void superSimpleExample_test0_decomposed()  {\n",
                        "        IntegratedIntCompressor iic = new IntegratedIntCompressor(1, null);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "superSimpleExample_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedIntCompressor",
                            "IntegratedIntCompressor",
                            "29-39:IntegratedIntCompressor"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def superSimpleExample_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "49-60:basicTest_test0_decomposed": {
                    "start": 49,
                    "end": 60,
                    "body": [
                        "    public void basicTest_test0_decomposed()  {\n",
                        "        for (int N = 1; N <= 10000; N *= 10) {\n",
                        "            int[] orig = new int[N];\n",
                        "            for (int k = 0; k < N; k++)\n",
                        "                orig[k] = 3 * k + 5;\n",
                        "            for (IntCompressor i : ic) {\n",
                        "                int[] comp = i.compress(orig);\n",
                        "                int[] back = i.uncompress(comp);\n",
                        "                Assert.assertArrayEquals(back, orig);\n",
                        "            }\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "basicTest_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntCompressor",
                            "IntCompressor",
                            "49-63:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntCompressor",
                            "IntCompressor",
                            "71-79:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals(int[],int[])"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def basicTest_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "30-33:ic": {
                    "start": 30,
                    "end": 33,
                    "body": [
                        "    IntCompressor[] ic = {\n",
                        "            new IntCompressor(0, new VariableByte()),\n",
                        "            new IntCompressor(0, new SkippableComposition(new BinaryPacking(),\n",
                        "                    new VariableByte())) };\n"
                    ],
                    "modifiers": [],
                    "types": [
                        [
                            "IntCompressor[]",
                            "IntCompressor[]"
                        ]
                    ],
                    "partial_translation": [
                        "    ic: typing.List[IntCompressor] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "24-29:iic": {
                    "start": 24,
                    "end": 29,
                    "body": [
                        "    IntegratedIntCompressor[] iic = {\n",
                        "            new IntegratedIntCompressor(0, new IntegratedVariableByte()),\n",
                        "            new IntegratedIntCompressor(0, new SkippableIntegratedComposition(\n",
                        "                            new IntegratedBinaryPacking(),\n",
                        "                            new IntegratedVariableByte()))\n",
                        " };\n"
                    ],
                    "modifiers": [],
                    "types": [
                        [
                            "IntegratedIntCompressor[]",
                            "IntegratedIntCompressor[]"
                        ]
                    ],
                    "partial_translation": [
                        "    iic: typing.List[IntegratedIntCompressor] = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class IntCompressorTest(unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import typing\nfrom typing import *",
        "import os",
        "import unittest",
        "from src.main.me.lemire.integercompression.BinaryPacking import *",
        "from src.main.me.lemire.integercompression.IntCompressor import *",
        "from src.main.me.lemire.integercompression.SkippableComposition import *",
        "from src.main.me.lemire.integercompression.SkippableIntegerCODEC import *",
        "from src.main.me.lemire.integercompression.VariableByte import *",
        "from src.main.me.lemire.integercompression.differential.IntegratedBinaryPacking import *",
        "from src.main.me.lemire.integercompression.differential.IntegratedIntCompressor import *",
        "from src.main.me.lemire.integercompression.differential.IntegratedVariableByte import *",
        "from src.main.me.lemire.integercompression.differential.SkippableIntegratedComposition import *",
        "from src.main.me.lemire.integercompression.differential.SkippableIntegratedIntegerCODEC import *"
    ]
}