{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/VertexPair.java",
    "imports": {
        "28-28:import Serializable": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.io.Serializable;\n"
            ]
        },
        "26-26:import static String.format": {
            "start": 26,
            "end": 26,
            "body": [
                "import static java.lang.String.format;\n"
            ]
        },
        "22-22:import static Assertions.checkNotNull": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.utils.Assertions.checkNotNull;\n"
            ]
        },
        "23-23:import static Objects.eq": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.apache.commons.graph.utils.Objects.eq;\n"
            ]
        },
        "24-24:import static Objects.hash": {
            "start": 24,
            "end": 24,
            "body": [
                "import static org.apache.commons.graph.utils.Objects.hash;\n"
            ]
        }
    },
    "classes": {
        "VertexPair": {
            "start": 35,
            "end": 35,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [
                "Serializable",
                "VertexPair<>"
            ],
            "extends": [],
            "methods": {
                "93-95:toString": {
                    "start": 93,
                    "end": 95,
                    "body": [
                        "    public String toString() {\n",
                        "        return format(\"[head=%s, tail=%s]\", head, tail);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "format(java.lang.String,java.lang.Object[])"
                        ]
                    ]
                },
                "87-90:hashCode": {
                    "start": 87,
                    "end": 90,
                    "body": [
                        "    public int hashCode() {\n",
                        "        final int prime = 31;\n",
                        "        return hash(1, prime, head, tail);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "hashCode()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Objects",
                            "Objects",
                            "44-51:hash"
                        ]
                    ]
                },
                "57-69:equals": {
                    "start": 57,
                    "end": 69,
                    "body": [
                        "    public boolean equals(Object obj) {\n",
                        "        if (this == obj) {\n",
                        "            return true;\n",
                        "        }\n",
                        "\n",
                        "        if (obj == null || getClass() != obj.getClass()) {\n",
                        "            return false;\n",
                        "        }\n",
                        "\n",
                        "        @SuppressWarnings(\"unchecked\") // equals() invoked against only same VertexPair type\n",
                        "        VertexPair<V> other = (VertexPair<V>) obj;\n",
                        "        return eq(head, other.getHead()) && eq(tail, other.getTail());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "equals(Object)",
                    "parameters": [
                        "obj"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "getClass()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Objects",
                            "Objects",
                            "32-34:eq"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.VertexPair",
                            "VertexPair",
                            "74-76:getHead"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.VertexPair",
                            "VertexPair",
                            "81-83:getTail"
                        ]
                    ]
                },
                "81-83:getTail": {
                    "start": 81,
                    "end": 83,
                    "body": [
                        "    public V getTail() {\n",
                        "        return tail;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "V",
                            "V"
                        ]
                    ],
                    "signature": "getTail()",
                    "parameters": [],
                    "calls": []
                },
                "74-76:getHead": {
                    "start": 74,
                    "end": 76,
                    "body": [
                        "    public V getHead() {\n",
                        "        return head;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "V",
                            "V"
                        ]
                    ],
                    "signature": "getHead()",
                    "parameters": [],
                    "calls": []
                },
                "50-53:VertexPair": {
                    "start": 50,
                    "end": 53,
                    "body": [
                        "    public VertexPair(V head, V tail) {\n",
                        "        this.head = checkNotNull(head, \"Impossible to construct a Vertex with a null head\");\n",
                        "        this.tail = checkNotNull(tail, \"Impossible to construct a Vertex with a null tail\");\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "VertexPair(V, V)",
                    "parameters": [
                        "head",
                        "tail"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ]
                    ]
                }
            },
            "fields": {
                "42-42:tail": {
                    "start": 42,
                    "end": 42,
                    "body": [
                        "    private final V tail;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "V",
                            "V"
                        ]
                    ]
                },
                "39-39:head": {
                    "start": 39,
                    "end": 39,
                    "body": [
                        "    private final V head;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "V",
                            "V"
                        ]
                    ]
                },
                "36-36:serialVersionUID": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    private static final long serialVersionUID = 2333503391707156055L;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                }
            }
        }
    }
}