{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/export/AbstractExporter.java",
    "imports": {
        "33-33:import IOException": {
            "start": 33,
            "end": 33,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "30-30:import File": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.io.File;\n"
            ]
        },
        "31-31:import FileNotFoundException": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.io.FileNotFoundException;\n"
            ]
        },
        "32-32:import FileOutputStream": {
            "start": 32,
            "end": 32,
            "body": [
                "import java.io.FileOutputStream;\n"
            ]
        },
        "34-34:import OutputStream": {
            "start": 34,
            "end": 34,
            "body": [
                "import java.io.OutputStream;\n"
            ]
        },
        "35-35:import OutputStreamWriter": {
            "start": 35,
            "end": 35,
            "body": [
                "import java.io.OutputStreamWriter;\n"
            ]
        },
        "36-36:import Writer": {
            "start": 36,
            "end": 36,
            "body": [
                "import java.io.Writer;\n"
            ]
        },
        "39-39:import Map": {
            "start": 39,
            "end": 39,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "40-40:import Entry": {
            "start": 40,
            "end": 40,
            "body": [
                "import java.util.Map.Entry;\n"
            ]
        },
        "37-37:import Date": {
            "start": 37,
            "end": 37,
            "body": [
                "import java.util.Date;\n"
            ]
        },
        "38-38:import HashMap": {
            "start": 38,
            "end": 38,
            "body": [
                "import java.util.HashMap;\n"
            ]
        },
        "26-26:import Graph": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "28-28:import VertexPair": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.apache.commons.graph.VertexPair;\n"
            ]
        },
        "27-27:import Mapper": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.apache.commons.graph.Mapper;\n"
            ]
        },
        "24-24:import static String.format": {
            "start": 24,
            "end": 24,
            "body": [
                "import static java.lang.String.format;\n"
            ]
        },
        "22-22:import static Assertions.checkNotNull": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.utils.Assertions.checkNotNull;\n"
            ]
        }
    },
    "classes": {
        "AbstractExporter": {
            "start": 42,
            "end": 42,
            "is_abstract": true,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "115-163:to2": {
                    "start": 115,
                    "end": 163,
                    "body": [
                        "    public final void to2(Writer writer) throws GraphExportException {\n",
                        "        this.writer = checkNotNull(writer, \"Impossibe to export the graph in a null stream\");\n",
                        "\n",
                        "        try {\n",
                        "            startSerialization();\n",
                        "            comment(format(\"Graph generated by Apache Commons Graph on %s%n\", new Date()));\n",
                        "\n",
                        "            startGraph(name);\n",
                        "\n",
                        "            for (V vertex : graph.getVertices0()) {\n",
                        "                Map<String, Object> properties =\n",
                        "                        new HashMap<String, Object>(vertexProperties.size());\n",
                        "\n",
                        "                for (Entry<String, Mapper<V, ?>> vertexProperty : vertexProperties.entrySet()) {\n",
                        "                    properties.put(vertexProperty.getKey(), vertexProperty.getValue().map(vertex));\n",
                        "                }\n",
                        "\n",
                        "                vertex(vertex, properties);\n",
                        "            }\n",
                        "\n",
                        "            for (E edge : graph.getEdges()) {\n",
                        "                VertexPair<V> vertices = graph.getVertices1(edge);\n",
                        "\n",
                        "                Map<String, Object> properties = new HashMap<String, Object>(edgeProperties.size());\n",
                        "\n",
                        "                for (Entry<String, Mapper<E, ?>> edgeProperty : edgeProperties.entrySet()) {\n",
                        "                    properties.put(edgeProperty.getKey(), edgeProperty.getValue().map(edge));\n",
                        "                }\n",
                        "\n",
                        "                edge(edge, vertices.getHead(), vertices.getTail(), properties);\n",
                        "            }\n",
                        "\n",
                        "            endGraph();\n",
                        "\n",
                        "            endSerialization();\n",
                        "        } catch (Exception e) {\n",
                        "            throw new GraphExportException(\n",
                        "                    e,\n",
                        "                    \"an error occurred while exporting graph %s (named %s) to writer %s\",\n",
                        "                    graph,\n",
                        "                    name,\n",
                        "                    writer);\n",
                        "        } finally {\n",
                        "            try {\n",
                        "                writer.close();\n",
                        "            } catch (IOException e) {\n",
                        "            }\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "to2(Writer)",
                    "parameters": [
                        "writer"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.export.AbstractExporter",
                            "AbstractExporter",
                            "95-95:startSerialization"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.export.AbstractExporter",
                            "AbstractExporter",
                            "72-72:comment"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "format(java.lang.String,java.lang.Object[])"
                        ],
                        [
                            "library",
                            "java.base/java/util/Date",
                            "Date()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.export.AbstractExporter",
                            "AbstractExporter",
                            "93-93:startGraph"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "getVertices0()"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashMap",
                            "HashMap<String,Object>(int)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "size()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "entrySet()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map$Entry",
                            "getKey()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Mapper",
                            "map(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map$Entry",
                            "getValue()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.export.AbstractExporter",
                            "AbstractExporter",
                            "165-165:vertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "getEdges()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "getVertices1(java.lang.Object)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.export.AbstractExporter",
                            "AbstractExporter",
                            "74-76:edge"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "getHead()"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "getTail()"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.export.AbstractExporter",
                            "AbstractExporter",
                            "77-77:endGraph"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.export.AbstractExporter",
                            "AbstractExporter",
                            "79-79:endSerialization"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.export.GraphExportException",
                            "GraphExportException",
                            "37-40:GraphExportException"
                        ],
                        [
                            "library",
                            "java.base/java/io/Writer",
                            "close()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def to2(self, writer: typing.Union[io.TextIOWrapper, io.BufferedWriter, io.TextIOBase]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "108-113:to1": {
                    "start": 108,
                    "end": 113,
                    "body": [
                        "    public final void to1(OutputStream outputStream) throws GraphExportException {\n",
                        "        to2(\n",
                        "                new OutputStreamWriter(\n",
                        "                        checkNotNull(\n",
                        "                                outputStream, \"Impossibe to export the graph in a null stream\")));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "to1(OutputStream)",
                    "parameters": [
                        "outputStream"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.export.AbstractExporter",
                            "AbstractExporter",
                            "115-163:to2"
                        ],
                        [
                            "library",
                            "java.base/java/io/OutputStreamWriter",
                            "OutputStreamWriter(java.io.OutputStream)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def to1(self, outputStream: typing.Union[io.BytesIO, io.StringIO, io.BufferedWriter]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "97-106:to0": {
                    "start": 97,
                    "end": 106,
                    "body": [
                        "    public final void to0(File outputFile) throws GraphExportException {\n",
                        "        try {\n",
                        "            to1(\n",
                        "                    new FileOutputStream(\n",
                        "                            checkNotNull(\n",
                        "                                    outputFile, \"Impossibe to export the graph in a null file\")));\n",
                        "        } catch (FileNotFoundException e) {\n",
                        "            throw new RuntimeException(e);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "to0(File)",
                    "parameters": [
                        "outputFile"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.export.AbstractExporter",
                            "AbstractExporter",
                            "108-113:to1"
                        ],
                        [
                            "library",
                            "java.base/java/io/FileOutputStream",
                            "FileOutputStream(java.io.File)"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "java.base/java/lang/RuntimeException",
                            "RuntimeException(java.lang.Throwable)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def to0(self, outputFile: pathlib.Path) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "89-91:getWriter": {
                    "start": 89,
                    "end": 91,
                    "body": [
                        "    protected final Writer getWriter() {\n",
                        "        return writer;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "final",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "Writer",
                            "java.io.Writer"
                        ]
                    ],
                    "signature": "getWriter()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _getWriter(self) -> typing.Union[io.TextIOWrapper, io.BufferedWriter, io.TextIOBase]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "85-87:getGraph": {
                    "start": 85,
                    "end": 87,
                    "body": [
                        "    protected final Graph<V, E> getGraph() {\n",
                        "        return graph;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "final",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "Graph<V,E>",
                            "Graph<V,E>"
                        ]
                    ],
                    "signature": "getGraph()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _getGraph(self) -> Graph[typing.Any, typing.Any]:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "68-70:addVertexProperty": {
                    "start": 68,
                    "end": 70,
                    "body": [
                        "    protected void addVertexProperty(String propertyName, Mapper<V, ?> vertexProperty) {\n",
                        "        this.vertexProperties.put(propertyName, vertexProperty);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "addVertexProperty(String, Mapper<V,?>)",
                    "parameters": [
                        "propertyName",
                        "vertexProperty"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(java.lang.String,org.apache.commons.graph.Mapper)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _addVertexProperty(self, propertyName: str, vertexProperty: typing.Dict[typing.Any, typing.Any]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "64-66:addEdgeProperty": {
                    "start": 64,
                    "end": 66,
                    "body": [
                        "    protected void addEdgeProperty(String propertyName, Mapper<E, ?> edgeProperty) {\n",
                        "        this.edgeProperties.put(propertyName, edgeProperty);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "addEdgeProperty(String, Mapper<E,?>)",
                    "parameters": [
                        "propertyName",
                        "edgeProperty"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Map",
                            "put(java.lang.String,org.apache.commons.graph.Mapper)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _addEdgeProperty(self, propertyName: str, edgeProperty: typing.Dict[typing.Any, typing.Any]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "56-62:AbstractExporter": {
                    "start": 56,
                    "end": 62,
                    "body": [
                        "    public AbstractExporter(Graph<V, E> graph, String name) {\n",
                        "        this.graph = graph;\n",
                        "        this.writer = null;\n",
                        "        this.vertexProperties = new HashMap<String, Mapper<V, ?>>();\n",
                        "        this.edgeProperties = new HashMap<String, Mapper<E, ?>>();\n",
                        "        this.name = name != null ? name : G;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "AbstractExporter(Graph<V,E>, String)",
                    "parameters": [
                        "graph",
                        "name"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/HashMap",
                            "HashMap<String,Mapper<V,?>>()"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashMap",
                            "HashMap<String,Mapper<E,?>>()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self, graph: Graph[typing.Any, typing.Any], name: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "165-165:vertex": {
                    "start": 165,
                    "end": 165,
                    "body": [
                        "    protected abstract void vertex(V vertex, Map<String, Object> properties) throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "vertex(V, Map<String,Object>)",
                    "parameters": [
                        "vertex",
                        "properties"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _vertex(self, vertex: typing.Any, properties: typing.Dict[str, typing.Any]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "95-95:startSerialization": {
                    "start": 95,
                    "end": 95,
                    "body": [
                        "    protected abstract void startSerialization() throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "startSerialization()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _startSerialization(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "93-93:startGraph": {
                    "start": 93,
                    "end": 93,
                    "body": [
                        "    protected abstract void startGraph(String name) throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "startGraph(String)",
                    "parameters": [
                        "name"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _startGraph(self, name: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "83-83:enlistVerticesProperty": {
                    "start": 83,
                    "end": 83,
                    "body": [
                        "    protected abstract void enlistVerticesProperty(String name, Class<?> type) throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "enlistVerticesProperty(String, Class<?>)",
                    "parameters": [
                        "name",
                        "type"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _enlistVerticesProperty(self, name: str, type_: typing.Type[typing.Any]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "81-81:enlistEdgesProperty": {
                    "start": 81,
                    "end": 81,
                    "body": [
                        "    protected abstract void enlistEdgesProperty(String name, Class<?> type) throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "enlistEdgesProperty(String, Class<?>)",
                    "parameters": [
                        "name",
                        "type"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _enlistEdgesProperty(self, name: str, type_: typing.Type[typing.Any]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "79-79:endSerialization": {
                    "start": 79,
                    "end": 79,
                    "body": [
                        "    protected abstract void endSerialization() throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "endSerialization()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _endSerialization(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "77-77:endGraph": {
                    "start": 77,
                    "end": 77,
                    "body": [
                        "    protected abstract void endGraph() throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "endGraph()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _endGraph(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "74-76:edge": {
                    "start": 74,
                    "end": 76,
                    "body": [
                        "    protected abstract void edge(E edge, V head, V tail, Map<String, Object> properties)\n",
                        "            throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "edge(E, V, V, Map<String,Object>)",
                    "parameters": [
                        "edge",
                        "head",
                        "tail",
                        "properties"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _edge(self, edge: typing.Any, head: typing.Any, tail: typing.Any, properties: typing.Dict[str, typing.Any]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "72-72:comment": {
                    "start": 72,
                    "end": 72,
                    "body": [
                        "    protected abstract void comment(String text) throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract",
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "comment(String)",
                    "parameters": [
                        "text"
                    ],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def _comment(self, text: str) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "54-54:writer": {
                    "start": 54,
                    "end": 54,
                    "body": [
                        "    private Writer writer;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "Writer",
                            "java.io.Writer"
                        ]
                    ],
                    "partial_translation": [
                        "    __writer: typing.Union[io.TextIOWrapper, io.BufferedWriter, io.TextIOBase] = None",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "52-52:name": {
                    "start": 52,
                    "end": 52,
                    "body": [
                        "    private final String name;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __name: str = ''",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "50-50:edgeProperties": {
                    "start": 50,
                    "end": 50,
                    "body": [
                        "    private final Map<String, Mapper<E, ?>> edgeProperties;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Map<String,Mapper<E,?>>",
                            "java.util.Map<String,Mapper<E,?>>"
                        ]
                    ],
                    "partial_translation": [
                        "    __edgeProperties: typing.Dict[str, Mapper[typing.Any, typing.Any]] = None",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "48-48:vertexProperties": {
                    "start": 48,
                    "end": 48,
                    "body": [
                        "    private final Map<String, Mapper<V, ?>> vertexProperties;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Map<String,Mapper<V,?>>",
                            "java.util.Map<String,Mapper<V,?>>"
                        ]
                    ],
                    "partial_translation": [
                        "    __vertexProperties: typing.Dict[str, Mapper[typing.Any, typing.Any]] = None",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "46-46:graph": {
                    "start": 46,
                    "end": 46,
                    "body": [
                        "    private final Graph<V, E> graph;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Graph<V,E>",
                            "Graph<V,E>"
                        ]
                    ],
                    "partial_translation": [
                        "    __graph: Graph[typing.Any, typing.Any] = None",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                },
                "44-44:G": {
                    "start": 44,
                    "end": 44,
                    "body": [
                        "    private static final String G = \"G\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __G: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class AbstractExporter(ABC):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "from abc import ABC",
        "import pathlib",
        "from io import IOBase",
        "from io import StringIO",
        "import io",
        "from io import BytesIO",
        "import typing\nfrom typing import *",
        "from src.main.org.apache.commons.graph.Graph import *",
        "from src.main.org.apache.commons.graph.Mapper import *",
        "from src.main.org.apache.commons.graph.VertexPair import *",
        "from src.main.org.apache.commons.graph.export.GraphExportException import *",
        "from src.main.org.apache.commons.graph.utils.Assertions import *"
    ]
}