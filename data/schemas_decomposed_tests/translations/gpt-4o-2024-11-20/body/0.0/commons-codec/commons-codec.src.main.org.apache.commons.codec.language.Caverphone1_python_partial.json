{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/main/java/org/apache/commons/codec/language/Caverphone1.java",
    "imports": {},
    "classes": {
        "Caverphone1": {
            "start": 32,
            "end": 32,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "AbstractCaverphone"
            ],
            "methods": {
                "43-113:encode": {
                    "start": 43,
                    "end": 113,
                    "body": [
                        "    public String encode(final String source) {\n",
                        "        String txt = source;\n",
                        "        if (txt == null || txt.isEmpty()) {\n",
                        "            return SIX_1;\n",
                        "        }\n",
                        "\n",
                        "        txt = txt.toLowerCase(java.util.Locale.ENGLISH);\n",
                        "\n",
                        "        txt = txt.replaceAll(\"[^a-z]\", \"\");\n",
                        "\n",
                        "        txt = txt.replaceAll(\"^cough\", \"cou2f\");\n",
                        "        txt = txt.replaceAll(\"^rough\", \"rou2f\");\n",
                        "        txt = txt.replaceAll(\"^tough\", \"tou2f\");\n",
                        "        txt = txt.replaceAll(\"^enough\", \"enou2f\");\n",
                        "        txt = txt.replaceAll(\"^gn\", \"2n\");\n",
                        "\n",
                        "        txt = txt.replaceAll(\"mb$\", \"m2\");\n",
                        "\n",
                        "        txt = txt.replace(\"cq\", \"2q\");\n",
                        "        txt = txt.replace(\"ci\", \"si\");\n",
                        "        txt = txt.replace(\"ce\", \"se\");\n",
                        "        txt = txt.replace(\"cy\", \"sy\");\n",
                        "        txt = txt.replace(\"tch\", \"2ch\");\n",
                        "        txt = txt.replace(\"c\", \"k\");\n",
                        "        txt = txt.replace(\"q\", \"k\");\n",
                        "        txt = txt.replace(\"x\", \"k\");\n",
                        "        txt = txt.replace(\"v\", \"f\");\n",
                        "        txt = txt.replace(\"dg\", \"2g\");\n",
                        "        txt = txt.replace(\"tio\", \"sio\");\n",
                        "        txt = txt.replace(\"tia\", \"sia\");\n",
                        "        txt = txt.replace(\"d\", \"t\");\n",
                        "        txt = txt.replace(\"ph\", \"fh\");\n",
                        "        txt = txt.replace(\"b\", \"p\");\n",
                        "        txt = txt.replace(\"sh\", \"s2\");\n",
                        "        txt = txt.replace(\"z\", \"s\");\n",
                        "        txt = txt.replaceAll(\"^[aeiou]\", \"A\");\n",
                        "        txt = txt.replaceAll(\"[aeiou]\", \"3\");\n",
                        "        txt = txt.replace(\"3gh3\", \"3kh3\");\n",
                        "        txt = txt.replace(\"gh\", \"22\");\n",
                        "        txt = txt.replace(\"g\", \"k\");\n",
                        "        txt = txt.replaceAll(\"s+\", \"S\");\n",
                        "        txt = txt.replaceAll(\"t+\", \"T\");\n",
                        "        txt = txt.replaceAll(\"p+\", \"P\");\n",
                        "        txt = txt.replaceAll(\"k+\", \"K\");\n",
                        "        txt = txt.replaceAll(\"f+\", \"F\");\n",
                        "        txt = txt.replaceAll(\"m+\", \"M\");\n",
                        "        txt = txt.replaceAll(\"n+\", \"N\");\n",
                        "        txt = txt.replace(\"w3\", \"W3\");\n",
                        "        txt = txt.replace(\"wy\", \"Wy\"); // 1.0 only\n",
                        "        txt = txt.replace(\"wh3\", \"Wh3\");\n",
                        "        txt = txt.replace(\"why\", \"Why\"); // 1.0 only\n",
                        "        txt = txt.replace(\"w\", \"2\");\n",
                        "        txt = txt.replaceAll(\"^h\", \"A\");\n",
                        "        txt = txt.replace(\"h\", \"2\");\n",
                        "        txt = txt.replace(\"r3\", \"R3\");\n",
                        "        txt = txt.replace(\"ry\", \"Ry\"); // 1.0 only\n",
                        "        txt = txt.replace(\"r\", \"2\");\n",
                        "        txt = txt.replace(\"l3\", \"L3\");\n",
                        "        txt = txt.replace(\"ly\", \"Ly\"); // 1.0 only\n",
                        "        txt = txt.replace(\"l\", \"2\");\n",
                        "        txt = txt.replace(\"j\", \"y\"); // 1.0 only\n",
                        "        txt = txt.replace(\"y3\", \"Y3\"); // 1.0 only\n",
                        "        txt = txt.replace(\"y\", \"2\"); // 1.0 only\n",
                        "\n",
                        "        txt = txt.replace(\"2\", \"\");\n",
                        "        txt = txt.replace(\"3\", \"\");\n",
                        "\n",
                        "        txt = txt + SIX_1;\n",
                        "\n",
                        "        return txt.substring(0, SIX_1.length());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "encode(String)",
                    "parameters": [
                        "source"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/String",
                            "isEmpty()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "toLowerCase(java.util.Locale)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "replaceAll(java.lang.String,java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "replace(java.lang.CharSequence,java.lang.CharSequence)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "substring(int,int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "length()"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def encode(self, source: str) -> str:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "fields": {
                "34-34:SIX_1": {
                    "start": 34,
                    "end": 34,
                    "body": [
                        "    private static final String SIX_1 = \"111111\";\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "partial_translation": [
                        "    __SIX_1: str = <placeholder>",
                        ""
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "gpt-4o-2024-11-20",
                    "include_implementation": true
                }
            },
            "is_enum": false,
            "python_class_declaration": "class Caverphone1(AbstractCaverphone):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import io",
        "from src.main.org.apache.commons.codec.language.AbstractCaverphone import *"
    ]
}