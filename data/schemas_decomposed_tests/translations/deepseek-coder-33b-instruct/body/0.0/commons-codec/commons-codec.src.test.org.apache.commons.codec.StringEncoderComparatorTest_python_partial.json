{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-codec/src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
    "imports": {
        "28-28:import List": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "26-26:import Arrays": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.util.Arrays;\n"
            ]
        },
        "27-27:import Collections": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.util.Collections;\n"
            ]
        },
        "24-24:import Test": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "22-22:import DoubleMetaphone": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.codec.language.DoubleMetaphone;\n"
            ]
        },
        "23-23:import Soundex": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.apache.commons.codec.language.Soundex;\n"
            ]
        },
        "20-20:import static Assert.assertEquals": {
            "start": 20,
            "end": 20,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        }
    },
    "classes": {
        "StringEncoderComparatorTest": {
            "start": 31,
            "end": 31,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "87-96:testComparatorWithDoubleMetaphoneAndInvalidInput_test2_decomposed": {
                    "start": 87,
                    "end": 96,
                    "body": [
                        "    public void testComparatorWithDoubleMetaphoneAndInvalidInput_test2_decomposed() throws Exception {\n",
                        "        final StringEncoderComparator sCompare =\n",
                        "                new StringEncoderComparator(0, new DoubleMetaphone());\n",
                        "        final int compare = sCompare.compare(Double.valueOf(3.0d), Long.valueOf(3));\n",
                        "        assertEquals(\n",
                        "                \"Trying to compare objects that make no sense to the underlying encoder should\"\n",
                        "                        + \" return a zero compare code\",\n",
                        "                0,\n",
                        "                compare);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testComparatorWithDoubleMetaphoneAndInvalidInput_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoderComparator",
                            "StringEncoderComparator",
                            "42-48:StringEncoderComparator"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "57-57:DoubleMetaphone"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoderComparator",
                            "StringEncoderComparator",
                            "68-83:compare"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,long,long)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testComparatorWithDoubleMetaphoneAndInvalidInput_test2_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "80-84:testComparatorWithDoubleMetaphoneAndInvalidInput_test1_decomposed": {
                    "start": 80,
                    "end": 84,
                    "body": [
                        "    public void testComparatorWithDoubleMetaphoneAndInvalidInput_test1_decomposed() throws Exception {\n",
                        "        final StringEncoderComparator sCompare =\n",
                        "                new StringEncoderComparator(0, new DoubleMetaphone());\n",
                        "        final int compare = sCompare.compare(Double.valueOf(3.0d), Long.valueOf(3));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testComparatorWithDoubleMetaphoneAndInvalidInput_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoderComparator",
                            "StringEncoderComparator",
                            "42-48:StringEncoderComparator"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "57-57:DoubleMetaphone"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoderComparator",
                            "StringEncoderComparator",
                            "68-83:compare"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testComparatorWithDoubleMetaphoneAndInvalidInput_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "74-77:testComparatorWithDoubleMetaphoneAndInvalidInput_test0_decomposed": {
                    "start": 74,
                    "end": 77,
                    "body": [
                        "    public void testComparatorWithDoubleMetaphoneAndInvalidInput_test0_decomposed() throws Exception {\n",
                        "        final StringEncoderComparator sCompare =\n",
                        "                new StringEncoderComparator(0, new DoubleMetaphone());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testComparatorWithDoubleMetaphoneAndInvalidInput_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoderComparator",
                            "StringEncoderComparator",
                            "42-48:StringEncoderComparator"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "57-57:DoubleMetaphone"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testComparatorWithDoubleMetaphoneAndInvalidInput_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "57-71:testComparatorWithDoubleMetaphone_test1_decomposed": {
                    "start": 57,
                    "end": 71,
                    "body": [
                        "    public void testComparatorWithDoubleMetaphone_test1_decomposed() throws Exception {\n",
                        "        final StringEncoderComparator sCompare =\n",
                        "                new StringEncoderComparator(0, new DoubleMetaphone());\n",
                        "        final String[] testArray = {\"Jordan\", \"Sosa\", \"Prior\", \"Pryor\"};\n",
                        "        final List<String> testList = Arrays.asList(testArray);\n",
                        "        final String[] controlArray = {\"Jordan\", \"Prior\", \"Pryor\", \"Sosa\"};\n",
                        "        Collections.sort(testList, sCompare);\n",
                        "        final String[] resultArray = testList.toArray(new String[0]);\n",
                        "        for (int i = 0; i < resultArray.length; i++) {\n",
                        "            assertEquals(\n",
                        "                    \"Result Array not Equal to Control Array at index: \" + i,\n",
                        "                    controlArray[i],\n",
                        "                    resultArray[i]);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testComparatorWithDoubleMetaphone_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoderComparator",
                            "StringEncoderComparator",
                            "42-48:StringEncoderComparator"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "57-57:DoubleMetaphone"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "asList(java.lang.Object[])"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "toArray(java.lang.Object[])"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collections",
                            "sort(java.util.List,java.util.Comparator)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testComparatorWithDoubleMetaphone_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "51-54:testComparatorWithDoubleMetaphone_test0_decomposed": {
                    "start": 51,
                    "end": 54,
                    "body": [
                        "    public void testComparatorWithDoubleMetaphone_test0_decomposed() throws Exception {\n",
                        "        final StringEncoderComparator sCompare =\n",
                        "                new StringEncoderComparator(0, new DoubleMetaphone());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testComparatorWithDoubleMetaphone_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoderComparator",
                            "StringEncoderComparator",
                            "42-48:StringEncoderComparator"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.DoubleMetaphone",
                            "DoubleMetaphone",
                            "57-57:DoubleMetaphone"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testComparatorWithDoubleMetaphone_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "40-48:testComparatorWithSoundex_test1_decomposed": {
                    "start": 40,
                    "end": 48,
                    "body": [
                        "    public void testComparatorWithSoundex_test1_decomposed() throws Exception {\n",
                        "        final StringEncoderComparator sCompare =\n",
                        "                new StringEncoderComparator(0, new Soundex(3, false, null, null));\n",
                        "        assertEquals(\n",
                        "                \"O'Brien and O'Brian didn't come out with \"\n",
                        "                        + \"the same Soundex, something must be wrong here\",\n",
                        "                0,\n",
                        "                sCompare.compare(\"O'Brien\", \"O'Brian\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testComparatorWithSoundex_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoderComparator",
                            "StringEncoderComparator",
                            "42-48:StringEncoderComparator"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.Soundex",
                            "Soundex",
                            "135-153:Soundex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,long,long)"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoderComparator",
                            "StringEncoderComparator",
                            "68-83:compare"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testComparatorWithSoundex_test1_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "34-37:testComparatorWithSoundex_test0_decomposed": {
                    "start": 34,
                    "end": 37,
                    "body": [
                        "    public void testComparatorWithSoundex_test0_decomposed() throws Exception {\n",
                        "        final StringEncoderComparator sCompare =\n",
                        "                new StringEncoderComparator(0, new Soundex(3, false, null, null));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testComparatorWithSoundex_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.StringEncoderComparator",
                            "StringEncoderComparator",
                            "42-48:StringEncoderComparator"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.language.Soundex",
                            "Soundex",
                            "135-153:Soundex"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    def testComparatorWithSoundex_test0_decomposed(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class StringEncoderComparatorTest(unittest.TestCase):\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import os",
        "import unittest",
        "from src.main.org.apache.commons.codec.StringEncoder import *",
        "from src.main.org.apache.commons.codec.StringEncoderComparator import *",
        "from src.main.org.apache.commons.codec.language.DoubleMetaphone import *",
        "from src.main.org.apache.commons.codec.language.Soundex import *"
    ]
}