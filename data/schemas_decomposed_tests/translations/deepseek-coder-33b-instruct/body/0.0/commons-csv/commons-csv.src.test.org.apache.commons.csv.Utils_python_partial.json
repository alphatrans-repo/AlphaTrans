{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-csv/src/test/java/org/apache/commons/csv/Utils.java",
    "imports": {
        "24-24:import List": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "22-22:import static Assertions.assertEquals": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.junit.jupiter.api.Assertions.assertEquals;\n"
            ]
        },
        "21-21:import static Assertions.assertArrayEquals": {
            "start": 21,
            "end": 21,
            "body": [
                "import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n"
            ]
        }
    },
    "classes": {
        "Utils": {
            "start": 27,
            "end": 27,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "36-43:compare": {
                    "start": 36,
                    "end": 43,
                    "body": [
                        "    public static void compare(\n",
                        "            final String message, final String[][] expected, final List<CSVRecord> actual) {\n",
                        "        final int expectedLength = expected.length;\n",
                        "        assertEquals(expectedLength, actual.size(), message + \"  - outer array size\");\n",
                        "        for (int i = 0; i < expectedLength; i++) {\n",
                        "            assertArrayEquals(expected[i], actual.get(i).values(), message + \" (entry \" + i + \")\");\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "compare(String, String[][], List<CSVRecord>)",
                    "parameters": [
                        "message",
                        "expected",
                        "actual"
                    ],
                    "calls": [
                        [
                            "library",
                            "Assertions",
                            "assertEquals(int,int,java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "size()"
                        ],
                        [
                            "library",
                            "Assertions",
                            "assertArrayEquals(java.lang.Object[],java.lang.Object[],java.lang.String)"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "337-339:values"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "get(int)"
                        ]
                    ],
                    "is_overload": false,
                    "partial_translation": [
                        "    @staticmethod\n",
                        "    def compare(message: str, expected: typing.List[typing.List[str]], actual: typing.List[CSVRecord]) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                },
                "45-45:Utils": {
                    "start": 45,
                    "end": 45,
                    "body": [
                        "    private Utils() {}\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "Utils()",
                    "parameters": [],
                    "calls": [],
                    "is_overload": false,
                    "partial_translation": [
                        "    def __init__(self) -> None:\n",
                        "        pass\n\n"
                    ],
                    "translation": [],
                    "translation_status": "pending",
                    "syntactic_validation": "pending",
                    "field_exercise": "pending",
                    "graal_validation": "pending",
                    "test_execution": "pending",
                    "elapsed_time": 0,
                    "generation_timestamp": 0,
                    "model_name": "deepseek-coder-33b-instruct",
                    "include_implementation": true
                }
            },
            "fields": {},
            "is_enum": false,
            "python_class_declaration": "class Utils:\n\n"
        }
    },
    "python_imports": [
        "from __future__ import annotations",
        "import unittest",
        "import pytest",
        "import io",
        "import typing\nfrom typing import *",
        "from src.main.org.apache.commons.csv.CSVRecord import *"
    ]
}