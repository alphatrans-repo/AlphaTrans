{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-cli/src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java",
    "imports": {
        "29-29:import File": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.io.File;\n"
            ]
        },
        "31-31:import URL": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.net.URL;\n"
            ]
        },
        "30-30:import FileInputStream": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.io.FileInputStream;\n"
            ]
        },
        "33-33:import Date": {
            "start": 33,
            "end": 33,
            "body": [
                "import java.util.Date;\n"
            ]
        },
        "32-32:import Calendar": {
            "start": 32,
            "end": 32,
            "body": [
                "import java.util.Calendar;\n"
            ]
        },
        "34-34:import Vector": {
            "start": 34,
            "end": 34,
            "body": [
                "import java.util.Vector;\n"
            ]
        },
        "27-27:import Test": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "20-20:import static Assert.assertEquals": {
            "start": 20,
            "end": 20,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        },
        "24-24:import static Assert.assertTrue": {
            "start": 24,
            "end": 24,
            "body": [
                "import static org.junit.Assert.assertTrue;\n"
            ]
        },
        "21-21:import static Assert.assertFalse": {
            "start": 21,
            "end": 21,
            "body": [
                "import static org.junit.Assert.assertFalse;\n"
            ]
        },
        "22-22:import static Assert.assertNotNull": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.junit.Assert.assertNotNull;\n"
            ]
        },
        "23-23:import static Assert.assertNull": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.junit.Assert.assertNull;\n"
            ]
        },
        "25-25:import static Assert.fail": {
            "start": 25,
            "end": 25,
            "body": [
                "import static org.junit.Assert.fail;\n"
            ]
        }
    },
    "classes": {
        "PatternOptionBuilderTest": {
            "start": 38,
            "end": 38,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "724-735:testURLPattern_test3_decomposed": {
                    "start": 724,
                    "end": 735,
                    "body": [
                        "    public void testURLPattern_test3_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"u/v/\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(\n",
                        "                        options,\n",
                        "                        new String[] {\n",
                        "                            \"-u\", \"https://commons.apache.org\", \"-v\", \"foo://commons.apache.org\"\n",
                        "                        });\n",
                        "        assertEquals(\"u value\", new URL(\"https://commons.apache.org\"), line.getOptionObject1(\"u\"));\n",
                        "        assertNull(\"v value\", line.getOptionObject1(\"v\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testURLPattern_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/net/URL",
                            "URL(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "712-721:testURLPattern_test2_decomposed": {
                    "start": 712,
                    "end": 721,
                    "body": [
                        "    public void testURLPattern_test2_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"u/v/\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(\n",
                        "                        options,\n",
                        "                        new String[] {\n",
                        "                            \"-u\", \"https://commons.apache.org\", \"-v\", \"foo://commons.apache.org\"\n",
                        "                        });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testURLPattern_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ]
                    ]
                },
                "706-709:testURLPattern_test1_decomposed": {
                    "start": 706,
                    "end": 709,
                    "body": [
                        "    public void testURLPattern_test1_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"u/v/\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testURLPattern_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ]
                    ]
                },
                "701-703:testURLPattern_test0_decomposed": {
                    "start": 701,
                    "end": 703,
                    "body": [
                        "    public void testURLPattern_test0_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"u/v/\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testURLPattern_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ]
                    ]
                },
                "688-698:testUntypedPattern_test8_decomposed": {
                    "start": 688,
                    "end": 698,
                    "body": [
                        "    public void testUntypedPattern_test8_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"abc\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, new String[] {\"-abc\"});\n",
                        "        assertTrue(line.hasOption0('a'));\n",
                        "        assertNull(\"value a\", line.getOptionObject0('a'));\n",
                        "        assertTrue(line.hasOption0('b'));\n",
                        "        assertNull(\"value b\", line.getOptionObject0('b'));\n",
                        "        assertTrue(line.hasOption0('c'));\n",
                        "        assertNull(\"value c\", line.getOptionObject0('c'));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUntypedPattern_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "407-409:hasOption0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "133-135:getOptionObject0"
                        ]
                    ]
                },
                "676-685:testUntypedPattern_test7_decomposed": {
                    "start": 676,
                    "end": 685,
                    "body": [
                        "    public void testUntypedPattern_test7_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"abc\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, new String[] {\"-abc\"});\n",
                        "        assertTrue(line.hasOption0('a'));\n",
                        "        assertNull(\"value a\", line.getOptionObject0('a'));\n",
                        "        assertTrue(line.hasOption0('b'));\n",
                        "        assertNull(\"value b\", line.getOptionObject0('b'));\n",
                        "        assertTrue(line.hasOption0('c'));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUntypedPattern_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "407-409:hasOption0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "133-135:getOptionObject0"
                        ]
                    ]
                },
                "665-673:testUntypedPattern_test6_decomposed": {
                    "start": 665,
                    "end": 673,
                    "body": [
                        "    public void testUntypedPattern_test6_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"abc\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, new String[] {\"-abc\"});\n",
                        "        assertTrue(line.hasOption0('a'));\n",
                        "        assertNull(\"value a\", line.getOptionObject0('a'));\n",
                        "        assertTrue(line.hasOption0('b'));\n",
                        "        assertNull(\"value b\", line.getOptionObject0('b'));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUntypedPattern_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "407-409:hasOption0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "133-135:getOptionObject0"
                        ]
                    ]
                },
                "655-662:testUntypedPattern_test5_decomposed": {
                    "start": 655,
                    "end": 662,
                    "body": [
                        "    public void testUntypedPattern_test5_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"abc\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, new String[] {\"-abc\"});\n",
                        "        assertTrue(line.hasOption0('a'));\n",
                        "        assertNull(\"value a\", line.getOptionObject0('a'));\n",
                        "        assertTrue(line.hasOption0('b'));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUntypedPattern_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "407-409:hasOption0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "133-135:getOptionObject0"
                        ]
                    ]
                },
                "646-652:testUntypedPattern_test4_decomposed": {
                    "start": 646,
                    "end": 652,
                    "body": [
                        "    public void testUntypedPattern_test4_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"abc\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, new String[] {\"-abc\"});\n",
                        "        assertTrue(line.hasOption0('a'));\n",
                        "        assertNull(\"value a\", line.getOptionObject0('a'));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUntypedPattern_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "407-409:hasOption0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "133-135:getOptionObject0"
                        ]
                    ]
                },
                "638-643:testUntypedPattern_test3_decomposed": {
                    "start": 638,
                    "end": 643,
                    "body": [
                        "    public void testUntypedPattern_test3_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"abc\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, new String[] {\"-abc\"});\n",
                        "        assertTrue(line.hasOption0('a'));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUntypedPattern_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "407-409:hasOption0"
                        ]
                    ]
                },
                "631-635:testUntypedPattern_test2_decomposed": {
                    "start": 631,
                    "end": 635,
                    "body": [
                        "    public void testUntypedPattern_test2_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"abc\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, new String[] {\"-abc\"});\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUntypedPattern_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ]
                    ]
                },
                "625-628:testUntypedPattern_test1_decomposed": {
                    "start": 625,
                    "end": 628,
                    "body": [
                        "    public void testUntypedPattern_test1_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"abc\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUntypedPattern_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ]
                    ]
                },
                "620-622:testUntypedPattern_test0_decomposed": {
                    "start": 620,
                    "end": 622,
                    "body": [
                        "    public void testUntypedPattern_test0_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"abc\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testUntypedPattern_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ]
                    ]
                },
                "564-617:testSimplePattern_test10_decomposed": {
                    "start": 564,
                    "end": 617,
                    "body": [
                        "    public void testSimplePattern_test10_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "        final String[] args = {\n",
                        "            \"-c\",\n",
                        "            \"-a\",\n",
                        "            \"foo\",\n",
                        "            \"-b\",\n",
                        "            \"java.util.Vector\",\n",
                        "            \"-e\",\n",
                        "            \"build.xml\",\n",
                        "            \"-f\",\n",
                        "            \"java.util.Calendar\",\n",
                        "            \"-n\",\n",
                        "            \"4.5\",\n",
                        "            \"-t\",\n",
                        "            \"https://commons.apache.org\",\n",
                        "            \"-z\",\n",
                        "            \"Thu Jun 06 17:48:57 EDT 2002\",\n",
                        "            \"-m\",\n",
                        "            \"test*\"\n",
                        "        };\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, args);\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue4(\"a\"));\n",
                        "        assertEquals(\"string flag a\", \"foo\", line.getOptionObject1(\"a\"));\n",
                        "        assertEquals(\"object flag b\", new Vector<>(), line.getOptionObject1(\"b\"));\n",
                        "        assertTrue(\"boolean true flag c\", line.hasOption2(\"c\"));\n",
                        "        assertFalse(\"boolean false flag d\", line.hasOption2(\"d\"));\n",
                        "        assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject1(\"e\"));\n",
                        "        assertEquals(\"class flag f\", Calendar.class, line.getOptionObject1(\"f\"));\n",
                        "        assertEquals(\"number flag n\", Double.valueOf(4.5), line.getOptionObject1(\"n\"));\n",
                        "        assertEquals(\n",
                        "                \"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject1(\"t\"));\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue0('a'));\n",
                        "        assertEquals(\"string flag a\", \"foo\", line.getOptionObject0('a'));\n",
                        "        assertEquals(\"object flag b\", new Vector<>(), line.getOptionObject0('b'));\n",
                        "        assertTrue(\"boolean true flag c\", line.hasOption0('c'));\n",
                        "        assertFalse(\"boolean false flag d\", line.hasOption0('d'));\n",
                        "        assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject0('e'));\n",
                        "        assertEquals(\"class flag f\", Calendar.class, line.getOptionObject0('f'));\n",
                        "        assertEquals(\"number flag n\", Double.valueOf(4.5), line.getOptionObject0('n'));\n",
                        "        assertEquals(\n",
                        "                \"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject0('t'));\n",
                        "        try {\n",
                        "            assertEquals(\"files flag m\", new File[0], line.getOptionObject0('m'));\n",
                        "            fail(\"Multiple files are not supported yet, should have failed\");\n",
                        "        } catch (final UnsupportedOperationException uoe) {\n",
                        "        }\n",
                        "        try {\n",
                        "            assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject0('z'));\n",
                        "            fail(\"Date is not supported yet, should have failed\");\n",
                        "        } catch (final UnsupportedOperationException uoe) {\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "283-285:getOptionValue4"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Vector",
                            "Vector<Object>()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "428-430:hasOption2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/io/File",
                            "File(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "library",
                            "java.base/java/net/URL",
                            "URL(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "232-234:getOptionValue0"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "133-135:getOptionObject0"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "407-409:hasOption0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Date",
                            "Date(long)"
                        ]
                    ]
                },
                "523-561:testSimplePattern_test9_decomposed": {
                    "start": 523,
                    "end": 561,
                    "body": [
                        "    public void testSimplePattern_test9_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "        final String[] args = {\n",
                        "            \"-c\",\n",
                        "            \"-a\",\n",
                        "            \"foo\",\n",
                        "            \"-b\",\n",
                        "            \"java.util.Vector\",\n",
                        "            \"-e\",\n",
                        "            \"build.xml\",\n",
                        "            \"-f\",\n",
                        "            \"java.util.Calendar\",\n",
                        "            \"-n\",\n",
                        "            \"4.5\",\n",
                        "            \"-t\",\n",
                        "            \"https://commons.apache.org\",\n",
                        "            \"-z\",\n",
                        "            \"Thu Jun 06 17:48:57 EDT 2002\",\n",
                        "            \"-m\",\n",
                        "            \"test*\"\n",
                        "        };\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, args);\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue4(\"a\"));\n",
                        "        assertEquals(\"string flag a\", \"foo\", line.getOptionObject1(\"a\"));\n",
                        "        assertEquals(\"object flag b\", new Vector<>(), line.getOptionObject1(\"b\"));\n",
                        "        assertTrue(\"boolean true flag c\", line.hasOption2(\"c\"));\n",
                        "        assertFalse(\"boolean false flag d\", line.hasOption2(\"d\"));\n",
                        "        assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject1(\"e\"));\n",
                        "        assertEquals(\"class flag f\", Calendar.class, line.getOptionObject1(\"f\"));\n",
                        "        assertEquals(\"number flag n\", Double.valueOf(4.5), line.getOptionObject1(\"n\"));\n",
                        "        assertEquals(\n",
                        "                \"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject1(\"t\"));\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue0('a'));\n",
                        "        assertEquals(\"string flag a\", \"foo\", line.getOptionObject0('a'));\n",
                        "        assertEquals(\"object flag b\", new Vector<>(), line.getOptionObject0('b'));\n",
                        "        assertTrue(\"boolean true flag c\", line.hasOption0('c'));\n",
                        "        assertFalse(\"boolean false flag d\", line.hasOption0('d'));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "283-285:getOptionValue4"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Vector",
                            "Vector<Object>()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "428-430:hasOption2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/io/File",
                            "File(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "library",
                            "java.base/java/net/URL",
                            "URL(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "232-234:getOptionValue0"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "133-135:getOptionObject0"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "407-409:hasOption0"
                        ]
                    ]
                },
                "484-520:testSimplePattern_test8_decomposed": {
                    "start": 484,
                    "end": 520,
                    "body": [
                        "    public void testSimplePattern_test8_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "        final String[] args = {\n",
                        "            \"-c\",\n",
                        "            \"-a\",\n",
                        "            \"foo\",\n",
                        "            \"-b\",\n",
                        "            \"java.util.Vector\",\n",
                        "            \"-e\",\n",
                        "            \"build.xml\",\n",
                        "            \"-f\",\n",
                        "            \"java.util.Calendar\",\n",
                        "            \"-n\",\n",
                        "            \"4.5\",\n",
                        "            \"-t\",\n",
                        "            \"https://commons.apache.org\",\n",
                        "            \"-z\",\n",
                        "            \"Thu Jun 06 17:48:57 EDT 2002\",\n",
                        "            \"-m\",\n",
                        "            \"test*\"\n",
                        "        };\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, args);\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue4(\"a\"));\n",
                        "        assertEquals(\"string flag a\", \"foo\", line.getOptionObject1(\"a\"));\n",
                        "        assertEquals(\"object flag b\", new Vector<>(), line.getOptionObject1(\"b\"));\n",
                        "        assertTrue(\"boolean true flag c\", line.hasOption2(\"c\"));\n",
                        "        assertFalse(\"boolean false flag d\", line.hasOption2(\"d\"));\n",
                        "        assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject1(\"e\"));\n",
                        "        assertEquals(\"class flag f\", Calendar.class, line.getOptionObject1(\"f\"));\n",
                        "        assertEquals(\"number flag n\", Double.valueOf(4.5), line.getOptionObject1(\"n\"));\n",
                        "        assertEquals(\n",
                        "                \"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject1(\"t\"));\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue0('a'));\n",
                        "        assertEquals(\"string flag a\", \"foo\", line.getOptionObject0('a'));\n",
                        "        assertEquals(\"object flag b\", new Vector<>(), line.getOptionObject0('b'));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "283-285:getOptionValue4"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Vector",
                            "Vector<Object>()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "428-430:hasOption2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/io/File",
                            "File(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "library",
                            "java.base/java/net/URL",
                            "URL(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "232-234:getOptionValue0"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "133-135:getOptionObject0"
                        ]
                    ]
                },
                "447-481:testSimplePattern_test7_decomposed": {
                    "start": 447,
                    "end": 481,
                    "body": [
                        "    public void testSimplePattern_test7_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "        final String[] args = {\n",
                        "            \"-c\",\n",
                        "            \"-a\",\n",
                        "            \"foo\",\n",
                        "            \"-b\",\n",
                        "            \"java.util.Vector\",\n",
                        "            \"-e\",\n",
                        "            \"build.xml\",\n",
                        "            \"-f\",\n",
                        "            \"java.util.Calendar\",\n",
                        "            \"-n\",\n",
                        "            \"4.5\",\n",
                        "            \"-t\",\n",
                        "            \"https://commons.apache.org\",\n",
                        "            \"-z\",\n",
                        "            \"Thu Jun 06 17:48:57 EDT 2002\",\n",
                        "            \"-m\",\n",
                        "            \"test*\"\n",
                        "        };\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, args);\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue4(\"a\"));\n",
                        "        assertEquals(\"string flag a\", \"foo\", line.getOptionObject1(\"a\"));\n",
                        "        assertEquals(\"object flag b\", new Vector<>(), line.getOptionObject1(\"b\"));\n",
                        "        assertTrue(\"boolean true flag c\", line.hasOption2(\"c\"));\n",
                        "        assertFalse(\"boolean false flag d\", line.hasOption2(\"d\"));\n",
                        "        assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject1(\"e\"));\n",
                        "        assertEquals(\"class flag f\", Calendar.class, line.getOptionObject1(\"f\"));\n",
                        "        assertEquals(\"number flag n\", Double.valueOf(4.5), line.getOptionObject1(\"n\"));\n",
                        "        assertEquals(\n",
                        "                \"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject1(\"t\"));\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue0('a'));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "283-285:getOptionValue4"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Vector",
                            "Vector<Object>()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "428-430:hasOption2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/io/File",
                            "File(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "library",
                            "java.base/java/net/URL",
                            "URL(java.lang.String)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "232-234:getOptionValue0"
                        ]
                    ]
                },
                "411-444:testSimplePattern_test6_decomposed": {
                    "start": 411,
                    "end": 444,
                    "body": [
                        "    public void testSimplePattern_test6_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "        final String[] args = {\n",
                        "            \"-c\",\n",
                        "            \"-a\",\n",
                        "            \"foo\",\n",
                        "            \"-b\",\n",
                        "            \"java.util.Vector\",\n",
                        "            \"-e\",\n",
                        "            \"build.xml\",\n",
                        "            \"-f\",\n",
                        "            \"java.util.Calendar\",\n",
                        "            \"-n\",\n",
                        "            \"4.5\",\n",
                        "            \"-t\",\n",
                        "            \"https://commons.apache.org\",\n",
                        "            \"-z\",\n",
                        "            \"Thu Jun 06 17:48:57 EDT 2002\",\n",
                        "            \"-m\",\n",
                        "            \"test*\"\n",
                        "        };\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, args);\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue4(\"a\"));\n",
                        "        assertEquals(\"string flag a\", \"foo\", line.getOptionObject1(\"a\"));\n",
                        "        assertEquals(\"object flag b\", new Vector<>(), line.getOptionObject1(\"b\"));\n",
                        "        assertTrue(\"boolean true flag c\", line.hasOption2(\"c\"));\n",
                        "        assertFalse(\"boolean false flag d\", line.hasOption2(\"d\"));\n",
                        "        assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject1(\"e\"));\n",
                        "        assertEquals(\"class flag f\", Calendar.class, line.getOptionObject1(\"f\"));\n",
                        "        assertEquals(\"number flag n\", Double.valueOf(4.5), line.getOptionObject1(\"n\"));\n",
                        "        assertEquals(\n",
                        "                \"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject1(\"t\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "283-285:getOptionValue4"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Vector",
                            "Vector<Object>()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "428-430:hasOption2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/io/File",
                            "File(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "library",
                            "java.base/java/net/URL",
                            "URL(java.lang.String)"
                        ]
                    ]
                },
                "380-408:testSimplePattern_test5_decomposed": {
                    "start": 380,
                    "end": 408,
                    "body": [
                        "    public void testSimplePattern_test5_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "        final String[] args = {\n",
                        "            \"-c\",\n",
                        "            \"-a\",\n",
                        "            \"foo\",\n",
                        "            \"-b\",\n",
                        "            \"java.util.Vector\",\n",
                        "            \"-e\",\n",
                        "            \"build.xml\",\n",
                        "            \"-f\",\n",
                        "            \"java.util.Calendar\",\n",
                        "            \"-n\",\n",
                        "            \"4.5\",\n",
                        "            \"-t\",\n",
                        "            \"https://commons.apache.org\",\n",
                        "            \"-z\",\n",
                        "            \"Thu Jun 06 17:48:57 EDT 2002\",\n",
                        "            \"-m\",\n",
                        "            \"test*\"\n",
                        "        };\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, args);\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue4(\"a\"));\n",
                        "        assertEquals(\"string flag a\", \"foo\", line.getOptionObject1(\"a\"));\n",
                        "        assertEquals(\"object flag b\", new Vector<>(), line.getOptionObject1(\"b\"));\n",
                        "        assertTrue(\"boolean true flag c\", line.hasOption2(\"c\"));\n",
                        "        assertFalse(\"boolean false flag d\", line.hasOption2(\"d\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "283-285:getOptionValue4"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Vector",
                            "Vector<Object>()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "428-430:hasOption2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse(java.lang.String,boolean)"
                        ]
                    ]
                },
                "351-377:testSimplePattern_test4_decomposed": {
                    "start": 351,
                    "end": 377,
                    "body": [
                        "    public void testSimplePattern_test4_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "        final String[] args = {\n",
                        "            \"-c\",\n",
                        "            \"-a\",\n",
                        "            \"foo\",\n",
                        "            \"-b\",\n",
                        "            \"java.util.Vector\",\n",
                        "            \"-e\",\n",
                        "            \"build.xml\",\n",
                        "            \"-f\",\n",
                        "            \"java.util.Calendar\",\n",
                        "            \"-n\",\n",
                        "            \"4.5\",\n",
                        "            \"-t\",\n",
                        "            \"https://commons.apache.org\",\n",
                        "            \"-z\",\n",
                        "            \"Thu Jun 06 17:48:57 EDT 2002\",\n",
                        "            \"-m\",\n",
                        "            \"test*\"\n",
                        "        };\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, args);\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue4(\"a\"));\n",
                        "        assertEquals(\"string flag a\", \"foo\", line.getOptionObject1(\"a\"));\n",
                        "        assertEquals(\"object flag b\", new Vector<>(), line.getOptionObject1(\"b\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "283-285:getOptionValue4"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "java.base/java/util/Vector",
                            "Vector<Object>()"
                        ]
                    ]
                },
                "324-348:testSimplePattern_test3_decomposed": {
                    "start": 324,
                    "end": 348,
                    "body": [
                        "    public void testSimplePattern_test3_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "        final String[] args = {\n",
                        "            \"-c\",\n",
                        "            \"-a\",\n",
                        "            \"foo\",\n",
                        "            \"-b\",\n",
                        "            \"java.util.Vector\",\n",
                        "            \"-e\",\n",
                        "            \"build.xml\",\n",
                        "            \"-f\",\n",
                        "            \"java.util.Calendar\",\n",
                        "            \"-n\",\n",
                        "            \"4.5\",\n",
                        "            \"-t\",\n",
                        "            \"https://commons.apache.org\",\n",
                        "            \"-z\",\n",
                        "            \"Thu Jun 06 17:48:57 EDT 2002\",\n",
                        "            \"-m\",\n",
                        "            \"test*\"\n",
                        "        };\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, args);\n",
                        "        assertEquals(\"flag a\", \"foo\", line.getOptionValue4(\"a\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "283-285:getOptionValue4"
                        ]
                    ]
                },
                "298-321:testSimplePattern_test2_decomposed": {
                    "start": 298,
                    "end": 321,
                    "body": [
                        "    public void testSimplePattern_test2_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "        final String[] args = {\n",
                        "            \"-c\",\n",
                        "            \"-a\",\n",
                        "            \"foo\",\n",
                        "            \"-b\",\n",
                        "            \"java.util.Vector\",\n",
                        "            \"-e\",\n",
                        "            \"build.xml\",\n",
                        "            \"-f\",\n",
                        "            \"java.util.Calendar\",\n",
                        "            \"-n\",\n",
                        "            \"4.5\",\n",
                        "            \"-t\",\n",
                        "            \"https://commons.apache.org\",\n",
                        "            \"-z\",\n",
                        "            \"Thu Jun 06 17:48:57 EDT 2002\",\n",
                        "            \"-m\",\n",
                        "            \"test*\"\n",
                        "        };\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, args);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ]
                    ]
                },
                "273-295:testSimplePattern_test1_decomposed": {
                    "start": 273,
                    "end": 295,
                    "body": [
                        "    public void testSimplePattern_test1_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "        final String[] args = {\n",
                        "            \"-c\",\n",
                        "            \"-a\",\n",
                        "            \"foo\",\n",
                        "            \"-b\",\n",
                        "            \"java.util.Vector\",\n",
                        "            \"-e\",\n",
                        "            \"build.xml\",\n",
                        "            \"-f\",\n",
                        "            \"java.util.Calendar\",\n",
                        "            \"-n\",\n",
                        "            \"4.5\",\n",
                        "            \"-t\",\n",
                        "            \"https://commons.apache.org\",\n",
                        "            \"-z\",\n",
                        "            \"Thu Jun 06 17:48:57 EDT 2002\",\n",
                        "            \"-m\",\n",
                        "            \"test*\"\n",
                        "        };\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ]
                    ]
                },
                "268-270:testSimplePattern_test0_decomposed": {
                    "start": 268,
                    "end": 270,
                    "body": [
                        "    public void testSimplePattern_test0_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"a:b@cde>f+n%t/m*z#\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testSimplePattern_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ]
                    ]
                },
                "255-265:testRequiredOption_test2_decomposed": {
                    "start": 255,
                    "end": 265,
                    "body": [
                        "    public void testRequiredOption_test2_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"!n%m%\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        try {\n",
                        "            parser.parse0(options, new String[] {\"\"});\n",
                        "            fail(\"MissingOptionException wasn't thrown\");\n",
                        "        } catch (final MissingOptionException e) {\n",
                        "            assertEquals(1, e.getMissingOptions().size());\n",
                        "            assertTrue(e.getMissingOptions().contains(\"n\"));\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testRequiredOption_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail(java.lang.String)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "size()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.MissingOptionException",
                            "MissingOptionException",
                            "90-92:getMissingOptions"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "contains(java.lang.Object)"
                        ]
                    ]
                },
                "249-252:testRequiredOption_test1_decomposed": {
                    "start": 249,
                    "end": 252,
                    "body": [
                        "    public void testRequiredOption_test1_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"!n%m%\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testRequiredOption_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ]
                    ]
                },
                "244-246:testRequiredOption_test0_decomposed": {
                    "start": 244,
                    "end": 246,
                    "body": [
                        "    public void testRequiredOption_test0_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"!n%m%\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testRequiredOption_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ]
                    ]
                },
                "224-241:testObjectPattern_test3_decomposed": {
                    "start": 224,
                    "end": 241,
                    "body": [
                        "    public void testObjectPattern_test3_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"o@i@n@\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(\n",
                        "                        options,\n",
                        "                        new String[] {\n",
                        "                            \"-o\",\n",
                        "                            \"java.lang.String\",\n",
                        "                            \"-i\",\n",
                        "                            \"java.util.Calendar\",\n",
                        "                            \"-n\",\n",
                        "                            \"System.DateTime\"\n",
                        "                        });\n",
                        "        assertEquals(\"o value\", \"\", line.getOptionObject1(\"o\"));\n",
                        "        assertNull(\"i value\", line.getOptionObject1(\"i\"));\n",
                        "        assertNull(\"n value\", line.getOptionObject1(\"n\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testObjectPattern_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "207-221:testObjectPattern_test2_decomposed": {
                    "start": 207,
                    "end": 221,
                    "body": [
                        "    public void testObjectPattern_test2_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"o@i@n@\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(\n",
                        "                        options,\n",
                        "                        new String[] {\n",
                        "                            \"-o\",\n",
                        "                            \"java.lang.String\",\n",
                        "                            \"-i\",\n",
                        "                            \"java.util.Calendar\",\n",
                        "                            \"-n\",\n",
                        "                            \"System.DateTime\"\n",
                        "                        });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testObjectPattern_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ]
                    ]
                },
                "201-204:testObjectPattern_test1_decomposed": {
                    "start": 201,
                    "end": 204,
                    "body": [
                        "    public void testObjectPattern_test1_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"o@i@n@\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testObjectPattern_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ]
                    ]
                },
                "196-198:testObjectPattern_test0_decomposed": {
                    "start": 196,
                    "end": 198,
                    "body": [
                        "    public void testObjectPattern_test0_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"o@i@n@\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testObjectPattern_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ]
                    ]
                },
                "183-193:testNumberPattern_test3_decomposed": {
                    "start": 183,
                    "end": 193,
                    "body": [
                        "    public void testNumberPattern_test3_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"n%d%x%\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(options, new String[] {\"-n\", \"1\", \"-d\", \"2.1\", \"-x\", \"3,5\"});\n",
                        "        assertEquals(\"n object class\", Long.class, line.getOptionObject1(\"n\").getClass());\n",
                        "        assertEquals(\"n value\", Long.valueOf(1), line.getOptionObject1(\"n\"));\n",
                        "        assertEquals(\"d object class\", Double.class, line.getOptionObject1(\"d\").getClass());\n",
                        "        assertEquals(\"d value\", Double.valueOf(2.1), line.getOptionObject1(\"d\"));\n",
                        "        assertNull(\"x object\", line.getOptionObject1(\"x\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNumberPattern_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "getClass()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "valueOf(long)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Double",
                            "valueOf(double)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "175-180:testNumberPattern_test2_decomposed": {
                    "start": 175,
                    "end": 180,
                    "body": [
                        "    public void testNumberPattern_test2_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"n%d%x%\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(options, new String[] {\"-n\", \"1\", \"-d\", \"2.1\", \"-x\", \"3,5\"});\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNumberPattern_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ]
                    ]
                },
                "169-172:testNumberPattern_test1_decomposed": {
                    "start": 169,
                    "end": 172,
                    "body": [
                        "    public void testNumberPattern_test1_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"n%d%x%\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNumberPattern_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ]
                    ]
                },
                "164-166:testNumberPattern_test0_decomposed": {
                    "start": 164,
                    "end": 166,
                    "body": [
                        "    public void testNumberPattern_test0_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"n%d%x%\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testNumberPattern_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ]
                    ]
                },
                "156-161:testExistingFilePatternFileNotExist_test3_decomposed": {
                    "start": 156,
                    "end": 161,
                    "body": [
                        "    public void testExistingFilePatternFileNotExist_test3_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"f<\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, new String[] {\"-f\", \"non-existing.file\"});\n",
                        "        assertNull(\"option f parsed\", line.getOptionObject1(\"f\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testExistingFilePatternFileNotExist_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ]
                    ]
                },
                "149-153:testExistingFilePatternFileNotExist_test2_decomposed": {
                    "start": 149,
                    "end": 153,
                    "body": [
                        "    public void testExistingFilePatternFileNotExist_test2_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"f<\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line = parser.parse0(options, new String[] {\"-f\", \"non-existing.file\"});\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testExistingFilePatternFileNotExist_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ]
                    ]
                },
                "143-146:testExistingFilePatternFileNotExist_test1_decomposed": {
                    "start": 143,
                    "end": 146,
                    "body": [
                        "    public void testExistingFilePatternFileNotExist_test1_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"f<\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testExistingFilePatternFileNotExist_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ]
                    ]
                },
                "138-140:testExistingFilePatternFileNotExist_test0_decomposed": {
                    "start": 138,
                    "end": 140,
                    "body": [
                        "    public void testExistingFilePatternFileNotExist_test0_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"f<\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testExistingFilePatternFileNotExist_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ]
                    ]
                },
                "121-135:testExistingFilePattern_test4_decomposed": {
                    "start": 121,
                    "end": 135,
                    "body": [
                        "    public void testExistingFilePattern_test4_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"g<\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(\n",
                        "                        options,\n",
                        "                        new String[] {\n",
                        "                            \"-g\", \"src/test/resources/org/apache/commons/cli/existing-readable.file\"\n",
                        "                        });\n",
                        "        final Object parsedReadableFileStream = line.getOptionObject1(\"g\");\n",
                        "        assertNotNull(\"option g not parsed\", parsedReadableFileStream);\n",
                        "        assertTrue(\n",
                        "                \"option g not FileInputStream\",\n",
                        "                parsedReadableFileStream instanceof FileInputStream);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testExistingFilePattern_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull(java.lang.String,java.lang.Object)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(java.lang.String,boolean)"
                        ]
                    ]
                },
                "108-118:testExistingFilePattern_test3_decomposed": {
                    "start": 108,
                    "end": 118,
                    "body": [
                        "    public void testExistingFilePattern_test3_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"g<\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(\n",
                        "                        options,\n",
                        "                        new String[] {\n",
                        "                            \"-g\", \"src/test/resources/org/apache/commons/cli/existing-readable.file\"\n",
                        "                        });\n",
                        "        final Object parsedReadableFileStream = line.getOptionObject1(\"g\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testExistingFilePattern_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ]
                    ]
                },
                "96-105:testExistingFilePattern_test2_decomposed": {
                    "start": 96,
                    "end": 105,
                    "body": [
                        "    public void testExistingFilePattern_test2_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"g<\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(\n",
                        "                        options,\n",
                        "                        new String[] {\n",
                        "                            \"-g\", \"src/test/resources/org/apache/commons/cli/existing-readable.file\"\n",
                        "                        });\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testExistingFilePattern_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ]
                    ]
                },
                "90-93:testExistingFilePattern_test1_decomposed": {
                    "start": 90,
                    "end": 93,
                    "body": [
                        "    public void testExistingFilePattern_test1_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"g<\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testExistingFilePattern_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ]
                    ]
                },
                "85-87:testExistingFilePattern_test0_decomposed": {
                    "start": 85,
                    "end": 87,
                    "body": [
                        "    public void testExistingFilePattern_test0_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"g<\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testExistingFilePattern_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ]
                    ]
                },
                "79-82:testEmptyPattern_test1_decomposed": {
                    "start": 79,
                    "end": 82,
                    "body": [
                        "    public void testEmptyPattern_test1_decomposed()  {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"\");\n",
                        "        assertTrue(options.getOptions().isEmpty());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmptyPattern_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "isEmpty()"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.Options",
                            "Options",
                            "251-253:getOptions"
                        ]
                    ]
                },
                "74-76:testEmptyPattern_test0_decomposed": {
                    "start": 74,
                    "end": 76,
                    "body": [
                        "    public void testEmptyPattern_test0_decomposed()  {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testEmptyPattern_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ]
                    ]
                },
                "62-71:testClassPattern_test3_decomposed": {
                    "start": 62,
                    "end": 71,
                    "body": [
                        "    public void testClassPattern_test3_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"c+d+\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(\n",
                        "                        options,\n",
                        "                        new String[] {\"-c\", \"java.util.Calendar\", \"-d\", \"System.DateTime\"});\n",
                        "        assertEquals(\"c value\", Calendar.class, line.getOptionObject1(\"c\"));\n",
                        "        assertNull(\"d value\", line.getOptionObject1(\"d\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testClassPattern_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.String,java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLine",
                            "CommandLine",
                            "145-153:getOptionObject1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.String,java.lang.Object)"
                        ]
                    ]
                },
                "52-59:testClassPattern_test2_decomposed": {
                    "start": 52,
                    "end": 59,
                    "body": [
                        "    public void testClassPattern_test2_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"c+d+\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "        final CommandLine line =\n",
                        "                parser.parse0(\n",
                        "                        options,\n",
                        "                        new String[] {\"-c\", \"java.util.Calendar\", \"-d\", \"System.DateTime\"});\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testClassPattern_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.CommandLineParser",
                            "CommandLineParser",
                            "35-35:parse0"
                        ]
                    ]
                },
                "46-49:testClassPattern_test1_decomposed": {
                    "start": 46,
                    "end": 49,
                    "body": [
                        "    public void testClassPattern_test1_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"c+d+\");\n",
                        "        final CommandLineParser parser = new PosixParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testClassPattern_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ],
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PosixParser",
                            "PosixParser",
                            "PosixParser"
                        ]
                    ]
                },
                "41-43:testClassPattern_test0_decomposed": {
                    "start": 41,
                    "end": 43,
                    "body": [
                        "    public void testClassPattern_test0_decomposed() throws Exception {\n",
                        "        final Options options = PatternOptionBuilder.parsePattern(\"c+d+\");\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testClassPattern_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-cli.src.main.org.apache.commons.cli.PatternOptionBuilder",
                            "PatternOptionBuilder",
                            "146-191:parsePattern"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}