{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-graph/src/main/java/org/apache/commons/graph/connectivity/DefaultConnectivityBuilder.java",
    "imports": {
        "26-26:import Graph": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "24-24:import static Arrays.asList": {
            "start": 24,
            "end": 24,
            "body": [
                "import static java.util.Arrays.asList;\n"
            ]
        },
        "22-22:import static Assertions.checkNotNull": {
            "start": 22,
            "end": 22,
            "body": [
                "import static org.apache.commons.graph.utils.Assertions.checkNotNull;\n"
            ]
        }
    },
    "classes": {
        "DefaultConnectivityBuilder": {
            "start": 34,
            "end": 34,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [
                "ConnectivityBuilder<V,E>"
            ],
            "extends": [],
            "methods": {
                "53-60:includingVertices": {
                    "start": 53,
                    "end": 60,
                    "body": [
                        "    public ConnectivityAlgorithmsSelector<V, E> includingVertices(V... vertices) {\n",
                        "        vertices =\n",
                        "                checkNotNull(\n",
                        "                        vertices,\n",
                        "                        \"Graph connectivity cannote be applied on null vertices array, use no-args\"\n",
                        "                                + \" if you intend specify no vertices\");\n",
                        "        return new DefaultConnectivityAlgorithmsSelector<V, E>(graph, asList(vertices));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "ConnectivityAlgorithmsSelector<V,E>",
                            "ConnectivityAlgorithmsSelector<V,E>"
                        ]
                    ],
                    "signature": "includingVertices(V[])",
                    "parameters": [
                        "vertices"
                    ],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.utils.Assertions",
                            "Assertions",
                            "64-70:checkNotNull"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/connectivity/DefaultConnectivityAlgorithmsSelector",
                            "DefaultConnectivityAlgorithmsSelector<V,E>(org.apache.commons.graph.Graph,java.lang.Iterable)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "asList(java.lang.Object[])"
                        ]
                    ]
                },
                "48-50:includingAllVertices": {
                    "start": 48,
                    "end": 50,
                    "body": [
                        "    public ConnectivityAlgorithmsSelector<V, E> includingAllVertices() {\n",
                        "        return new DefaultConnectivityAlgorithmsSelector<V, E>(graph, graph.getVertices0());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "ConnectivityAlgorithmsSelector<V,E>",
                            "ConnectivityAlgorithmsSelector<V,E>"
                        ]
                    ],
                    "signature": "includingAllVertices()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/connectivity/DefaultConnectivityAlgorithmsSelector",
                            "DefaultConnectivityAlgorithmsSelector<V,E>(org.apache.commons.graph.Graph,java.lang.Iterable)"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Graph",
                            "getVertices0()"
                        ]
                    ]
                },
                "43-45:DefaultConnectivityBuilder": {
                    "start": 43,
                    "end": 45,
                    "body": [
                        "    public DefaultConnectivityBuilder(Graph<V, E> graph) {\n",
                        "        this.graph = graph;\n",
                        "    }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "DefaultConnectivityBuilder(Graph<V,E>)",
                    "parameters": [
                        "graph"
                    ],
                    "calls": []
                }
            },
            "fields": {
                "36-36:graph": {
                    "start": 36,
                    "end": 36,
                    "body": [
                        "    private final Graph<V, E> graph;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Graph<V,E>",
                            "Graph<V,E>"
                        ]
                    ]
                }
            }
        }
    }
}