{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-pool/src/main/java/org/apache/commons/pool2/impl/BaseGenericObjectPool.java",
    "imports": {
        "26-26:import Writer": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.io.Writer;\n"
            ]
        },
        "24-24:import PrintWriter": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.io.PrintWriter;\n"
            ]
        },
        "27-27:import InvocationTargetException": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.lang.reflect.InvocationTargetException;\n"
            ]
        },
        "25-25:import StringWriter": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.io.StringWriter;\n"
            ]
        },
        "35-35:import Map": {
            "start": 35,
            "end": 35,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "34-34:import List": {
            "start": 34,
            "end": 34,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "33-33:import Iterator": {
            "start": 33,
            "end": 33,
            "body": [
                "import java.util.Iterator;\n"
            ]
        },
        "28-28:import Duration": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.time.Duration;\n"
            ]
        },
        "29-29:import Instant": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.time.Instant;\n"
            ]
        },
        "30-30:import ArrayList": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.util.ArrayList;\n"
            ]
        },
        "31-31:import Arrays": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.util.Arrays;\n"
            ]
        },
        "32-32:import Deque": {
            "start": 32,
            "end": 32,
            "body": [
                "import java.util.Deque;\n"
            ]
        },
        "36-36:import TimerTask": {
            "start": 36,
            "end": 36,
            "body": [
                "import java.util.TimerTask;\n"
            ]
        },
        "37-37:import ScheduledFuture": {
            "start": 37,
            "end": 37,
            "body": [
                "import java.util.concurrent.ScheduledFuture;\n"
            ]
        },
        "38-38:import AtomicLong": {
            "start": 38,
            "end": 38,
            "body": [
                "import java.util.concurrent.atomic.AtomicLong;\n"
            ]
        },
        "39-39:import AtomicReference": {
            "start": 39,
            "end": 39,
            "body": [
                "import java.util.concurrent.atomic.AtomicReference;\n"
            ]
        },
        "40-40:import Collectors": {
            "start": 40,
            "end": 40,
            "body": [
                "import java.util.stream.Collectors;\n"
            ]
        },
        "19-19:import BaseObject": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.apache.commons.pool2.BaseObject;\n"
            ]
        },
        "20-20:import PooledObject": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.pool2.PooledObject;\n"
            ]
        },
        "21-21:import PooledObjectState": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.pool2.PooledObjectState;\n"
            ]
        },
        "22-22:import SwallowedExceptionListener": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.pool2.SwallowedExceptionListener;\n"
            ]
        }
    },
    "classes": {
        "EvictionIterator": {
            "start": 54,
            "end": 54,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "BaseGenericObjectPool",
            "nests": [],
            "implements": [
                "Iterator<PooledObject<T>>"
            ],
            "extends": [],
            "methods": {
                "97-99:remove": {
                    "start": 97,
                    "end": 99,
                    "body": [
                        "        public void remove() {\n",
                        "            idleObjectIterator.remove();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "remove()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "remove()"
                        ]
                    ]
                },
                "91-93:next": {
                    "start": 91,
                    "end": 93,
                    "body": [
                        "        public PooledObject<T> next() {\n",
                        "            return idleObjectIterator.next();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "PooledObject<T>",
                            "PooledObject<T>"
                        ]
                    ],
                    "signature": "next()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "next()"
                        ]
                    ]
                },
                "85-87:hasNext": {
                    "start": 85,
                    "end": 87,
                    "body": [
                        "        public boolean hasNext() {\n",
                        "            return idleObjectIterator.hasNext();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "hasNext()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/Iterator",
                            "hasNext()"
                        ]
                    ]
                },
                "79-81:getIdleObjects": {
                    "start": 79,
                    "end": 81,
                    "body": [
                        "        public Deque<PooledObject<T>> getIdleObjects() {\n",
                        "            return idleObjects;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Deque<PooledObject<T>>",
                            "java.util.Deque<PooledObject<T>>"
                        ]
                    ],
                    "signature": "getIdleObjects()",
                    "parameters": [],
                    "calls": []
                },
                "64-72:EvictionIterator": {
                    "start": 64,
                    "end": 72,
                    "body": [
                        "        EvictionIterator(final Deque<PooledObject<T>> idleObjects) {\n",
                        "            this.idleObjects = idleObjects;\n",
                        "\n",
                        "            if (getLifo()) {\n",
                        "                idleObjectIterator = idleObjects.descendingIterator();\n",
                        "            } else {\n",
                        "                idleObjectIterator = idleObjects.iterator();\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "EvictionIterator(Deque<PooledObject<T>>)",
                    "parameters": [
                        "idleObjects"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "BaseGenericObjectPool",
                            "561-563:getLifo"
                        ],
                        [
                            "library",
                            "java.base/java/util/Deque",
                            "descendingIterator()"
                        ],
                        [
                            "library",
                            "java.base/java/util/Deque",
                            "iterator()"
                        ]
                    ]
                }
            },
            "fields": {
                "57-57:idleObjectIterator": {
                    "start": 57,
                    "end": 57,
                    "body": [
                        "        private final Iterator<PooledObject<T>> idleObjectIterator;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Iterator<PooledObject<T>>",
                            "java.util.Iterator<PooledObject<T>>"
                        ]
                    ]
                },
                "56-56:idleObjects": {
                    "start": 56,
                    "end": 56,
                    "body": [
                        "        private final Deque<PooledObject<T>> idleObjects;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "Deque<PooledObject<T>>",
                            "java.util.Deque<PooledObject<T>>"
                        ]
                    ]
                }
            }
        },
        "BaseGenericObjectPool": {
            "start": 51,
            "end": 51,
            "is_abstract": true,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "EvictionIterator",
                "Evictor",
                "IdentityWrapper",
                "StatsStore",
                "new Consumer<PooledObject<T>>(...) { ... }"
            ],
            "implements": [],
            "extends": [
                "BaseObject",
                "BaseGenericObjectPool<?>"
            ],
            "methods": {
                "1520-1583:toStringAppendFields": {
                    "start": 1520,
                    "end": 1583,
                    "body": [
                        "    protected void toStringAppendFields(final StringBuilder builder) {\n",
                        "        builder.append(\"maxTotal=\");\n",
                        "        builder.append(maxTotal);\n",
                        "        builder.append(\", blockWhenExhausted=\");\n",
                        "        builder.append(blockWhenExhausted);\n",
                        "        builder.append(\", maxWaitDuration=\");\n",
                        "        builder.append(maxWaitDuration);\n",
                        "        builder.append(\", lifo=\");\n",
                        "        builder.append(lifo);\n",
                        "        builder.append(\", fairness=\");\n",
                        "        builder.append(\", testOnCreate=\");\n",
                        "        builder.append(testOnCreate);\n",
                        "        builder.append(\", testOnBorrow=\");\n",
                        "        builder.append(testOnBorrow);\n",
                        "        builder.append(\", testOnReturn=\");\n",
                        "        builder.append(testOnReturn);\n",
                        "        builder.append(\", testWhileIdle=\");\n",
                        "        builder.append(testWhileIdle);\n",
                        "        builder.append(\", durationBetweenEvictionRuns=\");\n",
                        "        builder.append(durationBetweenEvictionRuns);\n",
                        "        builder.append(\", numTestsPerEvictionRun=\");\n",
                        "        builder.append(numTestsPerEvictionRun);\n",
                        "        builder.append(\", minEvictableIdleTimeDuration=\");\n",
                        "        builder.append(minEvictableIdleDuration);\n",
                        "        builder.append(\", softMinEvictableIdleTimeDuration=\");\n",
                        "        builder.append(softMinEvictableIdleDuration);\n",
                        "        builder.append(\", evictionPolicy=\");\n",
                        "        builder.append(evictionPolicy);\n",
                        "        builder.append(\", closeLock=\");\n",
                        "        builder.append(closeLock);\n",
                        "        builder.append(\", closed=\");\n",
                        "        builder.append(closed);\n",
                        "        builder.append(\", evictionLock=\");\n",
                        "        builder.append(evictionLock);\n",
                        "        builder.append(\", evictor=\");\n",
                        "        builder.append(evictor);\n",
                        "        builder.append(\", evictionIterator=\");\n",
                        "        builder.append(evictionIterator);\n",
                        "        builder.append(\", factoryClassLoader=\");\n",
                        "        builder.append(\", oname=\");\n",
                        "        builder.append(\", creationStackTrace=\");\n",
                        "        builder.append(\", borrowedCount=\");\n",
                        "        builder.append(borrowedCount);\n",
                        "        builder.append(\", returnedCount=\");\n",
                        "        builder.append(returnedCount);\n",
                        "        builder.append(\", createdCount=\");\n",
                        "        builder.append(createdCount);\n",
                        "        builder.append(\", destroyedCount=\");\n",
                        "        builder.append(destroyedCount);\n",
                        "        builder.append(\", destroyedByEvictorCount=\");\n",
                        "        builder.append(destroyedByEvictorCount);\n",
                        "        builder.append(\", destroyedByBorrowValidationCount=\");\n",
                        "        builder.append(destroyedByBorrowValidationCount);\n",
                        "        builder.append(\", activeTimes=\");\n",
                        "        builder.append(activeTimes);\n",
                        "        builder.append(\", idleTimes=\");\n",
                        "        builder.append(idleTimes);\n",
                        "        builder.append(\", waitTimes=\");\n",
                        "        builder.append(waitTimes);\n",
                        "        builder.append(\", maxBorrowWaitDuration=\");\n",
                        "        builder.append(maxBorrowWaitDuration);\n",
                        "        builder.append(\", swallowedExceptionListener=\");\n",
                        "        builder.append(swallowedExceptionListener);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "toStringAppendFields(StringBuilder)",
                    "parameters": [
                        "builder"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(boolean)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.Object)"
                        ]
                    ]
                },
                "1387-1389:setSoftMinEvictableIdleTimeMillis": {
                    "start": 1387,
                    "end": 1389,
                    "body": [
                        "    public final void setSoftMinEvictableIdleTimeMillis(final long softMinEvictableIdleTimeMillis) {\n",
                        "        setSoftMinEvictableIdleTime(Duration.ofMillis(softMinEvictableIdleTimeMillis));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setSoftMinEvictableIdleTimeMillis(long)",
                    "parameters": [
                        "softMinEvictableIdleTimeMillis"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "BaseGenericObjectPool",
                            "1366-1371:setSoftMinEvictableIdleTime"
                        ],
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "ofMillis(long)"
                        ]
                    ]
                },
                "1366-1371:setSoftMinEvictableIdleTime": {
                    "start": 1366,
                    "end": 1371,
                    "body": [
                        "    public final void setSoftMinEvictableIdleTime(final Duration softMinEvictableIdleTime) {\n",
                        "        this.softMinEvictableIdleDuration =\n",
                        "                PoolImplUtils.nonNull(\n",
                        "                        softMinEvictableIdleTime,\n",
                        "                        BaseObjectPoolConfig.DEFAULT_SOFT_MIN_EVICTABLE_IDLE_DURATION);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setSoftMinEvictableIdleTime(Duration)",
                    "parameters": [
                        "softMinEvictableIdleTime"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.PoolImplUtils",
                            "PoolImplUtils",
                            "210-212:nonNull"
                        ]
                    ]
                },
                "1311-1313:setMinEvictableIdleTimeMillis": {
                    "start": 1311,
                    "end": 1313,
                    "body": [
                        "    public final void setMinEvictableIdleTimeMillis(final long minEvictableIdleTimeMillis) {\n",
                        "        setMinEvictableIdleTime(Duration.ofMillis(minEvictableIdleTimeMillis));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setMinEvictableIdleTimeMillis(long)",
                    "parameters": [
                        "minEvictableIdleTimeMillis"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "BaseGenericObjectPool",
                            "1291-1296:setMinEvictableIdleTime"
                        ],
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "ofMillis(long)"
                        ]
                    ]
                },
                "1291-1296:setMinEvictableIdleTime": {
                    "start": 1291,
                    "end": 1296,
                    "body": [
                        "    public final void setMinEvictableIdleTime(final Duration minEvictableIdleTime) {\n",
                        "        this.minEvictableIdleDuration =\n",
                        "                PoolImplUtils.nonNull(\n",
                        "                        minEvictableIdleTime,\n",
                        "                        BaseObjectPoolConfig.DEFAULT_MIN_EVICTABLE_IDLE_DURATION);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setMinEvictableIdleTime(Duration)",
                    "parameters": [
                        "minEvictableIdleTime"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.PoolImplUtils",
                            "PoolImplUtils",
                            "210-212:nonNull"
                        ]
                    ]
                },
                "1241-1243:setMaxWaitMillis": {
                    "start": 1241,
                    "end": 1243,
                    "body": [
                        "    public final void setMaxWaitMillis(final long maxWaitMillis) {\n",
                        "        setMaxWait(Duration.ofMillis(maxWaitMillis));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setMaxWaitMillis(long)",
                    "parameters": [
                        "maxWaitMillis"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "BaseGenericObjectPool",
                            "1223-1226:setMaxWait"
                        ],
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "ofMillis(long)"
                        ]
                    ]
                },
                "1183-1185:setEvictorShutdownTimeoutMillis": {
                    "start": 1183,
                    "end": 1185,
                    "body": [
                        "    public final void setEvictorShutdownTimeoutMillis(final long evictorShutdownTimeoutMillis) {\n",
                        "        setEvictorShutdownTimeout(Duration.ofMillis(evictorShutdownTimeoutMillis));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setEvictorShutdownTimeoutMillis(long)",
                    "parameters": [
                        "evictorShutdownTimeoutMillis"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "BaseGenericObjectPool",
                            "1167-1172:setEvictorShutdownTimeout"
                        ],
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "ofMillis(long)"
                        ]
                    ]
                },
                "990-992:getTimeBetweenEvictionRunsMillis": {
                    "start": 990,
                    "end": 992,
                    "body": [
                        "    public final long getTimeBetweenEvictionRunsMillis() {\n",
                        "        return durationBetweenEvictionRuns.toMillis();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getTimeBetweenEvictionRunsMillis()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "toMillis()"
                        ]
                    ]
                },
                "977-979:getTimeBetweenEvictionRuns": {
                    "start": 977,
                    "end": 979,
                    "body": [
                        "    public final Duration getTimeBetweenEvictionRuns() {\n",
                        "        return durationBetweenEvictionRuns;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ],
                    "signature": "getTimeBetweenEvictionRuns()",
                    "parameters": [],
                    "calls": []
                },
                "864-866:getSoftMinEvictableIdleTimeMillis": {
                    "start": 864,
                    "end": 866,
                    "body": [
                        "    public final long getSoftMinEvictableIdleTimeMillis() {\n",
                        "        return softMinEvictableIdleDuration.toMillis();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getSoftMinEvictableIdleTimeMillis()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "toMillis()"
                        ]
                    ]
                },
                "846-848:getSoftMinEvictableIdleTime": {
                    "start": 846,
                    "end": 848,
                    "body": [
                        "    public final Duration getSoftMinEvictableIdleTime() {\n",
                        "        return softMinEvictableIdleDuration;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ],
                    "signature": "getSoftMinEvictableIdleTime()",
                    "parameters": [],
                    "calls": []
                },
                "785-787:getRemoveAbandonedTimeout": {
                    "start": 785,
                    "end": 787,
                    "body": [
                        "    public int getRemoveAbandonedTimeout() {\n",
                        "        return (int) getRemoveAbandonedTimeoutDuration().getSeconds();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getRemoveAbandonedTimeout()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "getSeconds()"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "BaseGenericObjectPool",
                            "797-802:getRemoveAbandonedTimeoutDuration"
                        ]
                    ]
                },
                "721-723:getMinEvictableIdleTimeMillis": {
                    "start": 721,
                    "end": 723,
                    "body": [
                        "    public final long getMinEvictableIdleTimeMillis() {\n",
                        "        return minEvictableIdleDuration.toMillis();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getMinEvictableIdleTimeMillis()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "toMillis()"
                        ]
                    ]
                },
                "704-706:getMinEvictableIdleTime": {
                    "start": 704,
                    "end": 706,
                    "body": [
                        "    public final Duration getMinEvictableIdleTime() {\n",
                        "        return minEvictableIdleDuration;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ],
                    "signature": "getMinEvictableIdleTime()",
                    "parameters": [],
                    "calls": []
                },
                "625-627:getMaxWaitMillis": {
                    "start": 625,
                    "end": 627,
                    "body": [
                        "    public final long getMaxWaitMillis() {\n",
                        "        return maxWaitDuration.toMillis();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getMaxWaitMillis()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "toMillis()"
                        ]
                    ]
                },
                "534-536:getEvictorShutdownTimeoutMillis": {
                    "start": 534,
                    "end": 536,
                    "body": [
                        "    public final long getEvictorShutdownTimeoutMillis() {\n",
                        "        return evictorShutdownTimeoutDuration.toMillis();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getEvictorShutdownTimeoutMillis()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "toMillis()"
                        ]
                    ]
                },
                "510-512:getEvictorShutdownTimeout": {
                    "start": 510,
                    "end": 512,
                    "body": [
                        "    public final Duration getEvictorShutdownTimeout() {\n",
                        "        return evictorShutdownTimeoutDuration;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Deprecated",
                        "Deprecated"
                    ],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ],
                    "signature": "getEvictorShutdownTimeout()",
                    "parameters": [],
                    "calls": []
                },
                "1088-1097:setEvictionPolicy1": {
                    "start": 1088,
                    "end": 1097,
                    "body": [
                        "    private void setEvictionPolicy1(final String className, final ClassLoader classLoader)\n",
                        "            throws ClassNotFoundException,\n",
                        "                    InstantiationException,\n",
                        "                    IllegalAccessException,\n",
                        "                    InvocationTargetException,\n",
                        "                    NoSuchMethodException {\n",
                        "        final Class<?> clazz = Class.forName(className, true, classLoader);\n",
                        "        final Object policy = clazz.getConstructor().newInstance();\n",
                        "        this.evictionPolicy = (EvictionPolicy<T>) policy;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "SuppressWarnings(\"unchecked\")"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setEvictionPolicy1(String, ClassLoader)",
                    "parameters": [
                        "className",
                        "classLoader"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "forName(java.lang.String,boolean,java.lang.ClassLoader)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/reflect/Constructor",
                            "newInstance(java.lang.Object[])"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getConstructor(java.lang.Class[])"
                        ]
                    ]
                },
                "1611-1614:updateStatsReturn": {
                    "start": 1611,
                    "end": 1614,
                    "body": [
                        "    final void updateStatsReturn(final Duration activeTime) {\n",
                        "        returnedCount.incrementAndGet();\n",
                        "        activeTimes.add0(activeTime);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "updateStatsReturn(Duration)",
                    "parameters": [
                        "activeTime"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "incrementAndGet()"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "StatsStore",
                            "208-210:add0"
                        ]
                    ]
                },
                "1591-1603:updateStatsBorrow": {
                    "start": 1591,
                    "end": 1603,
                    "body": [
                        "    final void updateStatsBorrow(final PooledObject<T> p, final Duration waitDuration) {\n",
                        "        borrowedCount.incrementAndGet();\n",
                        "        idleTimes.add0(p.getIdleDuration());\n",
                        "        waitTimes.add0(waitDuration);\n",
                        "\n",
                        "        Duration currentMaxDuration;\n",
                        "        do {\n",
                        "            currentMaxDuration = maxBorrowWaitDuration.get();\n",
                        "            if (currentMaxDuration.compareTo(waitDuration) >= 0) {\n",
                        "                break;\n",
                        "            }\n",
                        "        } while (!maxBorrowWaitDuration.compareAndSet(currentMaxDuration, waitDuration));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "updateStatsBorrow(PooledObject<T>, Duration)",
                    "parameters": [
                        "p",
                        "waitDuration"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "incrementAndGet()"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "StatsStore",
                            "208-210:add0"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObject",
                            "getIdleDuration()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "get()"
                        ],
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "compareTo(java.time.Duration)"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "compareAndSet(java.time.Duration,java.time.Duration)"
                        ]
                    ]
                },
                "1504-1517:swallowException": {
                    "start": 1504,
                    "end": 1517,
                    "body": [
                        "    final void swallowException(final Exception swallowException) {\n",
                        "        final SwallowedExceptionListener listener = getSwallowedExceptionListener();\n",
                        "\n",
                        "        if (listener == null) {\n",
                        "            return;\n",
                        "        }\n",
                        "\n",
                        "        try {\n",
                        "            listener.onSwallowException(swallowException);\n",
                        "        } catch (final VirtualMachineError e) {\n",
                        "            throw e;\n",
                        "        } catch (final Throwable t) {\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "swallowException(Exception)",
                    "parameters": [
                        "swallowException"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "BaseGenericObjectPool",
                            "893-895:getSwallowedExceptionListener"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.SwallowedExceptionListener",
                            "SwallowedExceptionListener",
                            "34-34:onSwallowException"
                        ]
                    ]
                },
                "1458-1460:setTestWhileIdle": {
                    "start": 1458,
                    "end": 1460,
                    "body": [
                        "    public final void setTestWhileIdle(final boolean testWhileIdle) {\n",
                        "        this.testWhileIdle = testWhileIdle;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setTestWhileIdle(boolean)",
                    "parameters": [
                        "testWhileIdle"
                    ],
                    "calls": []
                },
                "1442-1444:setTestOnReturn": {
                    "start": 1442,
                    "end": 1444,
                    "body": [
                        "    public final void setTestOnReturn(final boolean testOnReturn) {\n",
                        "        this.testOnReturn = testOnReturn;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setTestOnReturn(boolean)",
                    "parameters": [
                        "testOnReturn"
                    ],
                    "calls": []
                },
                "1428-1430:setTestOnCreate": {
                    "start": 1428,
                    "end": 1430,
                    "body": [
                        "    public final void setTestOnCreate(final boolean testOnCreate) {\n",
                        "        this.testOnCreate = testOnCreate;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setTestOnCreate(boolean)",
                    "parameters": [
                        "testOnCreate"
                    ],
                    "calls": []
                },
                "1413-1415:setTestOnBorrow": {
                    "start": 1413,
                    "end": 1415,
                    "body": [
                        "    public final void setTestOnBorrow(final boolean testOnBorrow) {\n",
                        "        this.testOnBorrow = testOnBorrow;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setTestOnBorrow(boolean)",
                    "parameters": [
                        "testOnBorrow"
                    ],
                    "calls": []
                },
                "1397-1400:setSwallowedExceptionListener": {
                    "start": 1397,
                    "end": 1400,
                    "body": [
                        "    public final void setSwallowedExceptionListener(\n",
                        "            final SwallowedExceptionListener swallowedExceptionListener) {\n",
                        "        this.swallowedExceptionListener = swallowedExceptionListener;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setSwallowedExceptionListener(SwallowedExceptionListener)",
                    "parameters": [
                        "swallowedExceptionListener"
                    ],
                    "calls": []
                },
                "1344-1349:setSoftMinEvictableIdle": {
                    "start": 1344,
                    "end": 1349,
                    "body": [
                        "    public final void setSoftMinEvictableIdle(final Duration softMinEvictableIdleTime) {\n",
                        "        this.softMinEvictableIdleDuration =\n",
                        "                PoolImplUtils.nonNull(\n",
                        "                        softMinEvictableIdleTime,\n",
                        "                        BaseObjectPoolConfig.DEFAULT_SOFT_MIN_EVICTABLE_IDLE_DURATION);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setSoftMinEvictableIdle(Duration)",
                    "parameters": [
                        "softMinEvictableIdleTime"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.PoolImplUtils",
                            "PoolImplUtils",
                            "210-212:nonNull"
                        ]
                    ]
                },
                "1327-1329:setNumTestsPerEvictionRun": {
                    "start": 1327,
                    "end": 1329,
                    "body": [
                        "    public final void setNumTestsPerEvictionRun(final int numTestsPerEvictionRun) {\n",
                        "        this.numTestsPerEvictionRun = numTestsPerEvictionRun;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setNumTestsPerEvictionRun(int)",
                    "parameters": [
                        "numTestsPerEvictionRun"
                    ],
                    "calls": []
                },
                "1270-1275:setMinEvictableIdle": {
                    "start": 1270,
                    "end": 1275,
                    "body": [
                        "    public final void setMinEvictableIdle(final Duration minEvictableIdleTime) {\n",
                        "        this.minEvictableIdleDuration =\n",
                        "                PoolImplUtils.nonNull(\n",
                        "                        minEvictableIdleTime,\n",
                        "                        BaseObjectPoolConfig.DEFAULT_MIN_EVICTABLE_IDLE_DURATION);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setMinEvictableIdle(Duration)",
                    "parameters": [
                        "minEvictableIdleTime"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.PoolImplUtils",
                            "PoolImplUtils",
                            "210-212:nonNull"
                        ]
                    ]
                },
                "1254-1256:setMessagesStatistics": {
                    "start": 1254,
                    "end": 1256,
                    "body": [
                        "    public void setMessagesStatistics(final boolean messagesDetails) {\n",
                        "        this.messageStatistics = messagesDetails;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setMessagesStatistics(boolean)",
                    "parameters": [
                        "messagesDetails"
                    ],
                    "calls": []
                },
                "1223-1226:setMaxWait": {
                    "start": 1223,
                    "end": 1226,
                    "body": [
                        "    public final void setMaxWait(final Duration maxWaitDuration) {\n",
                        "        this.maxWaitDuration =\n",
                        "                PoolImplUtils.nonNull(maxWaitDuration, BaseObjectPoolConfig.DEFAULT_MAX_WAIT);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setMaxWait(Duration)",
                    "parameters": [
                        "maxWaitDuration"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.PoolImplUtils",
                            "PoolImplUtils",
                            "210-212:nonNull"
                        ]
                    ]
                },
                "1208-1210:setMaxTotal": {
                    "start": 1208,
                    "end": 1210,
                    "body": [
                        "    public final void setMaxTotal(final int maxTotal) {\n",
                        "        this.maxTotal = maxTotal;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setMaxTotal(int)",
                    "parameters": [
                        "maxTotal"
                    ],
                    "calls": []
                },
                "1196-1198:setLifo": {
                    "start": 1196,
                    "end": 1198,
                    "body": [
                        "    public final void setLifo(final boolean lifo) {\n",
                        "        this.lifo = lifo;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setLifo(boolean)",
                    "parameters": [
                        "lifo"
                    ],
                    "calls": []
                },
                "1167-1172:setEvictorShutdownTimeout": {
                    "start": 1167,
                    "end": 1172,
                    "body": [
                        "    public final void setEvictorShutdownTimeout(final Duration evictorShutdownTimeout) {\n",
                        "        this.evictorShutdownTimeoutDuration =\n",
                        "                PoolImplUtils.nonNull(\n",
                        "                        evictorShutdownTimeout,\n",
                        "                        BaseObjectPoolConfig.DEFAULT_EVICTOR_SHUTDOWN_TIMEOUT);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setEvictorShutdownTimeout(Duration)",
                    "parameters": [
                        "evictorShutdownTimeout"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.PoolImplUtils",
                            "PoolImplUtils",
                            "210-212:nonNull"
                        ]
                    ]
                },
                "1125-1157:setEvictionPolicyClassName1": {
                    "start": 1125,
                    "end": 1157,
                    "body": [
                        "    public final void setEvictionPolicyClassName1(\n",
                        "            final String evictionPolicyClassName, final ClassLoader classLoader) {\n",
                        "        final Class<?> epClass = EvictionPolicy.class;\n",
                        "        final ClassLoader epClassLoader = epClass.getClassLoader();\n",
                        "        try {\n",
                        "            try {\n",
                        "                setEvictionPolicy1(evictionPolicyClassName, classLoader);\n",
                        "            } catch (final ClassCastException | ClassNotFoundException e) {\n",
                        "                setEvictionPolicy1(evictionPolicyClassName, epClassLoader);\n",
                        "            }\n",
                        "        } catch (final ClassCastException e) {\n",
                        "            throw new IllegalArgumentException(\n",
                        "                    \"Class \"\n",
                        "                            + evictionPolicyClassName\n",
                        "                            + \" from class loaders [\"\n",
                        "                            + classLoader\n",
                        "                            + \", \"\n",
                        "                            + epClassLoader\n",
                        "                            + \"] do not implement \"\n",
                        "                            + EVICTION_POLICY_TYPE_NAME);\n",
                        "        } catch (final ClassNotFoundException\n",
                        "                | InstantiationException\n",
                        "                | IllegalAccessException\n",
                        "                | InvocationTargetException\n",
                        "                | NoSuchMethodException e) {\n",
                        "            throw new IllegalArgumentException(\n",
                        "                    \"Unable to create \"\n",
                        "                            + EVICTION_POLICY_TYPE_NAME\n",
                        "                            + \" instance of type \"\n",
                        "                            + evictionPolicyClassName,\n",
                        "                    e);\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setEvictionPolicyClassName1(String, ClassLoader)",
                    "parameters": [
                        "evictionPolicyClassName",
                        "classLoader"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getClassLoader()"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "BaseGenericObjectPool",
                            "1088-1097:setEvictionPolicy1"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalArgumentException",
                            "IllegalArgumentException(java.lang.String,java.lang.Throwable)"
                        ]
                    ]
                },
                "1109-1112:setEvictionPolicyClassName0": {
                    "start": 1109,
                    "end": 1112,
                    "body": [
                        "    public final void setEvictionPolicyClassName0(final String evictionPolicyClassName) {\n",
                        "        setEvictionPolicyClassName1(\n",
                        "                evictionPolicyClassName, Thread.currentThread().getContextClassLoader());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setEvictionPolicyClassName0(String)",
                    "parameters": [
                        "evictionPolicyClassName"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "BaseGenericObjectPool",
                            "1125-1157:setEvictionPolicyClassName1"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Thread",
                            "getContextClassLoader()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Thread",
                            "currentThread()"
                        ]
                    ]
                },
                "1077-1079:setEvictionPolicy0": {
                    "start": 1077,
                    "end": 1079,
                    "body": [
                        "    public void setEvictionPolicy0(final EvictionPolicy<T> evictionPolicy) {\n",
                        "        this.evictionPolicy = evictionPolicy;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setEvictionPolicy0(EvictionPolicy<T>)",
                    "parameters": [
                        "evictionPolicy"
                    ],
                    "calls": []
                },
                "1061-1063:setBlockWhenExhausted": {
                    "start": 1061,
                    "end": 1063,
                    "body": [
                        "    public final void setBlockWhenExhausted(final boolean blockWhenExhausted) {\n",
                        "        this.blockWhenExhausted = blockWhenExhausted;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setBlockWhenExhausted(boolean)",
                    "parameters": [
                        "blockWhenExhausted"
                    ],
                    "calls": []
                },
                "1049-1051:setAbandonedConfig": {
                    "start": 1049,
                    "end": 1051,
                    "body": [
                        "    public void setAbandonedConfig(final AbandonedConfig abandonedConfig) {\n",
                        "        this.abandonedConfig = AbandonedConfig.copy(abandonedConfig);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setAbandonedConfig(AbandonedConfig)",
                    "parameters": [
                        "abandonedConfig"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.AbandonedConfig",
                            "AbandonedConfig",
                            "45-47:copy"
                        ]
                    ]
                },
                "1032-1040:markReturningState": {
                    "start": 1032,
                    "end": 1040,
                    "body": [
                        "    protected void markReturningState(final PooledObject<T> pooledObject) {\n",
                        "        synchronized (pooledObject) {\n",
                        "            if (pooledObject.getState() != PooledObjectState.ALLOCATED) {\n",
                        "                throw new IllegalStateException(\n",
                        "                        \"Object has already been returned to this pool or is invalid\");\n",
                        "            }\n",
                        "            pooledObject.markReturning(); // Keep from being marked abandoned\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "protected"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "markReturningState(PooledObject<T>)",
                    "parameters": [
                        "pooledObject"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObject",
                            "getState()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalStateException",
                            "IllegalStateException(java.lang.String)"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObject",
                            "markReturning()"
                        ]
                    ]
                },
                "1009-1011:isClosed": {
                    "start": 1009,
                    "end": 1011,
                    "body": [
                        "    public final boolean isClosed() {\n",
                        "        return closed;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isClosed()",
                    "parameters": [],
                    "calls": []
                },
                "1000-1002:isAbandonedConfig": {
                    "start": 1000,
                    "end": 1002,
                    "body": [
                        "    public boolean isAbandonedConfig() {\n",
                        "        return abandonedConfig != null;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "isAbandonedConfig()",
                    "parameters": [],
                    "calls": []
                },
                "963-965:getDurationBetweenEvictionRuns": {
                    "start": 963,
                    "end": 965,
                    "body": [
                        "    public final Duration getDurationBetweenEvictionRuns() {\n",
                        "        return durationBetweenEvictionRuns;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ],
                    "signature": "getDurationBetweenEvictionRuns()",
                    "parameters": [],
                    "calls": []
                },
                "951-953:getTestWhileIdle": {
                    "start": 951,
                    "end": 953,
                    "body": [
                        "    public final boolean getTestWhileIdle() {\n",
                        "        return testWhileIdle;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "getTestWhileIdle()",
                    "parameters": [],
                    "calls": []
                },
                "937-939:getTestOnReturn": {
                    "start": 937,
                    "end": 939,
                    "body": [
                        "    public final boolean getTestOnReturn() {\n",
                        "        return testOnReturn;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "getTestOnReturn()",
                    "parameters": [],
                    "calls": []
                },
                "923-925:getTestOnCreate": {
                    "start": 923,
                    "end": 925,
                    "body": [
                        "    public final boolean getTestOnCreate() {\n",
                        "        return testOnCreate;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "getTestOnCreate()",
                    "parameters": [],
                    "calls": []
                },
                "908-910:getTestOnBorrow": {
                    "start": 908,
                    "end": 910,
                    "body": [
                        "    public final boolean getTestOnBorrow() {\n",
                        "        return testOnBorrow;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "getTestOnBorrow()",
                    "parameters": [],
                    "calls": []
                },
                "893-895:getSwallowedExceptionListener": {
                    "start": 893,
                    "end": 895,
                    "body": [
                        "    public final SwallowedExceptionListener getSwallowedExceptionListener() {\n",
                        "        return swallowedExceptionListener;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "SwallowedExceptionListener",
                            "SwallowedExceptionListener"
                        ]
                    ],
                    "signature": "getSwallowedExceptionListener()",
                    "parameters": [],
                    "calls": []
                },
                "827-829:getSoftMinEvictableIdleDuration": {
                    "start": 827,
                    "end": 829,
                    "body": [
                        "    public final Duration getSoftMinEvictableIdleDuration() {\n",
                        "        return softMinEvictableIdleDuration;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ],
                    "signature": "getSoftMinEvictableIdleDuration()",
                    "parameters": [],
                    "calls": []
                },
                "810-812:getReturnedCount": {
                    "start": 810,
                    "end": 812,
                    "body": [
                        "    public final long getReturnedCount() {\n",
                        "        return returnedCount.get();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getReturnedCount()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "get()"
                        ]
                    ]
                },
                "797-802:getRemoveAbandonedTimeoutDuration": {
                    "start": 797,
                    "end": 802,
                    "body": [
                        "    public Duration getRemoveAbandonedTimeoutDuration() {\n",
                        "        final AbandonedConfig ac = this.abandonedConfig;\n",
                        "        return ac != null\n",
                        "                ? ac.getRemoveAbandonedTimeoutDuration()\n",
                        "                : DEFAULT_REMOVE_ABANDONED_TIMEOUT;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ],
                    "signature": "getRemoveAbandonedTimeoutDuration()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.AbandonedConfig",
                            "AbandonedConfig",
                            "190-192:getRemoveAbandonedTimeoutDuration"
                        ]
                    ]
                },
                "769-772:getRemoveAbandonedOnMaintenance": {
                    "start": 769,
                    "end": 772,
                    "body": [
                        "    public boolean getRemoveAbandonedOnMaintenance() {\n",
                        "        final AbandonedConfig ac = this.abandonedConfig;\n",
                        "        return ac != null && ac.getRemoveAbandonedOnMaintenance();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "getRemoveAbandonedOnMaintenance()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.AbandonedConfig",
                            "AbandonedConfig",
                            "157-159:getRemoveAbandonedOnMaintenance"
                        ]
                    ]
                },
                "756-759:getRemoveAbandonedOnBorrow": {
                    "start": 756,
                    "end": 759,
                    "body": [
                        "    public boolean getRemoveAbandonedOnBorrow() {\n",
                        "        final AbandonedConfig ac = this.abandonedConfig;\n",
                        "        return ac != null && ac.getRemoveAbandonedOnBorrow();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "getRemoveAbandonedOnBorrow()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.AbandonedConfig",
                            "AbandonedConfig",
                            "140-142:getRemoveAbandonedOnBorrow"
                        ]
                    ]
                },
                "744-746:getNumTestsPerEvictionRun": {
                    "start": 744,
                    "end": 746,
                    "body": [
                        "    public final int getNumTestsPerEvictionRun() {\n",
                        "        return numTestsPerEvictionRun;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumTestsPerEvictionRun()",
                    "parameters": [],
                    "calls": []
                },
                "686-688:getMinEvictableIdleDuration": {
                    "start": 686,
                    "end": 688,
                    "body": [
                        "    public final Duration getMinEvictableIdleDuration() {\n",
                        "        return minEvictableIdleDuration;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ],
                    "signature": "getMinEvictableIdleDuration()",
                    "parameters": [],
                    "calls": []
                },
                "670-672:getMessageStatistics": {
                    "start": 670,
                    "end": 672,
                    "body": [
                        "    public boolean getMessageStatistics() {\n",
                        "        return messageStatistics;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "getMessageStatistics()",
                    "parameters": [],
                    "calls": []
                },
                "657-659:getMeanIdleTimeMillis": {
                    "start": 657,
                    "end": 659,
                    "body": [
                        "    public final long getMeanIdleTimeMillis() {\n",
                        "        return idleTimes.getMean();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getMeanIdleTimeMillis()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "StatsStore",
                            "240-251:getMean"
                        ]
                    ]
                },
                "647-649:getMeanBorrowWaitTimeMillis": {
                    "start": 647,
                    "end": 649,
                    "body": [
                        "    public final long getMeanBorrowWaitTimeMillis() {\n",
                        "        return waitTimes.getMean();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getMeanBorrowWaitTimeMillis()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "StatsStore",
                            "240-251:getMean"
                        ]
                    ]
                },
                "636-638:getMeanActiveTimeMillis": {
                    "start": 636,
                    "end": 638,
                    "body": [
                        "    public final long getMeanActiveTimeMillis() {\n",
                        "        return activeTimes.getMean();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getMeanActiveTimeMillis()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "StatsStore",
                            "240-251:getMean"
                        ]
                    ]
                },
                "609-611:getMaxWaitDuration": {
                    "start": 609,
                    "end": 611,
                    "body": [
                        "    public final Duration getMaxWaitDuration() {\n",
                        "        return maxWaitDuration;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ],
                    "signature": "getMaxWaitDuration()",
                    "parameters": [],
                    "calls": []
                },
                "595-597:getMaxTotal": {
                    "start": 595,
                    "end": 597,
                    "body": [
                        "    public final int getMaxTotal() {\n",
                        "        return maxTotal;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getMaxTotal()",
                    "parameters": [],
                    "calls": []
                },
                "583-585:getMaxBorrowWaitTimeMillis": {
                    "start": 583,
                    "end": 585,
                    "body": [
                        "    public final long getMaxBorrowWaitTimeMillis() {\n",
                        "        return maxBorrowWaitDuration.get().toMillis();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getMaxBorrowWaitTimeMillis()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "toMillis()"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicReference",
                            "get()"
                        ]
                    ]
                },
                "573-576:getLogAbandoned": {
                    "start": 573,
                    "end": 576,
                    "body": [
                        "    public boolean getLogAbandoned() {\n",
                        "        final AbandonedConfig ac = this.abandonedConfig;\n",
                        "        return ac != null && ac.getLogAbandoned();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "getLogAbandoned()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.AbandonedConfig",
                            "AbandonedConfig",
                            "115-117:getLogAbandoned"
                        ]
                    ]
                },
                "561-563:getLifo": {
                    "start": 561,
                    "end": 563,
                    "body": [
                        "    public final boolean getLifo() {\n",
                        "        return lifo;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "getLifo()",
                    "parameters": [],
                    "calls": []
                },
                "521-523:getEvictorShutdownTimeoutDuration": {
                    "start": 521,
                    "end": 523,
                    "body": [
                        "    public final Duration getEvictorShutdownTimeoutDuration() {\n",
                        "        return evictorShutdownTimeoutDuration;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ],
                    "signature": "getEvictorShutdownTimeoutDuration()",
                    "parameters": [],
                    "calls": []
                },
                "497-499:getEvictionPolicyClassName": {
                    "start": 497,
                    "end": 499,
                    "body": [
                        "    public final String getEvictionPolicyClassName() {\n",
                        "        return evictionPolicy.getClass().getName();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getEvictionPolicyClassName()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Class",
                            "getName()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "getClass()"
                        ]
                    ]
                },
                "487-489:getEvictionPolicy": {
                    "start": 487,
                    "end": 489,
                    "body": [
                        "    public EvictionPolicy<T> getEvictionPolicy() {\n",
                        "        return evictionPolicy;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "EvictionPolicy<T>",
                            "EvictionPolicy<T>"
                        ]
                    ],
                    "signature": "getEvictionPolicy()",
                    "parameters": [],
                    "calls": []
                },
                "476-478:getDestroyedCount": {
                    "start": 476,
                    "end": 478,
                    "body": [
                        "    public final long getDestroyedCount() {\n",
                        "        return destroyedCount.get();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getDestroyedCount()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "get()"
                        ]
                    ]
                },
                "467-469:getDestroyedByEvictorCount": {
                    "start": 467,
                    "end": 469,
                    "body": [
                        "    public final long getDestroyedByEvictorCount() {\n",
                        "        return destroyedByEvictorCount.get();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getDestroyedByEvictorCount()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "get()"
                        ]
                    ]
                },
                "457-459:getDestroyedByBorrowValidationCount": {
                    "start": 457,
                    "end": 459,
                    "body": [
                        "    public final long getDestroyedByBorrowValidationCount() {\n",
                        "        return destroyedByBorrowValidationCount.get();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getDestroyedByBorrowValidationCount()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "get()"
                        ]
                    ]
                },
                "438-440:getCreatedCount": {
                    "start": 438,
                    "end": 440,
                    "body": [
                        "    public final long getCreatedCount() {\n",
                        "        return createdCount.get();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getCreatedCount()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "get()"
                        ]
                    ]
                },
                "429-431:getBorrowedCount": {
                    "start": 429,
                    "end": 431,
                    "body": [
                        "    public final long getBorrowedCount() {\n",
                        "        return borrowedCount.get();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getBorrowedCount()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "get()"
                        ]
                    ]
                },
                "419-421:getBlockWhenExhausted": {
                    "start": 419,
                    "end": 421,
                    "body": [
                        "    public final boolean getBlockWhenExhausted() {\n",
                        "        return blockWhenExhausted;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "final"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "getBlockWhenExhausted()",
                    "parameters": [],
                    "calls": []
                },
                "353-357:assertOpen": {
                    "start": 353,
                    "end": 357,
                    "body": [
                        "    final void assertOpen() throws IllegalStateException {\n",
                        "        if (isClosed()) {\n",
                        "            throw new IllegalStateException(\"Pool not open\");\n",
                        "        }\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "final"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "assertOpen()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "BaseGenericObjectPool",
                            "1009-1011:isClosed"
                        ],
                        [
                            "library",
                            "java.base/java/lang/IllegalStateException",
                            "IllegalStateException(java.lang.String)"
                        ]
                    ]
                },
                "874-879:getStackTrace": {
                    "start": 874,
                    "end": 879,
                    "body": [
                        "    private String getStackTrace(final Exception e) {\n",
                        "        final Writer w = new StringWriter();\n",
                        "        final PrintWriter pw = new PrintWriter(w);\n",
                        "        e.printStackTrace(pw);\n",
                        "        return w.toString();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "private"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "getStackTrace(Exception)",
                    "parameters": [
                        "e"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "StringWriter()"
                        ],
                        [
                            "library",
                            "java.base/java/io/PrintWriter",
                            "PrintWriter(java.io.Writer)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Throwable",
                            "printStackTrace(java.io.PrintWriter)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "toString()"
                        ]
                    ]
                },
                "372-392:createRemoveList": {
                    "start": 372,
                    "end": 392,
                    "body": [
                        "    ArrayList<PooledObject<T>> createRemoveList(\n",
                        "            final AbandonedConfig abandonedConfig,\n",
                        "            final Map<IdentityWrapper<T>, PooledObject<T>> allObjects) {\n",
                        "        final Instant timeout =\n",
                        "                Instant.now().minus(abandonedConfig.getRemoveAbandonedTimeoutDuration());\n",
                        "        final ArrayList<PooledObject<T>> remove = new ArrayList<>();\n",
                        "        allObjects\n",
                        "                .values()\n",
                        "                .forEach(\n",
                        "                        pooledObject -> {\n",
                        "                            synchronized (pooledObject) {\n",
                        "                                if (pooledObject.getState() == PooledObjectState.ALLOCATED\n",
                        "                                        && pooledObject.getLastUsedInstant().compareTo(timeout)\n",
                        "                                                <= 0) {\n",
                        "                                    pooledObject.markAbandoned();\n",
                        "                                    remove.add(pooledObject);\n",
                        "                                }\n",
                        "                            }\n",
                        "                        });\n",
                        "        return remove;\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "ArrayList<PooledObject<T>>",
                            "java.util.ArrayList<PooledObject<T>>"
                        ]
                    ],
                    "signature": "createRemoveList(AbandonedConfig, Map<IdentityWrapper<T>,PooledObject<T>>)",
                    "parameters": [
                        "abandonedConfig",
                        "allObjects"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/Instant",
                            "minus(java.time.temporal.TemporalAmount)"
                        ],
                        [
                            "library",
                            "java.base/java/time/Instant",
                            "now()"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.AbandonedConfig",
                            "AbandonedConfig",
                            "190-192:getRemoveAbandonedTimeoutDuration"
                        ],
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "ArrayList<PooledObject<T>>()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Iterable",
                            "forEach(java.util.function.Consumer)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "values()"
                        ]
                    ]
                },
                "730-730:getNumIdle": {
                    "start": 730,
                    "end": 730,
                    "body": [
                        "    public abstract int getNumIdle();\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "abstract"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "getNumIdle()",
                    "parameters": [],
                    "calls": []
                },
                "410-410:evict": {
                    "start": 410,
                    "end": 410,
                    "body": [
                        "    public abstract void evict() throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "abstract"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "evict()",
                    "parameters": [],
                    "calls": []
                },
                "400-400:ensureMinIdle": {
                    "start": 400,
                    "end": 400,
                    "body": [
                        "    abstract void ensureMinIdle() throws Exception;\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "abstract"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "ensureMinIdle()",
                    "parameters": [],
                    "calls": []
                },
                "363-363:close": {
                    "start": 363,
                    "end": 363,
                    "body": [
                        "    public abstract void close();\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "abstract"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "close()",
                    "parameters": [],
                    "calls": []
                }
            },
            "fields": {
                "328-328:abandonedConfig": {
                    "start": 328,
                    "end": 328,
                    "body": [
                        "    protected volatile AbandonedConfig abandonedConfig;\n"
                    ],
                    "modifiers": [
                        "protected",
                        "volatile"
                    ],
                    "types": [
                        [
                            "AbandonedConfig",
                            "AbandonedConfig"
                        ]
                    ]
                },
                "315-315:destroyedByBorrowValidationCount": {
                    "start": 315,
                    "end": 315,
                    "body": [
                        "    final AtomicLong destroyedByBorrowValidationCount = new AtomicLong();\n"
                    ],
                    "modifiers": [
                        "final"
                    ],
                    "types": [
                        [
                            "AtomicLong",
                            "java.util.concurrent.atomic.AtomicLong"
                        ]
                    ]
                },
                "314-314:destroyedByEvictorCount": {
                    "start": 314,
                    "end": 314,
                    "body": [
                        "    final AtomicLong destroyedByEvictorCount = new AtomicLong();\n"
                    ],
                    "modifiers": [
                        "final"
                    ],
                    "types": [
                        [
                            "AtomicLong",
                            "java.util.concurrent.atomic.AtomicLong"
                        ]
                    ]
                },
                "313-313:destroyedCount": {
                    "start": 313,
                    "end": 313,
                    "body": [
                        "    final AtomicLong destroyedCount = new AtomicLong();\n"
                    ],
                    "modifiers": [
                        "final"
                    ],
                    "types": [
                        [
                            "AtomicLong",
                            "java.util.concurrent.atomic.AtomicLong"
                        ]
                    ]
                },
                "312-312:createdCount": {
                    "start": 312,
                    "end": 312,
                    "body": [
                        "    final AtomicLong createdCount = new AtomicLong();\n"
                    ],
                    "modifiers": [
                        "final"
                    ],
                    "types": [
                        [
                            "AtomicLong",
                            "java.util.concurrent.atomic.AtomicLong"
                        ]
                    ]
                },
                "299-299:evictionLock": {
                    "start": 299,
                    "end": 299,
                    "body": [
                        "    final Object evictionLock = new Object();\n"
                    ],
                    "modifiers": [
                        "final"
                    ],
                    "types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ]
                },
                "297-297:closed": {
                    "start": 297,
                    "end": 297,
                    "body": [
                        "    volatile boolean closed;\n"
                    ],
                    "modifiers": [
                        "volatile"
                    ],
                    "types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ]
                },
                "296-296:closeLock": {
                    "start": 296,
                    "end": 296,
                    "body": [
                        "    final Object closeLock = new Object();\n"
                    ],
                    "modifiers": [
                        "final"
                    ],
                    "types": [
                        [
                            "Object",
                            "java.lang.Object"
                        ]
                    ]
                },
                "271-271:MEAN_TIMING_STATS_CACHE_SIZE": {
                    "start": 271,
                    "end": 271,
                    "body": [
                        "    public static final int MEAN_TIMING_STATS_CACHE_SIZE = 100;\n"
                    ],
                    "modifiers": [
                        "public",
                        "final",
                        "static"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "325-325:messageStatistics": {
                    "start": 325,
                    "end": 325,
                    "body": [
                        "    private volatile boolean messageStatistics;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ]
                },
                "324-324:swallowedExceptionListener": {
                    "start": 324,
                    "end": 324,
                    "body": [
                        "    private volatile SwallowedExceptionListener swallowedExceptionListener;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "SwallowedExceptionListener",
                            "SwallowedExceptionListener"
                        ]
                    ]
                },
                "321-322:maxBorrowWaitDuration": {
                    "start": 321,
                    "end": 322,
                    "body": [
                        "    private final AtomicReference<Duration> maxBorrowWaitDuration =\n",
                        "            new AtomicReference<>(Duration.ZERO);\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "AtomicReference<Duration>",
                            "java.util.concurrent.atomic.AtomicReference<Duration>"
                        ]
                    ]
                },
                "319-319:waitTimes": {
                    "start": 319,
                    "end": 319,
                    "body": [
                        "    private final StatsStore waitTimes = new StatsStore(MEAN_TIMING_STATS_CACHE_SIZE);\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "StatsStore",
                            "StatsStore"
                        ]
                    ]
                },
                "318-318:idleTimes": {
                    "start": 318,
                    "end": 318,
                    "body": [
                        "    private final StatsStore idleTimes = new StatsStore(MEAN_TIMING_STATS_CACHE_SIZE);\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "StatsStore",
                            "StatsStore"
                        ]
                    ]
                },
                "317-317:activeTimes": {
                    "start": 317,
                    "end": 317,
                    "body": [
                        "    private final StatsStore activeTimes = new StatsStore(MEAN_TIMING_STATS_CACHE_SIZE);\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "StatsStore",
                            "StatsStore"
                        ]
                    ]
                },
                "311-311:returnedCount": {
                    "start": 311,
                    "end": 311,
                    "body": [
                        "    private final AtomicLong returnedCount = new AtomicLong();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "AtomicLong",
                            "java.util.concurrent.atomic.AtomicLong"
                        ]
                    ]
                },
                "309-309:borrowedCount": {
                    "start": 309,
                    "end": 309,
                    "body": [
                        "    private final AtomicLong borrowedCount = new AtomicLong();\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "AtomicLong",
                            "java.util.concurrent.atomic.AtomicLong"
                        ]
                    ]
                },
                "300-300:evictor": {
                    "start": 300,
                    "end": 300,
                    "body": [
                        "    private Evictor evictor; // @GuardedBy(\"evictionLock\")\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "Evictor",
                            "Evictor"
                        ]
                    ]
                },
                "294-295:evictorShutdownTimeoutDuration": {
                    "start": 294,
                    "end": 295,
                    "body": [
                        "    private volatile Duration evictorShutdownTimeoutDuration =\n",
                        "            BaseObjectPoolConfig.DEFAULT_EVICTOR_SHUTDOWN_TIMEOUT;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ]
                },
                "293-293:evictionPolicy": {
                    "start": 293,
                    "end": 293,
                    "body": [
                        "    private volatile EvictionPolicy<T> evictionPolicy;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "EvictionPolicy<T>",
                            "EvictionPolicy<T>"
                        ]
                    ]
                },
                "291-292:softMinEvictableIdleDuration": {
                    "start": 291,
                    "end": 292,
                    "body": [
                        "    private volatile Duration softMinEvictableIdleDuration =\n",
                        "            BaseObjectPoolConfig.DEFAULT_SOFT_MIN_EVICTABLE_IDLE_DURATION;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ]
                },
                "289-290:minEvictableIdleDuration": {
                    "start": 289,
                    "end": 290,
                    "body": [
                        "    private volatile Duration minEvictableIdleDuration =\n",
                        "            BaseObjectPoolConfig.DEFAULT_MIN_EVICTABLE_IDLE_DURATION;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ]
                },
                "286-287:numTestsPerEvictionRun": {
                    "start": 286,
                    "end": 287,
                    "body": [
                        "    private volatile int numTestsPerEvictionRun =\n",
                        "            BaseObjectPoolConfig.DEFAULT_NUM_TESTS_PER_EVICTION_RUN;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "284-285:durationBetweenEvictionRuns": {
                    "start": 284,
                    "end": 285,
                    "body": [
                        "    private volatile Duration durationBetweenEvictionRuns =\n",
                        "            BaseObjectPoolConfig.DEFAULT_TIME_BETWEEN_EVICTION_RUNS;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ]
                },
                "283-283:testWhileIdle": {
                    "start": 283,
                    "end": 283,
                    "body": [
                        "    private volatile boolean testWhileIdle = BaseObjectPoolConfig.DEFAULT_TEST_WHILE_IDLE;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ]
                },
                "282-282:testOnReturn": {
                    "start": 282,
                    "end": 282,
                    "body": [
                        "    private volatile boolean testOnReturn = BaseObjectPoolConfig.DEFAULT_TEST_ON_RETURN;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ]
                },
                "281-281:testOnBorrow": {
                    "start": 281,
                    "end": 281,
                    "body": [
                        "    private volatile boolean testOnBorrow = BaseObjectPoolConfig.DEFAULT_TEST_ON_BORROW;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ]
                },
                "280-280:testOnCreate": {
                    "start": 280,
                    "end": 280,
                    "body": [
                        "    private volatile boolean testOnCreate = BaseObjectPoolConfig.DEFAULT_TEST_ON_CREATE;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ]
                },
                "279-279:lifo": {
                    "start": 279,
                    "end": 279,
                    "body": [
                        "    private volatile boolean lifo = BaseObjectPoolConfig.DEFAULT_LIFO;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ]
                },
                "278-278:maxWaitDuration": {
                    "start": 278,
                    "end": 278,
                    "body": [
                        "    private volatile Duration maxWaitDuration = BaseObjectPoolConfig.DEFAULT_MAX_WAIT;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ]
                },
                "277-277:blockWhenExhausted": {
                    "start": 277,
                    "end": 277,
                    "body": [
                        "    private volatile boolean blockWhenExhausted = BaseObjectPoolConfig.DEFAULT_BLOCK_WHEN_EXHAUSTED;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ]
                },
                "276-276:maxTotal": {
                    "start": 276,
                    "end": 276,
                    "body": [
                        "    private volatile int maxTotal = GenericKeyedObjectPoolConfig.DEFAULT_MAX_TOTAL;\n"
                    ],
                    "modifiers": [
                        "volatile",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "274-275:DEFAULT_REMOVE_ABANDONED_TIMEOUT": {
                    "start": 274,
                    "end": 275,
                    "body": [
                        "    private static final Duration DEFAULT_REMOVE_ABANDONED_TIMEOUT =\n",
                        "            Duration.ofSeconds(Integer.MAX_VALUE);\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "Duration",
                            "java.time.Duration"
                        ]
                    ]
                },
                "273-273:EVICTION_POLICY_TYPE_NAME": {
                    "start": 273,
                    "end": 273,
                    "body": [
                        "    private static final String EVICTION_POLICY_TYPE_NAME = EvictionPolicy.class.getName();\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ]
                },
                "301-301:evictionIterator": {
                    "start": 301,
                    "end": 301,
                    "body": [
                        "    EvictionIterator evictionIterator; // @GuardedBy(\"evictionLock\")\n"
                    ],
                    "modifiers": [],
                    "types": [
                        [
                            "EvictionIterator",
                            "EvictionIterator"
                        ]
                    ]
                }
            }
        },
        "IdentityWrapper": {
            "start": 143,
            "end": 143,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "BaseGenericObjectPool",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "176-182:toString": {
                    "start": 176,
                    "end": 182,
                    "body": [
                        "        public String toString() {\n",
                        "            final StringBuilder builder = new StringBuilder();\n",
                        "            builder.append(\"IdentityWrapper [instance=\");\n",
                        "            builder.append(instance);\n",
                        "            builder.append(\"]\");\n",
                        "            return builder.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ]
                },
                "171-173:hashCode": {
                    "start": 171,
                    "end": 173,
                    "body": [
                        "        public int hashCode() {\n",
                        "            return System.identityHashCode(instance);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "hashCode()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/System",
                            "identityHashCode(java.lang.Object)"
                        ]
                    ]
                },
                "158-161:equals": {
                    "start": 158,
                    "end": 161,
                    "body": [
                        "        public boolean equals(final Object other) {\n",
                        "            return other instanceof IdentityWrapper\n",
                        "                    && ((IdentityWrapper) other).instance == instance;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override",
                        "SuppressWarnings(\"rawtypes\")"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "boolean",
                            "boolean"
                        ]
                    ],
                    "signature": "equals(Object)",
                    "parameters": [
                        "other"
                    ],
                    "calls": []
                },
                "166-168:getObject": {
                    "start": 166,
                    "end": 168,
                    "body": [
                        "        public T getObject() {\n",
                        "            return instance;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "T",
                            "T"
                        ]
                    ],
                    "signature": "getObject()",
                    "parameters": [],
                    "calls": []
                },
                "152-154:IdentityWrapper": {
                    "start": 152,
                    "end": 154,
                    "body": [
                        "        public IdentityWrapper(final T instance) {\n",
                        "            this.instance = instance;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "IdentityWrapper(T)",
                    "parameters": [
                        "instance"
                    ],
                    "calls": []
                }
            },
            "fields": {
                "145-145:instance": {
                    "start": 145,
                    "end": 145,
                    "body": [
                        "        private final T instance;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "T",
                            "T"
                        ]
                    ]
                }
            }
        },
        "StatsStore": {
            "start": 188,
            "end": 188,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "BaseGenericObjectPool",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "254-264:toString": {
                    "start": 254,
                    "end": 264,
                    "body": [
                        "        public String toString() {\n",
                        "            final StringBuilder builder = new StringBuilder();\n",
                        "            builder.append(\"StatsStore [\");\n",
                        "            builder.append(getCurrentValues());\n",
                        "            builder.append(\"], size=\");\n",
                        "            builder.append(size);\n",
                        "            builder.append(\", index=\");\n",
                        "            builder.append(index);\n",
                        "            builder.append(\"]\");\n",
                        "            return builder.toString();\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder()"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.String)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(java.lang.Object)"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "StatsStore",
                            "231-233:getCurrentValues"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "append(int)"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString()"
                        ]
                    ]
                },
                "240-251:getMean": {
                    "start": 240,
                    "end": 251,
                    "body": [
                        "        public long getMean() {\n",
                        "            double result = 0;\n",
                        "            int counter = 0;\n",
                        "            for (int i = 0; i < size; i++) {\n",
                        "                final long value = values[i].get();\n",
                        "                if (value != NULL) {\n",
                        "                    counter++;\n",
                        "                    result = result * ((counter - 1) / (double) counter) + value / (double) counter;\n",
                        "                }\n",
                        "            }\n",
                        "            return (long) result;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "getMean()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "get()"
                        ]
                    ]
                },
                "231-233:getCurrentValues": {
                    "start": 231,
                    "end": 233,
                    "body": [
                        "        synchronized List<AtomicLong> getCurrentValues() {\n",
                        "            return Arrays.stream(values, 0, index).collect(Collectors.toList());\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "synchronized"
                    ],
                    "return_types": [
                        [
                            "List<AtomicLong>",
                            "java.util.List<AtomicLong>"
                        ]
                    ],
                    "signature": "getCurrentValues()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/stream/Stream",
                            "collect(java.util.stream.Collector)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Arrays",
                            "stream(java.lang.Object[],int,int)"
                        ],
                        [
                            "library",
                            "java.base/java/util/stream/Collectors",
                            "toList()"
                        ]
                    ]
                },
                "218-224:add1": {
                    "start": 218,
                    "end": 224,
                    "body": [
                        "        synchronized void add1(final long value) {\n",
                        "            values[index].set(value);\n",
                        "            index++;\n",
                        "            if (index == size) {\n",
                        "                index = 0;\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "synchronized"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "add1(long)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "set(long)"
                        ]
                    ]
                },
                "208-210:add0": {
                    "start": 208,
                    "end": 210,
                    "body": [
                        "        void add0(final Duration value) {\n",
                        "            add1(value.toMillis());\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "add0(Duration)",
                    "parameters": [
                        "value"
                    ],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.BaseGenericObjectPool",
                            "StatsStore",
                            "218-224:add1"
                        ],
                        [
                            "library",
                            "java.base/java/time/Duration",
                            "toMillis()"
                        ]
                    ]
                },
                "200-206:StatsStore": {
                    "start": 200,
                    "end": 206,
                    "body": [
                        "        StatsStore(final int size) {\n",
                        "            this.size = size;\n",
                        "            values = new AtomicLong[size];\n",
                        "            for (int i = 0; i < size; i++) {\n",
                        "                values[i] = new AtomicLong(NULL);\n",
                        "            }\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "StatsStore(int)",
                    "parameters": [
                        "size"
                    ],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/atomic/AtomicLong",
                            "AtomicLong(long)"
                        ]
                    ]
                }
            },
            "fields": {
                "193-193:index": {
                    "start": 193,
                    "end": 193,
                    "body": [
                        "        private int index;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "192-192:size": {
                    "start": 192,
                    "end": 192,
                    "body": [
                        "        private final int size;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "191-191:values": {
                    "start": 191,
                    "end": 191,
                    "body": [
                        "        private final AtomicLong[] values;\n"
                    ],
                    "modifiers": [
                        "final",
                        "private"
                    ],
                    "types": [
                        [
                            "AtomicLong[]",
                            "java.util.concurrent.atomic.AtomicLong[]"
                        ]
                    ]
                },
                "190-190:NULL": {
                    "start": 190,
                    "end": 190,
                    "body": [
                        "        private static final int NULL = -1;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                }
            }
        },
        "Evictor": {
            "start": 107,
            "end": 107,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "BaseGenericObjectPool",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "129-131:setScheduledFuture": {
                    "start": 129,
                    "end": 131,
                    "body": [
                        "        void setScheduledFuture(final ScheduledFuture<?> scheduledFuture) {\n",
                        "            this.scheduledFuture = scheduledFuture;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "setScheduledFuture(ScheduledFuture<?>)",
                    "parameters": [
                        "scheduledFuture"
                    ],
                    "calls": []
                },
                "112-114:cancel": {
                    "start": 112,
                    "end": 114,
                    "body": [
                        "        void cancel() {\n",
                        "            scheduledFuture.cancel(false);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "cancel()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/Future",
                            "cancel(boolean)"
                        ]
                    ]
                }
            },
            "fields": {
                "109-109:scheduledFuture": {
                    "start": 109,
                    "end": 109,
                    "body": [
                        "        private ScheduledFuture<?> scheduledFuture;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "ScheduledFuture<?>",
                            "java.util.concurrent.ScheduledFuture<?>"
                        ]
                    ]
                }
            }
        },
        "new Consumer<PooledObject<T>>(...) { ... }": {
            "start": 381,
            "end": 390,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "BaseGenericObjectPool",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "378-390:accept": {
                    "start": 378,
                    "end": 390,
                    "body": [
                        "        allObjects\n",
                        "                .values()\n",
                        "                .forEach(\n",
                        "                        pooledObject -> {\n",
                        "                            synchronized (pooledObject) {\n",
                        "                                if (pooledObject.getState() == PooledObjectState.ALLOCATED\n",
                        "                                        && pooledObject.getLastUsedInstant().compareTo(timeout)\n",
                        "                                                <= 0) {\n",
                        "                                    pooledObject.markAbandoned();\n",
                        "                                    remove.add(pooledObject);\n",
                        "                                }\n",
                        "                            }\n",
                        "                        });\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "accept(PooledObject<T>)",
                    "parameters": [
                        "pooledObject"
                    ],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObject",
                            "getState"
                        ],
                        [
                            "library",
                            "java.base/java/time/Instant",
                            "compareTo"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObject",
                            "getLastUsedInstant"
                        ],
                        [
                            "library",
                            "org/apache/commons/pool2/PooledObject",
                            "markAbandoned"
                        ],
                        [
                            "library",
                            "java.base/java/util/ArrayList",
                            "add"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}