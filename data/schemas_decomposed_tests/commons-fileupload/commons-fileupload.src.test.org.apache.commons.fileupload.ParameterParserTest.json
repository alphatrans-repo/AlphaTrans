{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/commons-fileupload/src/test/java/org/apache/commons/fileupload/ParameterParserTest.java",
    "imports": {
        "24-24:import Map": {
            "start": 24,
            "end": 24,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "22-22:import Test": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "19-19:import static Assert.assertEquals": {
            "start": 19,
            "end": 19,
            "body": [
                "import static org.junit.Assert.assertEquals;\n"
            ]
        },
        "20-20:import static Assert.assertNull": {
            "start": 20,
            "end": 20,
            "body": [
                "import static org.junit.Assert.assertNull;\n"
            ]
        }
    },
    "classes": {
        "ParameterParserTest": {
            "start": 27,
            "end": 27,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "442-450:fileUpload199_test2_decomposed": {
                    "start": 442,
                    "end": 450,
                    "body": [
                        "    public void fileUpload199_test2_decomposed()  {\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        String s =\n",
                        "                \"Content-Disposition: form-data; name=\\\"file\\\";\"\n",
                        "                        + \" filename=\\\"=?ISO-8859-1?B?SWYgeW91IGNhbiByZWFkIHRoaXMgeW8=?=\"\n",
                        "                        + \" =?ISO-8859-2?B?dSB1bmRlcnN0YW5kIHRoZSBleGFtcGxlLg==?=\\\"\\r\\n\";\n",
                        "        Map<String, String> params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(\"If you can read this you understand the example.\", params.get(\"filename\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fileUpload199_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "432-439:fileUpload199_test1_decomposed": {
                    "start": 432,
                    "end": 439,
                    "body": [
                        "    public void fileUpload199_test1_decomposed()  {\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        String s =\n",
                        "                \"Content-Disposition: form-data; name=\\\"file\\\";\"\n",
                        "                        + \" filename=\\\"=?ISO-8859-1?B?SWYgeW91IGNhbiByZWFkIHRoaXMgeW8=?=\"\n",
                        "                        + \" =?ISO-8859-2?B?dSB1bmRlcnN0YW5kIHRoZSBleGFtcGxlLg==?=\\\"\\r\\n\";\n",
                        "        Map<String, String> params = parser.parse0(s, new char[] {',', ';'});\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fileUpload199_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ]
                    ]
                },
                "427-429:fileUpload199_test0_decomposed": {
                    "start": 427,
                    "end": 429,
                    "body": [
                        "    public void fileUpload199_test0_decomposed()  {\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "fileUpload199_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ]
                    ]
                },
                "413-424:testFileUpload139_test6_decomposed": {
                    "start": 413,
                    "end": 424,
                    "body": [
                        "    public void testFileUpload139_test6_decomposed()  {\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        String s = \"Content-type: multipart/form-data , boundary=AaB03x\";\n",
                        "        Map<String, String> params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(\"AaB03x\", params.get(\"boundary\"));\n",
                        "        s = \"Content-type: multipart/form-data, boundary=AaB03x\";\n",
                        "        params = parser.parse0(s, new char[] {';', ','});\n",
                        "        assertEquals(\"AaB03x\", params.get(\"boundary\"));\n",
                        "        s = \"Content-type: multipart/mixed, boundary=BbC04y\";\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(\"BbC04y\", params.get(\"boundary\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileUpload139_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "400-410:testFileUpload139_test5_decomposed": {
                    "start": 400,
                    "end": 410,
                    "body": [
                        "    public void testFileUpload139_test5_decomposed()  {\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        String s = \"Content-type: multipart/form-data , boundary=AaB03x\";\n",
                        "        Map<String, String> params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(\"AaB03x\", params.get(\"boundary\"));\n",
                        "        s = \"Content-type: multipart/form-data, boundary=AaB03x\";\n",
                        "        params = parser.parse0(s, new char[] {';', ','});\n",
                        "        assertEquals(\"AaB03x\", params.get(\"boundary\"));\n",
                        "        s = \"Content-type: multipart/mixed, boundary=BbC04y\";\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileUpload139_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "389-397:testFileUpload139_test4_decomposed": {
                    "start": 389,
                    "end": 397,
                    "body": [
                        "    public void testFileUpload139_test4_decomposed()  {\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        String s = \"Content-type: multipart/form-data , boundary=AaB03x\";\n",
                        "        Map<String, String> params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(\"AaB03x\", params.get(\"boundary\"));\n",
                        "        s = \"Content-type: multipart/form-data, boundary=AaB03x\";\n",
                        "        params = parser.parse0(s, new char[] {';', ','});\n",
                        "        assertEquals(\"AaB03x\", params.get(\"boundary\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileUpload139_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "379-386:testFileUpload139_test3_decomposed": {
                    "start": 379,
                    "end": 386,
                    "body": [
                        "    public void testFileUpload139_test3_decomposed()  {\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        String s = \"Content-type: multipart/form-data , boundary=AaB03x\";\n",
                        "        Map<String, String> params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(\"AaB03x\", params.get(\"boundary\"));\n",
                        "        s = \"Content-type: multipart/form-data, boundary=AaB03x\";\n",
                        "        params = parser.parse0(s, new char[] {';', ','});\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileUpload139_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "371-376:testFileUpload139_test2_decomposed": {
                    "start": 371,
                    "end": 376,
                    "body": [
                        "    public void testFileUpload139_test2_decomposed()  {\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        String s = \"Content-type: multipart/form-data , boundary=AaB03x\";\n",
                        "        Map<String, String> params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(\"AaB03x\", params.get(\"boundary\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileUpload139_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "364-368:testFileUpload139_test1_decomposed": {
                    "start": 364,
                    "end": 368,
                    "body": [
                        "    public void testFileUpload139_test1_decomposed()  {\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        String s = \"Content-type: multipart/form-data , boundary=AaB03x\";\n",
                        "        Map<String, String> params = parser.parse0(s, new char[] {',', ';'});\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileUpload139_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ]
                    ]
                },
                "359-361:testFileUpload139_test0_decomposed": {
                    "start": 359,
                    "end": 361,
                    "body": [
                        "    public void testFileUpload139_test0_decomposed()  {\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testFileUpload139_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ]
                    ]
                },
                "345-356:testParsingEscapedChars_test5_decomposed": {
                    "start": 345,
                    "end": 356,
                    "body": [
                        "    public void testParsingEscapedChars_test5_decomposed()  {\n",
                        "        String s = \"param = \\\"stuff\\\\\\\"; more stuff\\\"\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(1, params.size());\n",
                        "        assertEquals(\"stuff\\\\\\\"; more stuff\", params.get(\"param\"));\n",
                        "        s = \"param = \\\"stuff\\\\\\\\\\\"; anotherparam\";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "        assertEquals(2, params.size());\n",
                        "        assertEquals(\"stuff\\\\\\\\\", params.get(\"param\"));\n",
                        "        assertNull(params.get(\"anotherparam\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsingEscapedChars_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "size()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull(java.lang.Object)"
                        ]
                    ]
                },
                "332-342:testParsingEscapedChars_test4_decomposed": {
                    "start": 332,
                    "end": 342,
                    "body": [
                        "    public void testParsingEscapedChars_test4_decomposed()  {\n",
                        "        String s = \"param = \\\"stuff\\\\\\\"; more stuff\\\"\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(1, params.size());\n",
                        "        assertEquals(\"stuff\\\\\\\"; more stuff\", params.get(\"param\"));\n",
                        "        s = \"param = \\\"stuff\\\\\\\\\\\"; anotherparam\";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "        assertEquals(2, params.size());\n",
                        "        assertEquals(\"stuff\\\\\\\\\", params.get(\"param\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsingEscapedChars_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "size()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "321-329:testParsingEscapedChars_test3_decomposed": {
                    "start": 321,
                    "end": 329,
                    "body": [
                        "    public void testParsingEscapedChars_test3_decomposed()  {\n",
                        "        String s = \"param = \\\"stuff\\\\\\\"; more stuff\\\"\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(1, params.size());\n",
                        "        assertEquals(\"stuff\\\\\\\"; more stuff\", params.get(\"param\"));\n",
                        "        s = \"param = \\\"stuff\\\\\\\\\\\"; anotherparam\";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsingEscapedChars_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "size()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "312-318:testParsingEscapedChars_test2_decomposed": {
                    "start": 312,
                    "end": 318,
                    "body": [
                        "    public void testParsingEscapedChars_test2_decomposed()  {\n",
                        "        String s = \"param = \\\"stuff\\\\\\\"; more stuff\\\"\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(1, params.size());\n",
                        "        assertEquals(\"stuff\\\\\\\"; more stuff\", params.get(\"param\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsingEscapedChars_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "size()"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "305-309:testParsingEscapedChars_test1_decomposed": {
                    "start": 305,
                    "end": 309,
                    "body": [
                        "    public void testParsingEscapedChars_test1_decomposed()  {\n",
                        "        String s = \"param = \\\"stuff\\\\\\\"; more stuff\\\"\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsingEscapedChars_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ]
                    ]
                },
                "299-302:testParsingEscapedChars_test0_decomposed": {
                    "start": 299,
                    "end": 302,
                    "body": [
                        "    public void testParsingEscapedChars_test0_decomposed()  {\n",
                        "        String s = \"param = \\\"stuff\\\\\\\"; more stuff\\\"\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsingEscapedChars_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ]
                    ]
                },
                "290-296:testContentTypeParsing_test3_decomposed": {
                    "start": 290,
                    "end": 296,
                    "body": [
                        "    public void testContentTypeParsing_test3_decomposed()  {\n",
                        "        String s = \"text/plain; Charset=UTF-8\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        parser.setLowerCaseNames(true);\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(\"UTF-8\", params.get(\"charset\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testContentTypeParsing_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "181-183:setLowerCaseNames"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "282-287:testContentTypeParsing_test2_decomposed": {
                    "start": 282,
                    "end": 287,
                    "body": [
                        "    public void testContentTypeParsing_test2_decomposed()  {\n",
                        "        String s = \"text/plain; Charset=UTF-8\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        parser.setLowerCaseNames(true);\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testContentTypeParsing_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "181-183:setLowerCaseNames"
                        ]
                    ]
                },
                "275-279:testContentTypeParsing_test1_decomposed": {
                    "start": 275,
                    "end": 279,
                    "body": [
                        "    public void testContentTypeParsing_test1_decomposed()  {\n",
                        "        String s = \"text/plain; Charset=UTF-8\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        parser.setLowerCaseNames(true);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testContentTypeParsing_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "181-183:setLowerCaseNames"
                        ]
                    ]
                },
                "269-272:testContentTypeParsing_test0_decomposed": {
                    "start": 269,
                    "end": 272,
                    "body": [
                        "    public void testContentTypeParsing_test0_decomposed()  {\n",
                        "        String s = \"text/plain; Charset=UTF-8\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testContentTypeParsing_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ]
                    ]
                },
                "238-266:testParsing_test11_decomposed": {
                    "start": 238,
                    "end": 266,
                    "body": [
                        "    public void testParsing_test11_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        s = \"  test  , test1=stuff   ,  , test2=, test3, \";\n",
                        "        params = parser.parse1(s, ',');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(null, params.get(\"test2\"));\n",
                        "        assertEquals(null, params.get(\"test3\"));\n",
                        "        s = \"  test\";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        s = \"  \";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "        assertEquals(0, params.size());\n",
                        "        s = \" = stuff \";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "        assertEquals(0, params.size());\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test11_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "size()"
                        ]
                    ]
                },
                "208-235:testParsing_test10_decomposed": {
                    "start": 208,
                    "end": 235,
                    "body": [
                        "    public void testParsing_test10_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        s = \"  test  , test1=stuff   ,  , test2=, test3, \";\n",
                        "        params = parser.parse1(s, ',');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(null, params.get(\"test2\"));\n",
                        "        assertEquals(null, params.get(\"test3\"));\n",
                        "        s = \"  test\";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        s = \"  \";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "        assertEquals(0, params.size());\n",
                        "        s = \" = stuff \";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test10_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(long,long)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "size()"
                        ]
                    ]
                },
                "181-205:testParsing_test9_decomposed": {
                    "start": 181,
                    "end": 205,
                    "body": [
                        "    public void testParsing_test9_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        s = \"  test  , test1=stuff   ,  , test2=, test3, \";\n",
                        "        params = parser.parse1(s, ',');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(null, params.get(\"test2\"));\n",
                        "        assertEquals(null, params.get(\"test3\"));\n",
                        "        s = \"  test\";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        s = \"  \";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test9_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ]
                    ]
                },
                "156-178:testParsing_test8_decomposed": {
                    "start": 156,
                    "end": 178,
                    "body": [
                        "    public void testParsing_test8_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        s = \"  test  , test1=stuff   ,  , test2=, test3, \";\n",
                        "        params = parser.parse1(s, ',');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(null, params.get(\"test2\"));\n",
                        "        assertEquals(null, params.get(\"test3\"));\n",
                        "        s = \"  test\";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test8_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ]
                    ]
                },
                "132-153:testParsing_test7_decomposed": {
                    "start": 132,
                    "end": 153,
                    "body": [
                        "    public void testParsing_test7_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        s = \"  test  , test1=stuff   ,  , test2=, test3, \";\n",
                        "        params = parser.parse1(s, ',');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(null, params.get(\"test2\"));\n",
                        "        assertEquals(null, params.get(\"test3\"));\n",
                        "        s = \"  test\";\n",
                        "        params = parser.parse1(s, ';');\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test7_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ]
                    ]
                },
                "110-129:testParsing_test6_decomposed": {
                    "start": 110,
                    "end": 129,
                    "body": [
                        "    public void testParsing_test6_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        s = \"  test  , test1=stuff   ,  , test2=, test3, \";\n",
                        "        params = parser.parse1(s, ',');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(null, params.get(\"test2\"));\n",
                        "        assertEquals(null, params.get(\"test3\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test6_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ]
                    ]
                },
                "92-107:testParsing_test5_decomposed": {
                    "start": 92,
                    "end": 107,
                    "body": [
                        "    public void testParsing_test5_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        s = \"  test  , test1=stuff   ,  , test2=, test3, \";\n",
                        "        params = parser.parse1(s, ',');\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test5_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ]
                    ]
                },
                "76-89:testParsing_test4_decomposed": {
                    "start": 76,
                    "end": 89,
                    "body": [
                        "    public void testParsing_test4_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test4_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ]
                    ]
                },
                "64-73:testParsing_test3_decomposed": {
                    "start": 64,
                    "end": 73,
                    "body": [
                        "    public void testParsing_test3_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "        params = parser.parse0(s, new char[] {',', ';'});\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test3_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "193-209:parse0"
                        ]
                    ]
                },
                "53-61:testParsing_test2_decomposed": {
                    "start": 53,
                    "end": 61,
                    "body": [
                        "    public void testParsing_test2_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "        assertEquals(null, params.get(\"test\"));\n",
                        "        assertEquals(\"stuff\", params.get(\"test1\"));\n",
                        "        assertEquals(\"stuff; stuff\", params.get(\"test2\"));\n",
                        "        assertEquals(\"\\\"stuff\", params.get(\"test3\"));\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test2_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals(java.lang.Object,java.lang.Object)"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "get(java.lang.Object)"
                        ]
                    ]
                },
                "46-50:testParsing_test1_decomposed": {
                    "start": 46,
                    "end": 50,
                    "body": [
                        "    public void testParsing_test1_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "        Map<String, String> params = parser.parse1(s, ';');\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test1_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "218-223:parse1"
                        ]
                    ]
                },
                "40-43:testParsing_test0_decomposed": {
                    "start": 40,
                    "end": 43,
                    "body": [
                        "    public void testParsing_test0_decomposed()  {\n",
                        "        String s = \"test; test1 =  stuff   ; test2 =  \\\"stuff; stuff\\\"; test3=\\\"stuff\";\n",
                        "        ParameterParser parser = new ParameterParser();\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "testParsing_test0_decomposed()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.ParameterParser",
                            "ParameterParser",
                            "55-57:ParameterParser"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}