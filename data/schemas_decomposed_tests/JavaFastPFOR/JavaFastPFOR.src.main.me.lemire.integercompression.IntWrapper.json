{
    "path": "java_projects/cleaned_final_projects_decomposed_tests/JavaFastPFOR/src/main/java/me/lemire/integercompression/IntWrapper.java",
    "imports": {},
    "classes": {
        "IntWrapper": {
            "start": 14,
            "end": 14,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "Number"
            ],
            "methods": {
                "94-96:toString": {
                    "start": 94,
                    "end": 96,
                    "body": [
                        "        public String toString() {\n",
                        "                return Integer.toString(this.value);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "String",
                            "java.lang.String"
                        ]
                    ],
                    "signature": "toString()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "toString(int)"
                        ]
                    ]
                },
                "79-81:longValue": {
                    "start": 79,
                    "end": 81,
                    "body": [
                        "        public long longValue() {\n",
                        "                return this.value;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "long",
                            "long"
                        ]
                    ],
                    "signature": "longValue()",
                    "parameters": [],
                    "calls": []
                },
                "74-76:intValue": {
                    "start": 74,
                    "end": 76,
                    "body": [
                        "        public int intValue() {\n",
                        "                return this.value;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "intValue()",
                    "parameters": [],
                    "calls": []
                },
                "55-57:floatValue": {
                    "start": 55,
                    "end": 57,
                    "body": [
                        "        public float floatValue() {\n",
                        "                return this.value;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "float",
                            "float"
                        ]
                    ],
                    "signature": "floatValue()",
                    "parameters": [],
                    "calls": []
                },
                "50-52:doubleValue": {
                    "start": 50,
                    "end": 52,
                    "body": [
                        "        public double doubleValue() {\n",
                        "                return this.value;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "double",
                            "double"
                        ]
                    ],
                    "signature": "doubleValue()",
                    "parameters": [],
                    "calls": []
                },
                "89-91:set": {
                    "start": 89,
                    "end": 91,
                    "body": [
                        "        public void set(final int value) {\n",
                        "                this.value = value;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "set(int)",
                    "parameters": [
                        "value"
                    ],
                    "calls": []
                },
                "69-71:increment": {
                    "start": 69,
                    "end": 71,
                    "body": [
                        "        public void increment() {\n",
                        "                this.value++;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "increment()",
                    "parameters": [],
                    "calls": []
                },
                "62-64:get": {
                    "start": 62,
                    "end": 64,
                    "body": [
                        "        public int get() {\n",
                        "                return this.value;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "int",
                            "int"
                        ]
                    ],
                    "signature": "get()",
                    "parameters": [],
                    "calls": []
                },
                "45-47:add": {
                    "start": 45,
                    "end": 47,
                    "body": [
                        "        public void add(int v) {\n",
                        "                this.value += v;\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "add(int)",
                    "parameters": [
                        "v"
                    ],
                    "calls": []
                },
                "24-26:IntWrapper1": {
                    "start": 24,
                    "end": 26,
                    "body": [
                        "        public static IntWrapper IntWrapper1() {\n",
                        "                return new IntWrapper(0);\n",
                        "        }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [
                        "public",
                        "static"
                    ],
                    "return_types": [
                        [
                            "IntWrapper",
                            "IntWrapper"
                        ]
                    ],
                    "signature": "IntWrapper1()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ]
                    ]
                },
                "21-23:IntWrapper": {
                    "start": 21,
                    "end": 23,
                    "body": [
                        "        public IntWrapper(final int v) {\n",
                        "                this.value = v;\n",
                        "        }\n"
                    ],
                    "is_constructor": true,
                    "annotations": [],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "IntWrapper(int)",
                    "parameters": [
                        "v"
                    ],
                    "calls": []
                }
            },
            "fields": {
                "16-16:value": {
                    "start": 16,
                    "end": 16,
                    "body": [
                        "        private int value;\n"
                    ],
                    "modifiers": [
                        "private"
                    ],
                    "types": [
                        [
                            "int",
                            "int"
                        ]
                    ]
                },
                "15-15:serialVersionUID": {
                    "start": 15,
                    "end": 15,
                    "body": [
                        "        private static final long serialVersionUID = 1L;\n"
                    ],
                    "modifiers": [
                        "final",
                        "static",
                        "private"
                    ],
                    "types": [
                        [
                            "long",
                            "long"
                        ]
                    ]
                }
            }
        }
    }
}